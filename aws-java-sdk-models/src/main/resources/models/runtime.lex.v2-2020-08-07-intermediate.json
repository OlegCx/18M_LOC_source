{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "EnumSetterOverload", "ClientConstructors", "ClientMutationMethods" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "s3ArnableFields" : null,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : true
  },
  "metadata" : {
    "apiVersion" : "2020-08-07",
    "asyncClient" : "AmazonLexRuntimeV2AsyncClient",
    "asyncClientBuilderClassName" : "AmazonLexRuntimeV2AsyncClientBuilder",
    "asyncInterface" : "AmazonLexRuntimeV2Async",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : "",
    "cucumberModuleInjectorClassName" : "AmazonLexRuntimeV2ModuleInjector",
    "defaultEndpoint" : "runtime-v2-lex.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "runtime-v2-lex.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p/>",
    "endpointPrefix" : "runtime-v2-lex",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.lexruntimev2",
    "packagePath" : "com/amazonaws/services/lexruntimev2",
    "protocol" : "rest-json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "Lex Runtime V2",
    "serviceFullName" : "Amazon Lex Runtime V2",
    "serviceId" : "Lex Runtime V2",
    "serviceName" : "Lex Runtime V2",
    "signingName" : "lex",
    "smokeTestsPackageName" : "com.amazonaws.services.lexruntimev2.smoketests",
    "syncClient" : "AmazonLexRuntimeV2Client",
    "syncClientBuilderClassName" : "AmazonLexRuntimeV2ClientBuilder",
    "syncInterface" : "AmazonLexRuntimeV2",
    "uid" : "runtime.lex.v2-2020-08-07",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "DeleteSession" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DeleteSessionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DeleteSessionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DeleteSessionRequest, DeleteSessionResult>",
      "asyncReturnType" : "DeleteSessionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Removes session information for a specified bot, alias, and user ID. </p> <p>You can use this operation to restart a conversation with a bot. When you remove a session, the entire history of the session is removed so that you can start again.</p> <p>You don't need to delete a session. Sessions have a time limit and will expire. Set the session time limit when you create the bot. The default is 5 minutes, but you can specify anything between 1 minute and 24 hours.</p> <p>If you specify a bot or alias ID that doesn't exist, you receive a <code>BadRequestException.</code> </p> <p>If the locale doesn't exist in the bot, or if the locale hasn't been enables for the alias, you receive a <code>BadRequestException</code>.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p/>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p/>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p/>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p/>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p/>",
        "httpStatusCode" : 409
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteSessionRequest",
        "variableName" : "deleteSessionRequest",
        "variableType" : "DeleteSessionRequest",
        "documentation" : "",
        "simpleType" : "DeleteSessionRequest",
        "variableSetterType" : "DeleteSessionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "deleteSession",
      "operationName" : "DeleteSession",
      "returnType" : {
        "returnType" : "DeleteSessionResult",
        "documentation" : null
      },
      "syncReturnType" : "DeleteSessionResult"
    },
    "GetSession" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetSessionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetSessionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetSessionRequest, GetSessionResult>",
      "asyncReturnType" : "GetSessionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Returns session information for a specified bot, alias, and user.</p> <p>For example, you can use this operation to retrieve session information for a user that has left a long-running session in use.</p> <p>If the bot, alias, or session identifier doesn't exist, Amazon Lex returns a <code>BadRequestException</code>. If the locale doesn't exist or is not enabled for the alias, you receive a <code>BadRequestException</code>.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p/>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p/>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p/>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p/>",
        "httpStatusCode" : 500
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetSessionRequest",
        "variableName" : "getSessionRequest",
        "variableType" : "GetSessionRequest",
        "documentation" : "",
        "simpleType" : "GetSessionRequest",
        "variableSetterType" : "GetSessionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getSession",
      "operationName" : "GetSession",
      "returnType" : {
        "returnType" : "GetSessionResult",
        "documentation" : null
      },
      "syncReturnType" : "GetSessionResult"
    },
    "PutSession" : {
      "asyncCallableType" : "java.util.concurrent.Callable<PutSessionResult>",
      "asyncFutureType" : "java.util.concurrent.Future<PutSessionResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<PutSessionRequest, PutSessionResult>",
      "asyncReturnType" : "PutSessionResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Creates a new session or modifies an existing session with an Amazon Lex bot. Use this operation to enable your application to set the state of the bot.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p/>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p/>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p/>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p/>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p/>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "DependencyFailedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 424
      }, {
        "exceptionName" : "BadGatewayException",
        "documentation" : "<p/>",
        "httpStatusCode" : 502
      } ],
      "hasBlobMemberAsPayload" : true,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutSessionRequest",
        "variableName" : "putSessionRequest",
        "variableType" : "PutSessionRequest",
        "documentation" : "",
        "simpleType" : "PutSessionRequest",
        "variableSetterType" : "PutSessionRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "putSession",
      "operationName" : "PutSession",
      "returnType" : {
        "returnType" : "PutSessionResult",
        "documentation" : null
      },
      "syncReturnType" : "PutSessionResult"
    },
    "RecognizeText" : {
      "asyncCallableType" : "java.util.concurrent.Callable<RecognizeTextResult>",
      "asyncFutureType" : "java.util.concurrent.Future<RecognizeTextResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RecognizeTextRequest, RecognizeTextResult>",
      "asyncReturnType" : "RecognizeTextResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sends user input to Amazon Lex. Client applications use this API to send requests to Amazon Lex at runtime. Amazon Lex then interprets the user input using the machine learning model that it build for the bot.</p> <p>In response, Amazon Lex returns the next message to convey to the user and an optional response card to display.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p/>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p/>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p/>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p/>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p/>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "DependencyFailedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 424
      }, {
        "exceptionName" : "BadGatewayException",
        "documentation" : "<p/>",
        "httpStatusCode" : 502
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RecognizeTextRequest",
        "variableName" : "recognizeTextRequest",
        "variableType" : "RecognizeTextRequest",
        "documentation" : "",
        "simpleType" : "RecognizeTextRequest",
        "variableSetterType" : "RecognizeTextRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "recognizeText",
      "operationName" : "RecognizeText",
      "returnType" : {
        "returnType" : "RecognizeTextResult",
        "documentation" : null
      },
      "syncReturnType" : "RecognizeTextResult"
    },
    "RecognizeUtterance" : {
      "asyncCallableType" : "java.util.concurrent.Callable<RecognizeUtteranceResult>",
      "asyncFutureType" : "java.util.concurrent.Future<RecognizeUtteranceResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<RecognizeUtteranceRequest, RecognizeUtteranceResult>",
      "asyncReturnType" : "RecognizeUtteranceResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p>Sends user input to Amazon Lex. You can send text or speech. Clients use this API to send text and audio requests to Amazon Lex at runtime. Amazon Lex interprets the user input using the machine learning model built for the bot.</p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p/>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p/>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p/>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p/>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ConflictException",
        "documentation" : "<p/>",
        "httpStatusCode" : 409
      }, {
        "exceptionName" : "DependencyFailedException",
        "documentation" : "<p/>",
        "httpStatusCode" : 424
      }, {
        "exceptionName" : "BadGatewayException",
        "documentation" : "<p/>",
        "httpStatusCode" : 502
      } ],
      "hasBlobMemberAsPayload" : true,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RecognizeUtteranceRequest",
        "variableName" : "recognizeUtteranceRequest",
        "variableType" : "RecognizeUtteranceRequest",
        "documentation" : "",
        "simpleType" : "RecognizeUtteranceRequest",
        "variableSetterType" : "RecognizeUtteranceRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "recognizeUtterance",
      "operationName" : "RecognizeUtterance",
      "returnType" : {
        "returnType" : "RecognizeUtteranceResult",
        "documentation" : null
      },
      "syncReturnType" : "RecognizeUtteranceResult"
    }
  },
  "shapes" : {
    "AccessDeniedException" : {
      "c2jName" : "AccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "AccessDeniedException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.AccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "AccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AccessDeniedException",
        "variableName" : "accessDeniedException",
        "variableType" : "AccessDeniedException",
        "documentation" : null,
        "simpleType" : "AccessDeniedException",
        "variableSetterType" : "AccessDeniedException"
      },
      "wrapper" : false
    },
    "ActiveContext" : {
      "c2jName" : "ActiveContext",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Contains information about the contexts that a user is using in a session. You can configure Amazon Lex to set a context when an intent is fulfilled, or you can set a context using the , , or operations.</p> <p>Use a context to indicate to Amazon Lex intents that should be used as follow-up intents. For example, if the active context is <code>order-fulfilled</code>, only intents that have <code>order-fulfilled</code> configured as a trigger are considered for follow up.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.ActiveContext",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "ActiveContextName",
        "deprecated" : false,
        "documentation" : "<p>The name of the context.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the context.</p>\n@param name The name of the context.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the context.</p>\n@return The name of the context.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the context.</p>\n@param name The name of the context.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the context.</p>\n@param name The name of the context.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the context.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "timeToLive",
        "c2jShape" : "ActiveContextTimeToLive",
        "deprecated" : false,
        "documentation" : "<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@param timeToLive Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTimeToLive",
        "getterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@return Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.*/",
        "getterMethodName" : "getTimeToLive",
        "getterModel" : {
          "returnType" : "ActiveContextTimeToLive",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "timeToLive",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "timeToLive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "TimeToLive",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@param timeToLive Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.*/",
        "setterMethodName" : "setTimeToLive",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ActiveContextTimeToLive",
          "variableName" : "timeToLive",
          "variableType" : "ActiveContextTimeToLive",
          "documentation" : "",
          "simpleType" : "ActiveContextTimeToLive",
          "variableSetterType" : "ActiveContextTimeToLive"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@param timeToLive Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ActiveContextTimeToLive",
          "variableName" : "timeToLive",
          "variableType" : "ActiveContextTimeToLive",
          "documentation" : "<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>",
          "simpleType" : "ActiveContextTimeToLive",
          "variableSetterType" : "ActiveContextTimeToLive"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "contextAttributes",
        "c2jShape" : "ActiveContextParametersMap",
        "deprecated" : false,
        "documentation" : "<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@param contextAttributes A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContextAttributes",
        "getterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@return A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.*/",
        "getterMethodName" : "getContextAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "contextAttributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "contextAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "Text",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "sensitive" : true,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "ContextAttributes",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@param contextAttributes A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.*/",
        "setterMethodName" : "setContextAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "contextAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@param contextAttributes A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "contextAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContextAttributes" : {
          "c2jName" : "contextAttributes",
          "c2jShape" : "ActiveContextParametersMap",
          "deprecated" : false,
          "documentation" : "<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@param contextAttributes A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContextAttributes",
          "getterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@return A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.*/",
          "getterMethodName" : "getContextAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "contextAttributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "contextAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "Text",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "sensitive" : true,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "ContextAttributes",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@param contextAttributes A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.*/",
          "setterMethodName" : "setContextAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "contextAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>\n@param contextAttributes A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "contextAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>A lis tof contexts active for the request. A context can be activated when a previous intent is fulfilled, or by including the context in the request.</p> <p>If you don't specify a list of contexts, Amazon Lex will use the current list of contexts for the session. If you specify an empty list, all contexts for the session are cleared. </p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "ActiveContextName",
          "deprecated" : false,
          "documentation" : "<p>The name of the context.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the context.</p>\n@param name The name of the context.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the context.</p>\n@return The name of the context.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the context.</p>\n@param name The name of the context.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the context.</p>\n@param name The name of the context.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the context.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TimeToLive" : {
          "c2jName" : "timeToLive",
          "c2jShape" : "ActiveContextTimeToLive",
          "deprecated" : false,
          "documentation" : "<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@param timeToLive Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTimeToLive",
          "getterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@return Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.*/",
          "getterMethodName" : "getTimeToLive",
          "getterModel" : {
            "returnType" : "ActiveContextTimeToLive",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "timeToLive",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "timeToLive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "TimeToLive",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@param timeToLive Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.*/",
          "setterMethodName" : "setTimeToLive",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ActiveContextTimeToLive",
            "variableName" : "timeToLive",
            "variableType" : "ActiveContextTimeToLive",
            "documentation" : "",
            "simpleType" : "ActiveContextTimeToLive",
            "variableSetterType" : "ActiveContextTimeToLive"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>\n@param timeToLive Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ActiveContextTimeToLive",
            "variableName" : "timeToLive",
            "variableType" : "ActiveContextTimeToLive",
            "documentation" : "<p>Indicates the number of turns or seconds that the context is active. Once the time to live expires, the context is no longer returned in a response.</p>",
            "simpleType" : "ActiveContextTimeToLive",
            "variableSetterType" : "ActiveContextTimeToLive"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "name", "timeToLive" ],
      "shapeName" : "ActiveContext",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ActiveContext",
        "variableName" : "activeContext",
        "variableType" : "ActiveContext",
        "documentation" : null,
        "simpleType" : "ActiveContext",
        "variableSetterType" : "ActiveContext"
      },
      "wrapper" : false
    },
    "ActiveContextTimeToLive" : {
      "c2jName" : "ActiveContextTimeToLive",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The time that a context is active. You can specify the time to live in seconds or in conversation turns.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.ActiveContextTimeToLive",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "timeToLiveInSeconds",
        "c2jShape" : "ActiveContextTimeToLiveInSeconds",
        "deprecated" : false,
        "documentation" : "<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@param timeToLiveInSeconds The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTimeToLiveInSeconds",
        "getterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@return The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).*/",
        "getterMethodName" : "getTimeToLiveInSeconds",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "timeToLiveInSeconds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "timeToLiveInSeconds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TimeToLiveInSeconds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@param timeToLiveInSeconds The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).*/",
        "setterMethodName" : "setTimeToLiveInSeconds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "timeToLiveInSeconds",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@param timeToLiveInSeconds The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "timeToLiveInSeconds",
          "variableType" : "Integer",
          "documentation" : "<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "turnsToLive",
        "c2jShape" : "ActiveContextTurnsToLive",
        "deprecated" : false,
        "documentation" : "<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@param turnsToLive The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTurnsToLive",
        "getterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@return The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.*/",
        "getterMethodName" : "getTurnsToLive",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "turnsToLive",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "turnsToLive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "TurnsToLive",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@param turnsToLive The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.*/",
        "setterMethodName" : "setTurnsToLive",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "turnsToLive",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@param turnsToLive The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "turnsToLive",
          "variableType" : "Integer",
          "documentation" : "<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TimeToLiveInSeconds" : {
          "c2jName" : "timeToLiveInSeconds",
          "c2jShape" : "ActiveContextTimeToLiveInSeconds",
          "deprecated" : false,
          "documentation" : "<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@param timeToLiveInSeconds The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTimeToLiveInSeconds",
          "getterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@return The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).*/",
          "getterMethodName" : "getTimeToLiveInSeconds",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "timeToLiveInSeconds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "timeToLiveInSeconds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TimeToLiveInSeconds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@param timeToLiveInSeconds The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).*/",
          "setterMethodName" : "setTimeToLiveInSeconds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "timeToLiveInSeconds",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>\n@param timeToLiveInSeconds The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "timeToLiveInSeconds",
            "variableType" : "Integer",
            "documentation" : "<p>The number of seconds that the context is active. You can specify between 5 and 86400 seconds (24 hours).</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "TurnsToLive" : {
          "c2jName" : "turnsToLive",
          "c2jShape" : "ActiveContextTurnsToLive",
          "deprecated" : false,
          "documentation" : "<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@param turnsToLive The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTurnsToLive",
          "getterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@return The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.*/",
          "getterMethodName" : "getTurnsToLive",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "turnsToLive",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "turnsToLive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "TurnsToLive",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@param turnsToLive The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.*/",
          "setterMethodName" : "setTurnsToLive",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "turnsToLive",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>\n@param turnsToLive The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "turnsToLive",
            "variableType" : "Integer",
            "documentation" : "<p>The number of turns that the context is active. You can specify up to 20 turns. Each request and response from the bot is a turn.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "timeToLiveInSeconds", "turnsToLive" ],
      "shapeName" : "ActiveContextTimeToLive",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ActiveContextTimeToLive",
        "variableName" : "activeContextTimeToLive",
        "variableType" : "ActiveContextTimeToLive",
        "documentation" : null,
        "simpleType" : "ActiveContextTimeToLive",
        "variableSetterType" : "ActiveContextTimeToLive"
      },
      "wrapper" : false
    },
    "BadGatewayException" : {
      "c2jName" : "BadGatewayException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "BadGatewayException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.BadGatewayException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "BadGatewayException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BadGatewayException",
        "variableName" : "badGatewayException",
        "variableType" : "BadGatewayException",
        "documentation" : null,
        "simpleType" : "BadGatewayException",
        "variableSetterType" : "BadGatewayException"
      },
      "wrapper" : false
    },
    "Button" : {
      "c2jName" : "Button",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A button that appears on a response card show to the user.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.Button",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "text",
        "c2jShape" : "ButtonText",
        "deprecated" : false,
        "documentation" : "<p>The text that is displayed on the button.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@param text The text that is displayed on the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withText",
        "getterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@return The text that is displayed on the button.*/",
        "getterMethodName" : "getText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "text",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "text",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Text",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@param text The text that is displayed on the button.*/",
        "setterMethodName" : "setText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@param text The text that is displayed on the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "<p>The text that is displayed on the button.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "value",
        "c2jShape" : "ButtonValue",
        "deprecated" : false,
        "documentation" : "<p>The value returned to Amazon Lex when a user chooses the button.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@param value The value returned to Amazon Lex when a user chooses the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@return The value returned to Amazon Lex when a user chooses the button.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "value",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@param value The value returned to Amazon Lex when a user chooses the button.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@param value The value returned to Amazon Lex when a user chooses the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "value",
          "variableType" : "String",
          "documentation" : "<p>The value returned to Amazon Lex when a user chooses the button.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Text" : {
          "c2jName" : "text",
          "c2jShape" : "ButtonText",
          "deprecated" : false,
          "documentation" : "<p>The text that is displayed on the button.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@param text The text that is displayed on the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withText",
          "getterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@return The text that is displayed on the button.*/",
          "getterMethodName" : "getText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "text",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "text",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Text",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@param text The text that is displayed on the button.*/",
          "setterMethodName" : "setText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text that is displayed on the button.</p>\n@param text The text that is displayed on the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "<p>The text that is displayed on the button.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Value" : {
          "c2jName" : "value",
          "c2jShape" : "ButtonValue",
          "deprecated" : false,
          "documentation" : "<p>The value returned to Amazon Lex when a user chooses the button.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@param value The value returned to Amazon Lex when a user chooses the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@return The value returned to Amazon Lex when a user chooses the button.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "value",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@param value The value returned to Amazon Lex when a user chooses the button.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value returned to Amazon Lex when a user chooses the button.</p>\n@param value The value returned to Amazon Lex when a user chooses the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "value",
            "variableType" : "String",
            "documentation" : "<p>The value returned to Amazon Lex when a user chooses the button.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "text", "value" ],
      "shapeName" : "Button",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Button",
        "variableName" : "button",
        "variableType" : "Button",
        "documentation" : null,
        "simpleType" : "Button",
        "variableSetterType" : "Button"
      },
      "wrapper" : false
    },
    "ConfidenceScore" : {
      "c2jName" : "ConfidenceScore",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides a score that indicates the confidence that Amazon Lex has that an intent is the one that satisfies the user's intent.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.ConfidenceScore",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "score",
        "c2jShape" : "Double",
        "deprecated" : false,
        "documentation" : "<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@param score A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withScore",
        "getterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@return A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.*/",
        "getterMethodName" : "getScore",
        "getterModel" : {
          "returnType" : "Double",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "score",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "score",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Double",
        "marshallingType" : "DOUBLE",
        "name" : "Score",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@param score A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.*/",
        "setterMethodName" : "setScore",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "score",
          "variableType" : "Double",
          "documentation" : "",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@param score A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "score",
          "variableType" : "Double",
          "documentation" : "<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Score" : {
          "c2jName" : "score",
          "c2jShape" : "Double",
          "deprecated" : false,
          "documentation" : "<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@param score A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withScore",
          "getterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@return A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.*/",
          "getterMethodName" : "getScore",
          "getterModel" : {
            "returnType" : "Double",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "score",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "score",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Double",
          "marshallingType" : "DOUBLE",
          "name" : "Score",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@param score A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.*/",
          "setterMethodName" : "setScore",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "score",
            "variableType" : "Double",
            "documentation" : "",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>\n@param score A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "score",
            "variableType" : "Double",
            "documentation" : "<p>A score that indicates how confident Amazon Lex is that an intent satisfies the user's intent. Ranges between 0.00 and 1.00. Higher scores indicate higher confidence.</p>",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ConfidenceScore",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ConfidenceScore",
        "variableName" : "confidenceScore",
        "variableType" : "ConfidenceScore",
        "documentation" : null,
        "simpleType" : "ConfidenceScore",
        "variableSetterType" : "ConfidenceScore"
      },
      "wrapper" : false
    },
    "ConfirmationState" : {
      "c2jName" : "ConfirmationState",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "Confirmed",
        "value" : "Confirmed"
      }, {
        "name" : "Denied",
        "value" : "Denied"
      }, {
        "name" : "None",
        "value" : "None"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.enum.ConfirmationState",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ConfirmationState",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ConfirmationState",
        "variableName" : "confirmationState",
        "variableType" : "ConfirmationState",
        "documentation" : null,
        "simpleType" : "ConfirmationState",
        "variableSetterType" : "ConfirmationState"
      },
      "wrapper" : false
    },
    "ConflictException" : {
      "c2jName" : "ConflictException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ConflictException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.ConflictException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "ConflictException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ConflictException",
        "variableName" : "conflictException",
        "variableType" : "ConflictException",
        "documentation" : null,
        "simpleType" : "ConflictException",
        "variableSetterType" : "ConflictException"
      },
      "wrapper" : false
    },
    "DeleteSessionRequest" : {
      "c2jName" : "DeleteSessionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.request.DeleteSessionRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DeleteSession",
        "locationName" : null,
        "requestUri" : "/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}",
        "target" : null,
        "verb" : "DELETE",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "botId",
        "c2jShape" : "BotIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotId",
        "getterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@return The identifier of the bot that contains the session data.*/",
        "getterMethodName" : "getBotId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.*/",
        "setterMethodName" : "setBotId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "botAliasId",
        "c2jShape" : "BotAliasIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotAliasId",
        "getterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@return The alias identifier in use for the bot that contains the session data.*/",
        "getterMethodName" : "getBotAliasId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botAliasId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botAliasId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotAliasId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.*/",
        "setterMethodName" : "setBotAliasId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "localeId",
        "c2jShape" : "LocaleId",
        "deprecated" : false,
        "documentation" : "<p>The locale where the session is in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocaleId",
        "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
        "getterMethodName" : "getLocaleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "localeId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "localeId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LocaleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
        "setterMethodName" : "setLocaleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "<p>The locale where the session is in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session to delete.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@param sessionId The identifier of the session to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@return The identifier of the session to delete.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@param sessionId The identifier of the session to delete.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@param sessionId The identifier of the session to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session to delete.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BotAliasId" : {
          "c2jName" : "botAliasId",
          "c2jShape" : "BotAliasIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotAliasId",
          "getterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@return The alias identifier in use for the bot that contains the session data.*/",
          "getterMethodName" : "getBotAliasId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botAliasId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botAliasId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotAliasId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.*/",
          "setterMethodName" : "setBotAliasId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BotId" : {
          "c2jName" : "botId",
          "c2jShape" : "BotIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotId",
          "getterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@return The identifier of the bot that contains the session data.*/",
          "getterMethodName" : "getBotId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.*/",
          "setterMethodName" : "setBotId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LocaleId" : {
          "c2jName" : "localeId",
          "c2jShape" : "LocaleId",
          "deprecated" : false,
          "documentation" : "<p>The locale where the session is in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocaleId",
          "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
          "getterMethodName" : "getLocaleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "localeId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "localeId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LocaleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
          "setterMethodName" : "setLocaleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "<p>The locale where the session is in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session to delete.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@param sessionId The identifier of the session to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@return The identifier of the session to delete.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@param sessionId The identifier of the session to delete.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session to delete.</p>\n@param sessionId The identifier of the session to delete.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session to delete.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "botId", "botAliasId", "sessionId", "localeId" ],
      "shapeName" : "DeleteSessionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteSessionRequest",
        "variableName" : "deleteSessionRequest",
        "variableType" : "DeleteSessionRequest",
        "documentation" : null,
        "simpleType" : "DeleteSessionRequest",
        "variableSetterType" : "DeleteSessionRequest"
      },
      "wrapper" : false
    },
    "DeleteSessionResult" : {
      "c2jName" : "DeleteSessionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.response.DeleteSessionResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "botId",
        "c2jShape" : "BotIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the bot that contained the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@param botId The identifier of the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotId",
        "getterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@return The identifier of the bot that contained the session data.*/",
        "getterMethodName" : "getBotId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "botId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@param botId The identifier of the bot that contained the session data.*/",
        "setterMethodName" : "setBotId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@param botId The identifier of the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the bot that contained the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "botAliasId",
        "c2jShape" : "BotAliasIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The alias identifier in use for the bot that contained the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotAliasId",
        "getterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@return The alias identifier in use for the bot that contained the session data.*/",
        "getterMethodName" : "getBotAliasId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "botAliasId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botAliasId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotAliasId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contained the session data.*/",
        "setterMethodName" : "setBotAliasId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "<p>The alias identifier in use for the bot that contained the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "localeId",
        "c2jShape" : "LocaleId",
        "deprecated" : false,
        "documentation" : "<p>The locale where the session was used.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The locale where the session was used.</p>\n@param localeId The locale where the session was used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocaleId",
        "getterDocumentation" : "/**<p>The locale where the session was used.</p>\n@return The locale where the session was used.*/",
        "getterMethodName" : "getLocaleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "localeId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "localeId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LocaleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The locale where the session was used.</p>\n@param localeId The locale where the session was used.*/",
        "setterMethodName" : "setLocaleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The locale where the session was used.</p>\n@param localeId The locale where the session was used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "<p>The locale where the session was used.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the deleted session.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@param sessionId The identifier of the deleted session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@return The identifier of the deleted session.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@param sessionId The identifier of the deleted session.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@param sessionId The identifier of the deleted session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the deleted session.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BotAliasId" : {
          "c2jName" : "botAliasId",
          "c2jShape" : "BotAliasIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The alias identifier in use for the bot that contained the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotAliasId",
          "getterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@return The alias identifier in use for the bot that contained the session data.*/",
          "getterMethodName" : "getBotAliasId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "botAliasId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botAliasId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotAliasId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contained the session data.*/",
          "setterMethodName" : "setBotAliasId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contained the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "<p>The alias identifier in use for the bot that contained the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BotId" : {
          "c2jName" : "botId",
          "c2jShape" : "BotIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the bot that contained the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@param botId The identifier of the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotId",
          "getterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@return The identifier of the bot that contained the session data.*/",
          "getterMethodName" : "getBotId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "botId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@param botId The identifier of the bot that contained the session data.*/",
          "setterMethodName" : "setBotId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the bot that contained the session data.</p>\n@param botId The identifier of the bot that contained the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the bot that contained the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LocaleId" : {
          "c2jName" : "localeId",
          "c2jShape" : "LocaleId",
          "deprecated" : false,
          "documentation" : "<p>The locale where the session was used.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The locale where the session was used.</p>\n@param localeId The locale where the session was used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocaleId",
          "getterDocumentation" : "/**<p>The locale where the session was used.</p>\n@return The locale where the session was used.*/",
          "getterMethodName" : "getLocaleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "localeId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "localeId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LocaleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The locale where the session was used.</p>\n@param localeId The locale where the session was used.*/",
          "setterMethodName" : "setLocaleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The locale where the session was used.</p>\n@param localeId The locale where the session was used.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "<p>The locale where the session was used.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the deleted session.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@param sessionId The identifier of the deleted session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@return The identifier of the deleted session.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@param sessionId The identifier of the deleted session.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the deleted session.</p>\n@param sessionId The identifier of the deleted session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the deleted session.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DeleteSessionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DeleteSessionResult",
        "variableName" : "deleteSessionResult",
        "variableType" : "DeleteSessionResult",
        "documentation" : null,
        "simpleType" : "DeleteSessionResult",
        "variableSetterType" : "DeleteSessionResult"
      },
      "wrapper" : false
    },
    "DependencyFailedException" : {
      "c2jName" : "DependencyFailedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "DependencyFailedException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.DependencyFailedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "DependencyFailedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DependencyFailedException",
        "variableName" : "dependencyFailedException",
        "variableType" : "DependencyFailedException",
        "documentation" : null,
        "simpleType" : "DependencyFailedException",
        "variableSetterType" : "DependencyFailedException"
      },
      "wrapper" : false
    },
    "DialogAction" : {
      "c2jName" : "DialogAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The next action that Amazon Lex should take.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.DialogAction",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "type",
        "c2jShape" : "DialogActionType",
        "deprecated" : false,
        "documentation" : "<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : "DialogActionType",
        "fluentSetterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@param type The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see DialogActionType*/",
        "fluentSetterMethodName" : "withType",
        "getterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@return The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@see DialogActionType*/",
        "getterMethodName" : "getType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "type",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Type",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@param type The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@see DialogActionType*/",
        "setterMethodName" : "setType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@param type The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see DialogActionType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "type",
          "variableType" : "String",
          "documentation" : "<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "slotToElicit",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The name of the slot that should be elicited from the user.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@param slotToElicit The name of the slot that should be elicited from the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSlotToElicit",
        "getterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@return The name of the slot that should be elicited from the user.*/",
        "getterMethodName" : "getSlotToElicit",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "slotToElicit",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "slotToElicit",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SlotToElicit",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@param slotToElicit The name of the slot that should be elicited from the user.*/",
        "setterMethodName" : "setSlotToElicit",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "slotToElicit",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@param slotToElicit The name of the slot that should be elicited from the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "slotToElicit",
          "variableType" : "String",
          "documentation" : "<p>The name of the slot that should be elicited from the user.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "SlotToElicit" : {
          "c2jName" : "slotToElicit",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The name of the slot that should be elicited from the user.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@param slotToElicit The name of the slot that should be elicited from the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSlotToElicit",
          "getterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@return The name of the slot that should be elicited from the user.*/",
          "getterMethodName" : "getSlotToElicit",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "slotToElicit",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "slotToElicit",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SlotToElicit",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@param slotToElicit The name of the slot that should be elicited from the user.*/",
          "setterMethodName" : "setSlotToElicit",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "slotToElicit",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the slot that should be elicited from the user.</p>\n@param slotToElicit The name of the slot that should be elicited from the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "slotToElicit",
            "variableType" : "String",
            "documentation" : "<p>The name of the slot that should be elicited from the user.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Type" : {
          "c2jName" : "type",
          "c2jShape" : "DialogActionType",
          "deprecated" : false,
          "documentation" : "<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : "DialogActionType",
          "fluentSetterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@param type The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see DialogActionType*/",
          "fluentSetterMethodName" : "withType",
          "getterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@return The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@see DialogActionType*/",
          "getterMethodName" : "getType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "type",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Type",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@param type The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@see DialogActionType*/",
          "setterMethodName" : "setType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>\n@param type The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.\n@see DialogActionType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "type",
            "variableType" : "String",
            "documentation" : "<p>The next action that the bot should take in its interaction with the user. The possible values are:</p> <ul> <li> <p> <code>Close</code> - Indicates that there will not be a response from the user. For example, the statement \"Your order has been placed\" does not require a response.</p> </li> <li> <p> <code>ConfirmIntent</code> - The next action is asking the user if the intent is complete and ready to be fulfilled. This is a yes/no question such as \"Place the order?\"</p> </li> <li> <p> <code>Delegate</code> - The next action is determined by Amazon Lex.</p> </li> <li> <p> <code>ElicitSlot</code> - The next action is to elicit a slot value from the user.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "type" ],
      "shapeName" : "DialogAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DialogAction",
        "variableName" : "dialogAction",
        "variableType" : "DialogAction",
        "documentation" : null,
        "simpleType" : "DialogAction",
        "variableSetterType" : "DialogAction"
      },
      "wrapper" : false
    },
    "DialogActionType" : {
      "c2jName" : "DialogActionType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "Close",
        "value" : "Close"
      }, {
        "name" : "ConfirmIntent",
        "value" : "ConfirmIntent"
      }, {
        "name" : "Delegate",
        "value" : "Delegate"
      }, {
        "name" : "ElicitIntent",
        "value" : "ElicitIntent"
      }, {
        "name" : "ElicitSlot",
        "value" : "ElicitSlot"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.enum.DialogActionType",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DialogActionType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DialogActionType",
        "variableName" : "dialogActionType",
        "variableType" : "DialogActionType",
        "documentation" : null,
        "simpleType" : "DialogActionType",
        "variableSetterType" : "DialogActionType"
      },
      "wrapper" : false
    },
    "GetSessionRequest" : {
      "c2jName" : "GetSessionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.request.GetSessionRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetSession",
        "locationName" : null,
        "requestUri" : "/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "botId",
        "c2jShape" : "BotIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotId",
        "getterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@return The identifier of the bot that contains the session data.*/",
        "getterMethodName" : "getBotId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.*/",
        "setterMethodName" : "setBotId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "botAliasId",
        "c2jShape" : "BotAliasIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotAliasId",
        "getterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@return The alias identifier in use for the bot that contains the session data.*/",
        "getterMethodName" : "getBotAliasId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botAliasId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botAliasId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotAliasId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.*/",
        "setterMethodName" : "setBotAliasId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "localeId",
        "c2jShape" : "LocaleId",
        "deprecated" : false,
        "documentation" : "<p>The locale where the session is in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocaleId",
        "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
        "getterMethodName" : "getLocaleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "localeId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "localeId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LocaleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
        "setterMethodName" : "setLocaleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "<p>The locale where the session is in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session to return.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@param sessionId The identifier of the session to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@return The identifier of the session to return.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@param sessionId The identifier of the session to return.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@param sessionId The identifier of the session to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session to return.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BotAliasId" : {
          "c2jName" : "botAliasId",
          "c2jShape" : "BotAliasIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotAliasId",
          "getterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@return The alias identifier in use for the bot that contains the session data.*/",
          "getterMethodName" : "getBotAliasId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botAliasId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botAliasId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotAliasId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.*/",
          "setterMethodName" : "setBotAliasId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that contains the session data.</p>\n@param botAliasId The alias identifier in use for the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "<p>The alias identifier in use for the bot that contains the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BotId" : {
          "c2jName" : "botId",
          "c2jShape" : "BotIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotId",
          "getterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@return The identifier of the bot that contains the session data.*/",
          "getterMethodName" : "getBotId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.*/",
          "setterMethodName" : "setBotId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the bot that contains the session data.</p>\n@param botId The identifier of the bot that contains the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the bot that contains the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LocaleId" : {
          "c2jName" : "localeId",
          "c2jShape" : "LocaleId",
          "deprecated" : false,
          "documentation" : "<p>The locale where the session is in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocaleId",
          "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
          "getterMethodName" : "getLocaleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "localeId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "localeId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LocaleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
          "setterMethodName" : "setLocaleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "<p>The locale where the session is in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session to return.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@param sessionId The identifier of the session to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@return The identifier of the session to return.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@param sessionId The identifier of the session to return.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session to return.</p>\n@param sessionId The identifier of the session to return.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session to return.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "botId", "botAliasId", "localeId", "sessionId" ],
      "shapeName" : "GetSessionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetSessionRequest",
        "variableName" : "getSessionRequest",
        "variableType" : "GetSessionRequest",
        "documentation" : null,
        "simpleType" : "GetSessionRequest",
        "variableSetterType" : "GetSessionRequest"
      },
      "wrapper" : false
    },
    "GetSessionResult" : {
      "c2jName" : "GetSessionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.response.GetSessionResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "sessionId",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the returned session.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@param sessionId The identifier of the returned session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@return The identifier of the returned session.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@param sessionId The identifier of the returned session.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@param sessionId The identifier of the returned session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the returned session.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "messages",
        "c2jShape" : "Messages",
        "deprecated" : false,
        "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessages",
        "getterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n@return A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.*/",
        "getterMethodName" : "getMessages",
        "getterModel" : {
          "returnType" : "java.util.List<Message>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "messages",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "messages",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Message",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Message",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Message",
              "variableName" : "member",
              "variableType" : "Message",
              "documentation" : "",
              "simpleType" : "Message",
              "variableSetterType" : "Message"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Message",
              "variableName" : "member",
              "variableType" : "Message",
              "documentation" : "",
              "simpleType" : "Message",
              "variableSetterType" : "Message"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Message",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Message",
          "templateImplType" : "java.util.ArrayList<Message>",
          "templateType" : "java.util.List<Message>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Messages",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.*/",
        "setterMethodName" : "setMessages",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Message>",
          "variableName" : "messages",
          "variableType" : "java.util.List<Message>",
          "documentation" : "",
          "simpleType" : "List<Message>",
          "variableSetterType" : "java.util.Collection<Message>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setMessages(java.util.Collection)} or {@link #withMessages(java.util.Collection)} if you want to override the existing values.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Message>",
          "variableName" : "messages",
          "variableType" : "java.util.List<Message>",
          "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>",
          "simpleType" : "List<Message>",
          "variableSetterType" : "java.util.Collection<Message>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "interpretations",
        "c2jShape" : "Interpretations",
        "deprecated" : false,
        "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInterpretations",
        "getterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@return A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
        "getterMethodName" : "getInterpretations",
        "getterModel" : {
          "returnType" : "java.util.List<Interpretation>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "interpretations",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "interpretations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Interpretation",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Interpretation",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Interpretation",
              "variableName" : "member",
              "variableType" : "Interpretation",
              "documentation" : "",
              "simpleType" : "Interpretation",
              "variableSetterType" : "Interpretation"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Interpretation",
              "variableName" : "member",
              "variableType" : "Interpretation",
              "documentation" : "",
              "simpleType" : "Interpretation",
              "variableSetterType" : "Interpretation"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Interpretation",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Interpretation",
          "templateImplType" : "java.util.ArrayList<Interpretation>",
          "templateType" : "java.util.List<Interpretation>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Interpretations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
        "setterMethodName" : "setInterpretations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Interpretation>",
          "variableName" : "interpretations",
          "variableType" : "java.util.List<Interpretation>",
          "documentation" : "",
          "simpleType" : "List<Interpretation>",
          "variableSetterType" : "java.util.Collection<Interpretation>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setInterpretations(java.util.Collection)} or {@link #withInterpretations(java.util.Collection)} if you want to override the existing values.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Interpretation>",
          "variableName" : "interpretations",
          "variableType" : "java.util.List<Interpretation>",
          "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
          "simpleType" : "List<Interpretation>",
          "variableSetterType" : "java.util.Collection<Interpretation>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "SessionState",
        "deprecated" : false,
        "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@return Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "SessionState",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionState",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SessionState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Interpretations" : {
          "c2jName" : "interpretations",
          "c2jShape" : "Interpretations",
          "deprecated" : false,
          "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInterpretations",
          "getterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@return A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
          "getterMethodName" : "getInterpretations",
          "getterModel" : {
            "returnType" : "java.util.List<Interpretation>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "interpretations",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "interpretations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Interpretation",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Interpretation",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Interpretation",
                "variableName" : "member",
                "variableType" : "Interpretation",
                "documentation" : "",
                "simpleType" : "Interpretation",
                "variableSetterType" : "Interpretation"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Interpretation",
                "variableName" : "member",
                "variableType" : "Interpretation",
                "documentation" : "",
                "simpleType" : "Interpretation",
                "variableSetterType" : "Interpretation"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Interpretation",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Interpretation",
            "templateImplType" : "java.util.ArrayList<Interpretation>",
            "templateType" : "java.util.List<Interpretation>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Interpretations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
          "setterMethodName" : "setInterpretations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Interpretation>",
            "variableName" : "interpretations",
            "variableType" : "java.util.List<Interpretation>",
            "documentation" : "",
            "simpleType" : "List<Interpretation>",
            "variableSetterType" : "java.util.Collection<Interpretation>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setInterpretations(java.util.Collection)} or {@link #withInterpretations(java.util.Collection)} if you want to override the existing values.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Interpretation>",
            "variableName" : "interpretations",
            "variableType" : "java.util.List<Interpretation>",
            "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
            "simpleType" : "List<Interpretation>",
            "variableSetterType" : "java.util.Collection<Interpretation>"
          },
          "xmlNameSpaceUri" : null
        },
        "Messages" : {
          "c2jName" : "messages",
          "c2jShape" : "Messages",
          "deprecated" : false,
          "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessages",
          "getterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n@return A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.*/",
          "getterMethodName" : "getMessages",
          "getterModel" : {
            "returnType" : "java.util.List<Message>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "messages",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "messages",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Message",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Message",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Message",
                "variableName" : "member",
                "variableType" : "Message",
                "documentation" : "",
                "simpleType" : "Message",
                "variableSetterType" : "Message"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Message",
                "variableName" : "member",
                "variableType" : "Message",
                "documentation" : "",
                "simpleType" : "Message",
                "variableSetterType" : "Message"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Message",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Message",
            "templateImplType" : "java.util.ArrayList<Message>",
            "templateType" : "java.util.List<Message>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Messages",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.*/",
          "setterMethodName" : "setMessages",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Message>",
            "variableName" : "messages",
            "variableType" : "java.util.List<Message>",
            "documentation" : "",
            "simpleType" : "List<Message>",
            "variableSetterType" : "java.util.Collection<Message>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setMessages(java.util.Collection)} or {@link #withMessages(java.util.Collection)} if you want to override the existing values.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Message>",
            "variableName" : "messages",
            "variableType" : "java.util.List<Message>",
            "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that your returned the messages from your Lambda function or the order that messages are defined in the bot. </p>",
            "simpleType" : "List<Message>",
            "variableSetterType" : "java.util.Collection<Message>"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the returned session.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@param sessionId The identifier of the returned session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@return The identifier of the returned session.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@param sessionId The identifier of the returned session.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the returned session.</p>\n@param sessionId The identifier of the returned session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the returned session.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "SessionState",
          "deprecated" : false,
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@return Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "SessionState",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionState",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SessionState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>You can use this to determine the progress of the conversation and what the next action might be.</p>",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "GetSessionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetSessionResult",
        "variableName" : "getSessionResult",
        "variableType" : "GetSessionResult",
        "documentation" : null,
        "simpleType" : "GetSessionResult",
        "variableSetterType" : "GetSessionResult"
      },
      "wrapper" : false
    },
    "ImageResponseCard" : {
      "c2jName" : "ImageResponseCard",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A card that is shown to the user by a messaging platform. You define the contents of the card, the card is displayed by the platform. </p> <p>When you use a response card, the response from the user is constrained to the text associated with a button on the card.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.ImageResponseCard",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "title",
        "c2jShape" : "AttachmentTitle",
        "deprecated" : false,
        "documentation" : "<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@param title The title to display on the response card. The format of the title is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTitle",
        "getterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@return The title to display on the response card. The format of the title is determined by the platform displaying the response card.*/",
        "getterMethodName" : "getTitle",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "title",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "title",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Title",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@param title The title to display on the response card. The format of the title is determined by the platform displaying the response card.*/",
        "setterMethodName" : "setTitle",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@param title The title to display on the response card. The format of the title is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "title",
          "variableType" : "String",
          "documentation" : "<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "subtitle",
        "c2jShape" : "AttachmentTitle",
        "deprecated" : false,
        "documentation" : "<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@param subtitle The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubtitle",
        "getterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@return The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.*/",
        "getterMethodName" : "getSubtitle",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "subtitle",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "subtitle",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Subtitle",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@param subtitle The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.*/",
        "setterMethodName" : "setSubtitle",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subtitle",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@param subtitle The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "subtitle",
          "variableType" : "String",
          "documentation" : "<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageUrl",
        "c2jShape" : "AttachmentUrl",
        "deprecated" : false,
        "documentation" : "<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@param imageUrl The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageUrl",
        "getterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@return The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.*/",
        "getterMethodName" : "getImageUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageUrl",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageUrl",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ImageUrl",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@param imageUrl The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.*/",
        "setterMethodName" : "setImageUrl",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageUrl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@param imageUrl The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "imageUrl",
          "variableType" : "String",
          "documentation" : "<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "buttons",
        "c2jShape" : "ButtonsList",
        "deprecated" : false,
        "documentation" : "<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n@param buttons A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withButtons",
        "getterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n@return A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.*/",
        "getterMethodName" : "getButtons",
        "getterModel" : {
          "returnType" : "java.util.List<Button>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "buttons",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "buttons",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Button",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Button",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Button",
              "variableName" : "member",
              "variableType" : "Button",
              "documentation" : "",
              "simpleType" : "Button",
              "variableSetterType" : "Button"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Button",
              "variableName" : "member",
              "variableType" : "Button",
              "documentation" : "",
              "simpleType" : "Button",
              "variableSetterType" : "Button"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Button",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Button",
          "templateImplType" : "java.util.ArrayList<Button>",
          "templateType" : "java.util.List<Button>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Buttons",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n@param buttons A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.*/",
        "setterMethodName" : "setButtons",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Button>",
          "variableName" : "buttons",
          "variableType" : "java.util.List<Button>",
          "documentation" : "",
          "simpleType" : "List<Button>",
          "variableSetterType" : "java.util.Collection<Button>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setButtons(java.util.Collection)} or {@link #withButtons(java.util.Collection)} if you want to override the existing values.</p>\n@param buttons A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Button>",
          "variableName" : "buttons",
          "variableType" : "java.util.List<Button>",
          "documentation" : "<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>",
          "simpleType" : "List<Button>",
          "variableSetterType" : "java.util.Collection<Button>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Buttons" : {
          "c2jName" : "buttons",
          "c2jShape" : "ButtonsList",
          "deprecated" : false,
          "documentation" : "<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n@param buttons A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withButtons",
          "getterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n@return A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.*/",
          "getterMethodName" : "getButtons",
          "getterModel" : {
            "returnType" : "java.util.List<Button>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "buttons",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "buttons",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Button",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Button",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Button",
                "variableName" : "member",
                "variableType" : "Button",
                "documentation" : "",
                "simpleType" : "Button",
                "variableSetterType" : "Button"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Button",
                "variableName" : "member",
                "variableType" : "Button",
                "documentation" : "",
                "simpleType" : "Button",
                "variableSetterType" : "Button"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Button",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Button",
            "templateImplType" : "java.util.ArrayList<Button>",
            "templateType" : "java.util.List<Button>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Buttons",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n@param buttons A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.*/",
          "setterMethodName" : "setButtons",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Button>",
            "variableName" : "buttons",
            "variableType" : "java.util.List<Button>",
            "documentation" : "",
            "simpleType" : "List<Button>",
            "variableSetterType" : "java.util.Collection<Button>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setButtons(java.util.Collection)} or {@link #withButtons(java.util.Collection)} if you want to override the existing values.</p>\n@param buttons A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Button>",
            "variableName" : "buttons",
            "variableType" : "java.util.List<Button>",
            "documentation" : "<p>A list of buttons that should be displayed on the response card. The arrangement of the buttons is determined by the platform that displays the button.</p>",
            "simpleType" : "List<Button>",
            "variableSetterType" : "java.util.Collection<Button>"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageUrl" : {
          "c2jName" : "imageUrl",
          "c2jShape" : "AttachmentUrl",
          "deprecated" : false,
          "documentation" : "<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@param imageUrl The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageUrl",
          "getterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@return The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.*/",
          "getterMethodName" : "getImageUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageUrl",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageUrl",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ImageUrl",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@param imageUrl The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.*/",
          "setterMethodName" : "setImageUrl",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageUrl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>\n@param imageUrl The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "imageUrl",
            "variableType" : "String",
            "documentation" : "<p>The URL of an image to display on the response card. The image URL must be publicly available so that the platform displaying the response card has access to the image.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Subtitle" : {
          "c2jName" : "subtitle",
          "c2jShape" : "AttachmentTitle",
          "deprecated" : false,
          "documentation" : "<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@param subtitle The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubtitle",
          "getterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@return The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.*/",
          "getterMethodName" : "getSubtitle",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "subtitle",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "subtitle",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Subtitle",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@param subtitle The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.*/",
          "setterMethodName" : "setSubtitle",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subtitle",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>\n@param subtitle The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "subtitle",
            "variableType" : "String",
            "documentation" : "<p>The subtitle to display on the response card. The format of the subtitle is determined by the platform displaying the response card.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Title" : {
          "c2jName" : "title",
          "c2jShape" : "AttachmentTitle",
          "deprecated" : false,
          "documentation" : "<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@param title The title to display on the response card. The format of the title is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTitle",
          "getterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@return The title to display on the response card. The format of the title is determined by the platform displaying the response card.*/",
          "getterMethodName" : "getTitle",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "title",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "title",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Title",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@param title The title to display on the response card. The format of the title is determined by the platform displaying the response card.*/",
          "setterMethodName" : "setTitle",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>\n@param title The title to display on the response card. The format of the title is determined by the platform displaying the response card.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "title",
            "variableType" : "String",
            "documentation" : "<p>The title to display on the response card. The format of the title is determined by the platform displaying the response card.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "title" ],
      "shapeName" : "ImageResponseCard",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImageResponseCard",
        "variableName" : "imageResponseCard",
        "variableType" : "ImageResponseCard",
        "documentation" : null,
        "simpleType" : "ImageResponseCard",
        "variableSetterType" : "ImageResponseCard"
      },
      "wrapper" : false
    },
    "Intent" : {
      "c2jName" : "Intent",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The current intent that Amazon Lex is attempting to fulfill.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.Intent",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The name of the intent.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the intent.</p>\n@param name The name of the intent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the intent.</p>\n@return The name of the intent.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the intent.</p>\n@param name The name of the intent.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the intent.</p>\n@param name The name of the intent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the intent.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "slots",
        "c2jShape" : "Slots",
        "deprecated" : false,
        "documentation" : "<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@param slots A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSlots",
        "getterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@return A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.*/",
        "getterMethodName" : "getSlots",
        "getterModel" : {
          "returnType" : "java.util.Map<String,Slot>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "slots",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "slots",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "Slot",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "Slot",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Slot",
              "variableName" : "value",
              "variableType" : "Slot",
              "documentation" : "",
              "simpleType" : "Slot",
              "variableSetterType" : "Slot"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Slot",
              "variableName" : "value",
              "variableType" : "Slot",
              "documentation" : "",
              "simpleType" : "Slot",
              "variableSetterType" : "Slot"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "Slot",
          "entryType" : "Map.Entry<String, Slot>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,Slot>",
          "templateType" : "java.util.Map<String,Slot>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Slots",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@param slots A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.*/",
        "setterMethodName" : "setSlots",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,Slot>",
          "variableName" : "slots",
          "variableType" : "java.util.Map<String,Slot>",
          "documentation" : "",
          "simpleType" : "Map<String,Slot>",
          "variableSetterType" : "java.util.Map<String,Slot>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@param slots A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,Slot>",
          "variableName" : "slots",
          "variableType" : "java.util.Map<String,Slot>",
          "documentation" : "<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>",
          "simpleType" : "Map<String,Slot>",
          "variableSetterType" : "java.util.Map<String,Slot>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "state",
        "c2jShape" : "IntentState",
        "deprecated" : false,
        "documentation" : "<p>Contains fulfillment information for the intent. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "IntentState",
        "fluentSetterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@param state Contains fulfillment information for the intent.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IntentState*/",
        "fluentSetterMethodName" : "withState",
        "getterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@return Contains fulfillment information for the intent.\n@see IntentState*/",
        "getterMethodName" : "getState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "state",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "state",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "State",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@param state Contains fulfillment information for the intent.\n@see IntentState*/",
        "setterMethodName" : "setState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "state",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@param state Contains fulfillment information for the intent.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IntentState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "state",
          "variableType" : "String",
          "documentation" : "<p>Contains fulfillment information for the intent. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "confirmationState",
        "c2jShape" : "ConfirmationState",
        "deprecated" : false,
        "documentation" : "<p>Contains information about whether fulfillment of the intent has been confirmed.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ConfirmationState",
        "fluentSetterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@param confirmationState Contains information about whether fulfillment of the intent has been confirmed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ConfirmationState*/",
        "fluentSetterMethodName" : "withConfirmationState",
        "getterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@return Contains information about whether fulfillment of the intent has been confirmed.\n@see ConfirmationState*/",
        "getterMethodName" : "getConfirmationState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "confirmationState",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "confirmationState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ConfirmationState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@param confirmationState Contains information about whether fulfillment of the intent has been confirmed.\n@see ConfirmationState*/",
        "setterMethodName" : "setConfirmationState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "confirmationState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@param confirmationState Contains information about whether fulfillment of the intent has been confirmed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ConfirmationState*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "confirmationState",
          "variableType" : "String",
          "documentation" : "<p>Contains information about whether fulfillment of the intent has been confirmed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ConfirmationState" : {
          "c2jName" : "confirmationState",
          "c2jShape" : "ConfirmationState",
          "deprecated" : false,
          "documentation" : "<p>Contains information about whether fulfillment of the intent has been confirmed.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ConfirmationState",
          "fluentSetterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@param confirmationState Contains information about whether fulfillment of the intent has been confirmed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ConfirmationState*/",
          "fluentSetterMethodName" : "withConfirmationState",
          "getterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@return Contains information about whether fulfillment of the intent has been confirmed.\n@see ConfirmationState*/",
          "getterMethodName" : "getConfirmationState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "confirmationState",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "confirmationState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ConfirmationState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@param confirmationState Contains information about whether fulfillment of the intent has been confirmed.\n@see ConfirmationState*/",
          "setterMethodName" : "setConfirmationState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "confirmationState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Contains information about whether fulfillment of the intent has been confirmed.</p>\n@param confirmationState Contains information about whether fulfillment of the intent has been confirmed.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ConfirmationState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "confirmationState",
            "variableType" : "String",
            "documentation" : "<p>Contains information about whether fulfillment of the intent has been confirmed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The name of the intent.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the intent.</p>\n@param name The name of the intent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the intent.</p>\n@return The name of the intent.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the intent.</p>\n@param name The name of the intent.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the intent.</p>\n@param name The name of the intent.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the intent.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Slots" : {
          "c2jName" : "slots",
          "c2jShape" : "Slots",
          "deprecated" : false,
          "documentation" : "<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@param slots A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSlots",
          "getterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@return A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.*/",
          "getterMethodName" : "getSlots",
          "getterModel" : {
            "returnType" : "java.util.Map<String,Slot>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "slots",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "slots",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "Slot",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "Slot",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Slot",
                "variableName" : "value",
                "variableType" : "Slot",
                "documentation" : "",
                "simpleType" : "Slot",
                "variableSetterType" : "Slot"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Slot",
                "variableName" : "value",
                "variableType" : "Slot",
                "documentation" : "",
                "simpleType" : "Slot",
                "variableSetterType" : "Slot"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "Slot",
            "entryType" : "Map.Entry<String, Slot>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,Slot>",
            "templateType" : "java.util.Map<String,Slot>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Slots",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@param slots A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.*/",
          "setterMethodName" : "setSlots",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,Slot>",
            "variableName" : "slots",
            "variableType" : "java.util.Map<String,Slot>",
            "documentation" : "",
            "simpleType" : "Map<String,Slot>",
            "variableSetterType" : "java.util.Map<String,Slot>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>\n@param slots A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,Slot>",
            "variableName" : "slots",
            "variableType" : "java.util.Map<String,Slot>",
            "documentation" : "<p>A map of all of the slots for the intent. The name of the slot maps to the value of the slot. If a slot has not been filled, the value is null.</p>",
            "simpleType" : "Map<String,Slot>",
            "variableSetterType" : "java.util.Map<String,Slot>"
          },
          "xmlNameSpaceUri" : null
        },
        "State" : {
          "c2jName" : "state",
          "c2jShape" : "IntentState",
          "deprecated" : false,
          "documentation" : "<p>Contains fulfillment information for the intent. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "IntentState",
          "fluentSetterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@param state Contains fulfillment information for the intent.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IntentState*/",
          "fluentSetterMethodName" : "withState",
          "getterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@return Contains fulfillment information for the intent.\n@see IntentState*/",
          "getterMethodName" : "getState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "state",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "state",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "State",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@param state Contains fulfillment information for the intent.\n@see IntentState*/",
          "setterMethodName" : "setState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "state",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Contains fulfillment information for the intent. </p>\n@param state Contains fulfillment information for the intent.\n@return Returns a reference to this object so that method calls can be chained together.\n@see IntentState*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "state",
            "variableType" : "String",
            "documentation" : "<p>Contains fulfillment information for the intent. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "name" ],
      "shapeName" : "Intent",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Intent",
        "variableName" : "intent",
        "variableType" : "Intent",
        "documentation" : null,
        "simpleType" : "Intent",
        "variableSetterType" : "Intent"
      },
      "wrapper" : false
    },
    "IntentState" : {
      "c2jName" : "IntentState",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "Failed",
        "value" : "Failed"
      }, {
        "name" : "Fulfilled",
        "value" : "Fulfilled"
      }, {
        "name" : "InProgress",
        "value" : "InProgress"
      }, {
        "name" : "ReadyForFulfillment",
        "value" : "ReadyForFulfillment"
      }, {
        "name" : "Waiting",
        "value" : "Waiting"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.enum.IntentState",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "IntentState",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "IntentState",
        "variableName" : "intentState",
        "variableType" : "IntentState",
        "documentation" : null,
        "simpleType" : "IntentState",
        "variableSetterType" : "IntentState"
      },
      "wrapper" : false
    },
    "InternalServerException" : {
      "c2jName" : "InternalServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InternalServerException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.InternalServerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "InternalServerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalServerException",
        "variableName" : "internalServerException",
        "variableType" : "InternalServerException",
        "documentation" : null,
        "simpleType" : "InternalServerException",
        "variableSetterType" : "InternalServerException"
      },
      "wrapper" : false
    },
    "Interpretation" : {
      "c2jName" : "Interpretation",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An intent that Amazon Lex determined might satisfy the user's utterance. The intents are ordered by the confidence score. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.Interpretation",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "nluConfidence",
        "c2jShape" : "ConfidenceScore",
        "deprecated" : false,
        "documentation" : "<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@param nluConfidence Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNluConfidence",
        "getterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@return Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.*/",
        "getterMethodName" : "getNluConfidence",
        "getterModel" : {
          "returnType" : "ConfidenceScore",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nluConfidence",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nluConfidence",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "NluConfidence",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@param nluConfidence Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.*/",
        "setterMethodName" : "setNluConfidence",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ConfidenceScore",
          "variableName" : "nluConfidence",
          "variableType" : "ConfidenceScore",
          "documentation" : "",
          "simpleType" : "ConfidenceScore",
          "variableSetterType" : "ConfidenceScore"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@param nluConfidence Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ConfidenceScore",
          "variableName" : "nluConfidence",
          "variableType" : "ConfidenceScore",
          "documentation" : "<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>",
          "simpleType" : "ConfidenceScore",
          "variableSetterType" : "ConfidenceScore"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sentimentResponse",
        "c2jShape" : "SentimentResponse",
        "deprecated" : false,
        "documentation" : "<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@param sentimentResponse The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSentimentResponse",
        "getterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@return The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.*/",
        "getterMethodName" : "getSentimentResponse",
        "getterModel" : {
          "returnType" : "SentimentResponse",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sentimentResponse",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sentimentResponse",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SentimentResponse",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@param sentimentResponse The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.*/",
        "setterMethodName" : "setSentimentResponse",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SentimentResponse",
          "variableName" : "sentimentResponse",
          "variableType" : "SentimentResponse",
          "documentation" : "",
          "simpleType" : "SentimentResponse",
          "variableSetterType" : "SentimentResponse"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@param sentimentResponse The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SentimentResponse",
          "variableName" : "sentimentResponse",
          "variableType" : "SentimentResponse",
          "documentation" : "<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>",
          "simpleType" : "SentimentResponse",
          "variableSetterType" : "SentimentResponse"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "intent",
        "c2jShape" : "Intent",
        "deprecated" : false,
        "documentation" : "<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@param intent A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIntent",
        "getterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@return A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.*/",
        "getterMethodName" : "getIntent",
        "getterModel" : {
          "returnType" : "Intent",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "intent",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "intent",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Intent",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@param intent A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.*/",
        "setterMethodName" : "setIntent",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Intent",
          "variableName" : "intent",
          "variableType" : "Intent",
          "documentation" : "",
          "simpleType" : "Intent",
          "variableSetterType" : "Intent"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@param intent A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Intent",
          "variableName" : "intent",
          "variableType" : "Intent",
          "documentation" : "<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>",
          "simpleType" : "Intent",
          "variableSetterType" : "Intent"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Intent" : {
          "c2jName" : "intent",
          "c2jShape" : "Intent",
          "deprecated" : false,
          "documentation" : "<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@param intent A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIntent",
          "getterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@return A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.*/",
          "getterMethodName" : "getIntent",
          "getterModel" : {
            "returnType" : "Intent",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "intent",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "intent",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Intent",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@param intent A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.*/",
          "setterMethodName" : "setIntent",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Intent",
            "variableName" : "intent",
            "variableType" : "Intent",
            "documentation" : "",
            "simpleType" : "Intent",
            "variableSetterType" : "Intent"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>\n@param intent A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Intent",
            "variableName" : "intent",
            "variableType" : "Intent",
            "documentation" : "<p>A list of intents that might satisfy the user's utterance. The intents are ordered by the confidence score.</p>",
            "simpleType" : "Intent",
            "variableSetterType" : "Intent"
          },
          "xmlNameSpaceUri" : null
        },
        "NluConfidence" : {
          "c2jName" : "nluConfidence",
          "c2jShape" : "ConfidenceScore",
          "deprecated" : false,
          "documentation" : "<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@param nluConfidence Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNluConfidence",
          "getterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@return Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.*/",
          "getterMethodName" : "getNluConfidence",
          "getterModel" : {
            "returnType" : "ConfidenceScore",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nluConfidence",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nluConfidence",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "NluConfidence",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@param nluConfidence Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.*/",
          "setterMethodName" : "setNluConfidence",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ConfidenceScore",
            "variableName" : "nluConfidence",
            "variableType" : "ConfidenceScore",
            "documentation" : "",
            "simpleType" : "ConfidenceScore",
            "variableSetterType" : "ConfidenceScore"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>\n@param nluConfidence Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ConfidenceScore",
            "variableName" : "nluConfidence",
            "variableType" : "ConfidenceScore",
            "documentation" : "<p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents in a response. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p>",
            "simpleType" : "ConfidenceScore",
            "variableSetterType" : "ConfidenceScore"
          },
          "xmlNameSpaceUri" : null
        },
        "SentimentResponse" : {
          "c2jName" : "sentimentResponse",
          "c2jShape" : "SentimentResponse",
          "deprecated" : false,
          "documentation" : "<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@param sentimentResponse The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSentimentResponse",
          "getterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@return The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.*/",
          "getterMethodName" : "getSentimentResponse",
          "getterModel" : {
            "returnType" : "SentimentResponse",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sentimentResponse",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sentimentResponse",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SentimentResponse",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@param sentimentResponse The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.*/",
          "setterMethodName" : "setSentimentResponse",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SentimentResponse",
            "variableName" : "sentimentResponse",
            "variableType" : "SentimentResponse",
            "documentation" : "",
            "simpleType" : "SentimentResponse",
            "variableSetterType" : "SentimentResponse"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>\n@param sentimentResponse The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SentimentResponse",
            "variableName" : "sentimentResponse",
            "variableType" : "SentimentResponse",
            "documentation" : "<p>The sentiment expressed in an utterance. </p> <p>When the bot is configured to send utterances to Amazon Comprehend for sentiment analysis, this field contains the result of the analysis.</p>",
            "simpleType" : "SentimentResponse",
            "variableSetterType" : "SentimentResponse"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Interpretation",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Interpretation",
        "variableName" : "interpretation",
        "variableType" : "Interpretation",
        "documentation" : null,
        "simpleType" : "Interpretation",
        "variableSetterType" : "Interpretation"
      },
      "wrapper" : false
    },
    "Message" : {
      "c2jName" : "Message",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Container for text that is returned to the customer..</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.Message",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "content",
        "c2jShape" : "Text",
        "deprecated" : false,
        "documentation" : "<p>The text of the message.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text of the message.</p>\n@param content The text of the message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContent",
        "getterDocumentation" : "/**<p>The text of the message.</p>\n@return The text of the message.*/",
        "getterMethodName" : "getContent",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "content",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "content",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Content",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>The text of the message.</p>\n@param content The text of the message.*/",
        "setterMethodName" : "setContent",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text of the message.</p>\n@param content The text of the message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "content",
          "variableType" : "String",
          "documentation" : "<p>The text of the message.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "contentType",
        "c2jShape" : "MessageContentType",
        "deprecated" : false,
        "documentation" : "<p>Indicates the type of response.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "MessageContentType",
        "fluentSetterDocumentation" : "/**<p>Indicates the type of response.</p>\n@param contentType Indicates the type of response.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageContentType*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>Indicates the type of response.</p>\n@return Indicates the type of response.\n@see MessageContentType*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "contentType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "contentType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates the type of response.</p>\n@param contentType Indicates the type of response.\n@see MessageContentType*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the type of response.</p>\n@param contentType Indicates the type of response.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageContentType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>Indicates the type of response.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "imageResponseCard",
        "c2jShape" : "ImageResponseCard",
        "deprecated" : false,
        "documentation" : "",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param imageResponseCard \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImageResponseCard",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getImageResponseCard",
        "getterModel" : {
          "returnType" : "ImageResponseCard",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "imageResponseCard",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "imageResponseCard",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ImageResponseCard",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param imageResponseCard */",
        "setterMethodName" : "setImageResponseCard",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImageResponseCard",
          "variableName" : "imageResponseCard",
          "variableType" : "ImageResponseCard",
          "documentation" : "",
          "simpleType" : "ImageResponseCard",
          "variableSetterType" : "ImageResponseCard"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param imageResponseCard \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImageResponseCard",
          "variableName" : "imageResponseCard",
          "variableType" : "ImageResponseCard",
          "documentation" : "",
          "simpleType" : "ImageResponseCard",
          "variableSetterType" : "ImageResponseCard"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Content" : {
          "c2jName" : "content",
          "c2jShape" : "Text",
          "deprecated" : false,
          "documentation" : "<p>The text of the message.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text of the message.</p>\n@param content The text of the message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContent",
          "getterDocumentation" : "/**<p>The text of the message.</p>\n@return The text of the message.*/",
          "getterMethodName" : "getContent",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "content",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "content",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Content",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>The text of the message.</p>\n@param content The text of the message.*/",
          "setterMethodName" : "setContent",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text of the message.</p>\n@param content The text of the message.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "content",
            "variableType" : "String",
            "documentation" : "<p>The text of the message.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "contentType",
          "c2jShape" : "MessageContentType",
          "deprecated" : false,
          "documentation" : "<p>Indicates the type of response.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "MessageContentType",
          "fluentSetterDocumentation" : "/**<p>Indicates the type of response.</p>\n@param contentType Indicates the type of response.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageContentType*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>Indicates the type of response.</p>\n@return Indicates the type of response.\n@see MessageContentType*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "contentType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "contentType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates the type of response.</p>\n@param contentType Indicates the type of response.\n@see MessageContentType*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the type of response.</p>\n@param contentType Indicates the type of response.\n@return Returns a reference to this object so that method calls can be chained together.\n@see MessageContentType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>Indicates the type of response.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImageResponseCard" : {
          "c2jName" : "imageResponseCard",
          "c2jShape" : "ImageResponseCard",
          "deprecated" : false,
          "documentation" : "",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param imageResponseCard \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImageResponseCard",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getImageResponseCard",
          "getterModel" : {
            "returnType" : "ImageResponseCard",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "imageResponseCard",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "imageResponseCard",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ImageResponseCard",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param imageResponseCard */",
          "setterMethodName" : "setImageResponseCard",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImageResponseCard",
            "variableName" : "imageResponseCard",
            "variableType" : "ImageResponseCard",
            "documentation" : "",
            "simpleType" : "ImageResponseCard",
            "variableSetterType" : "ImageResponseCard"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param imageResponseCard \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImageResponseCard",
            "variableName" : "imageResponseCard",
            "variableType" : "ImageResponseCard",
            "documentation" : "",
            "simpleType" : "ImageResponseCard",
            "variableSetterType" : "ImageResponseCard"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Message",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Message",
        "variableName" : "message",
        "variableType" : "Message",
        "documentation" : null,
        "simpleType" : "Message",
        "variableSetterType" : "Message"
      },
      "wrapper" : false
    },
    "MessageContentType" : {
      "c2jName" : "MessageContentType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "CustomPayload",
        "value" : "CustomPayload"
      }, {
        "name" : "ImageResponseCard",
        "value" : "ImageResponseCard"
      }, {
        "name" : "PlainText",
        "value" : "PlainText"
      }, {
        "name" : "SSML",
        "value" : "SSML"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.enum.MessageContentType",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "MessageContentType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "MessageContentType",
        "variableName" : "messageContentType",
        "variableType" : "MessageContentType",
        "documentation" : null,
        "simpleType" : "MessageContentType",
        "variableSetterType" : "MessageContentType"
      },
      "wrapper" : false
    },
    "PutSessionRequest" : {
      "c2jName" : "PutSessionRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.request.PutSessionRequest",
      "hasHeaderMember" : true,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "PutSession",
        "locationName" : null,
        "requestUri" : "/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "botId",
        "c2jShape" : "BotIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the bot that receives the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@param botId The identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotId",
        "getterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@return The identifier of the bot that receives the session data.*/",
        "getterMethodName" : "getBotId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@param botId The identifier of the bot that receives the session data.*/",
        "setterMethodName" : "setBotId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@param botId The identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the bot that receives the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "botAliasId",
        "c2jShape" : "BotAliasIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The alias identifier of the bot that receives the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@param botAliasId The alias identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotAliasId",
        "getterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@return The alias identifier of the bot that receives the session data.*/",
        "getterMethodName" : "getBotAliasId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botAliasId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botAliasId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotAliasId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@param botAliasId The alias identifier of the bot that receives the session data.*/",
        "setterMethodName" : "setBotAliasId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@param botAliasId The alias identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "<p>The alias identifier of the bot that receives the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "localeId",
        "c2jShape" : "LocaleId",
        "deprecated" : false,
        "documentation" : "<p>The locale where the session is in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocaleId",
        "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
        "getterMethodName" : "getLocaleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "localeId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "localeId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LocaleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
        "setterMethodName" : "setLocaleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "<p>The locale where the session is in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session that receives the session data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@param sessionId The identifier of the session that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@return The identifier of the session that receives the session data.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@param sessionId The identifier of the session that receives the session data.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@param sessionId The identifier of the session that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session that receives the session data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "messages",
        "c2jShape" : "Messages",
        "deprecated" : false,
        "documentation" : "<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n@param messages A list of messages to send to the user. Messages are sent in the order that they are defined in the list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessages",
        "getterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n@return A list of messages to send to the user. Messages are sent in the order that they are defined in the list.*/",
        "getterMethodName" : "getMessages",
        "getterModel" : {
          "returnType" : "java.util.List<Message>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "messages",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "messages",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Message",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Message",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Message",
              "variableName" : "member",
              "variableType" : "Message",
              "documentation" : "",
              "simpleType" : "Message",
              "variableSetterType" : "Message"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Message",
              "variableName" : "member",
              "variableType" : "Message",
              "documentation" : "",
              "simpleType" : "Message",
              "variableSetterType" : "Message"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Message",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Message",
          "templateImplType" : "java.util.ArrayList<Message>",
          "templateType" : "java.util.List<Message>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Messages",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n@param messages A list of messages to send to the user. Messages are sent in the order that they are defined in the list.*/",
        "setterMethodName" : "setMessages",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Message>",
          "variableName" : "messages",
          "variableType" : "java.util.List<Message>",
          "documentation" : "",
          "simpleType" : "List<Message>",
          "variableSetterType" : "java.util.Collection<Message>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setMessages(java.util.Collection)} or {@link #withMessages(java.util.Collection)} if you want to override the existing values.</p>\n@param messages A list of messages to send to the user. Messages are sent in the order that they are defined in the list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Message>",
          "variableName" : "messages",
          "variableType" : "java.util.List<Message>",
          "documentation" : "<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>",
          "simpleType" : "List<Message>",
          "variableSetterType" : "java.util.Collection<Message>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "SessionState",
        "deprecated" : false,
        "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@return Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "SessionState",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionState",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SessionState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestAttributes",
        "c2jShape" : "StringMap",
        "deprecated" : false,
        "documentation" : "<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestAttributes",
        "getterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@return Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
        "getterMethodName" : "getRequestAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "requestAttributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "requestAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "RequestAttributes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
        "setterMethodName" : "setRequestAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "requestAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "requestAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "responseContentType",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResponseContentType",
        "getterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@return The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>*/",
        "getterMethodName" : "getResponseContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "ResponseContentType",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ResponseContentType",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResponseContentType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>*/",
        "setterMethodName" : "setResponseContentType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "responseContentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "responseContentType",
          "variableType" : "String",
          "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BotAliasId" : {
          "c2jName" : "botAliasId",
          "c2jShape" : "BotAliasIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The alias identifier of the bot that receives the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@param botAliasId The alias identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotAliasId",
          "getterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@return The alias identifier of the bot that receives the session data.*/",
          "getterMethodName" : "getBotAliasId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botAliasId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botAliasId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotAliasId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@param botAliasId The alias identifier of the bot that receives the session data.*/",
          "setterMethodName" : "setBotAliasId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The alias identifier of the bot that receives the session data.</p>\n@param botAliasId The alias identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "<p>The alias identifier of the bot that receives the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BotId" : {
          "c2jName" : "botId",
          "c2jShape" : "BotIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the bot that receives the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@param botId The identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotId",
          "getterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@return The identifier of the bot that receives the session data.*/",
          "getterMethodName" : "getBotId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@param botId The identifier of the bot that receives the session data.*/",
          "setterMethodName" : "setBotId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the bot that receives the session data.</p>\n@param botId The identifier of the bot that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the bot that receives the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LocaleId" : {
          "c2jName" : "localeId",
          "c2jShape" : "LocaleId",
          "deprecated" : false,
          "documentation" : "<p>The locale where the session is in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocaleId",
          "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
          "getterMethodName" : "getLocaleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "localeId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "localeId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LocaleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
          "setterMethodName" : "setLocaleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "<p>The locale where the session is in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Messages" : {
          "c2jName" : "messages",
          "c2jShape" : "Messages",
          "deprecated" : false,
          "documentation" : "<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n@param messages A list of messages to send to the user. Messages are sent in the order that they are defined in the list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessages",
          "getterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n@return A list of messages to send to the user. Messages are sent in the order that they are defined in the list.*/",
          "getterMethodName" : "getMessages",
          "getterModel" : {
            "returnType" : "java.util.List<Message>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "messages",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "messages",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Message",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Message",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Message",
                "variableName" : "member",
                "variableType" : "Message",
                "documentation" : "",
                "simpleType" : "Message",
                "variableSetterType" : "Message"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Message",
                "variableName" : "member",
                "variableType" : "Message",
                "documentation" : "",
                "simpleType" : "Message",
                "variableSetterType" : "Message"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Message",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Message",
            "templateImplType" : "java.util.ArrayList<Message>",
            "templateType" : "java.util.List<Message>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Messages",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n@param messages A list of messages to send to the user. Messages are sent in the order that they are defined in the list.*/",
          "setterMethodName" : "setMessages",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Message>",
            "variableName" : "messages",
            "variableType" : "java.util.List<Message>",
            "documentation" : "",
            "simpleType" : "List<Message>",
            "variableSetterType" : "java.util.Collection<Message>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setMessages(java.util.Collection)} or {@link #withMessages(java.util.Collection)} if you want to override the existing values.</p>\n@param messages A list of messages to send to the user. Messages are sent in the order that they are defined in the list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Message>",
            "variableName" : "messages",
            "variableType" : "java.util.List<Message>",
            "documentation" : "<p>A list of messages to send to the user. Messages are sent in the order that they are defined in the list.</p>",
            "simpleType" : "List<Message>",
            "variableSetterType" : "java.util.Collection<Message>"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestAttributes" : {
          "c2jName" : "requestAttributes",
          "c2jShape" : "StringMap",
          "deprecated" : false,
          "documentation" : "<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestAttributes",
          "getterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@return Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
          "getterMethodName" : "getRequestAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "requestAttributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "requestAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "RequestAttributes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
          "setterMethodName" : "setRequestAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "requestAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "requestAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>Request-specific information passed between Amazon Lex and the client application.</p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "ResponseContentType" : {
          "c2jName" : "responseContentType",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResponseContentType",
          "getterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@return The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>*/",
          "getterMethodName" : "getResponseContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "ResponseContentType",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ResponseContentType",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResponseContentType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>*/",
          "setterMethodName" : "setResponseContentType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "responseContentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "responseContentType",
            "variableType" : "String",
            "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech depending on the value of this parameter. </p> <ul> <li> <p>If the value is <code>text/plain; charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session that receives the session data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@param sessionId The identifier of the session that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@return The identifier of the session that receives the session data.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@param sessionId The identifier of the session that receives the session data.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session that receives the session data.</p>\n@param sessionId The identifier of the session that receives the session data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session that receives the session data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "SessionState",
          "deprecated" : false,
          "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@return Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "SessionState",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionState",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SessionState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "botId", "botAliasId", "localeId", "sessionState", "sessionId" ],
      "shapeName" : "PutSessionRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutSessionRequest",
        "variableName" : "putSessionRequest",
        "variableType" : "PutSessionRequest",
        "documentation" : null,
        "simpleType" : "PutSessionRequest",
        "variableSetterType" : "PutSessionRequest"
      },
      "wrapper" : false
    },
    "PutSessionResult" : {
      "c2jName" : "PutSessionResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.response.PutSessionResult",
      "hasHeaderMember" : true,
      "hasPayloadMember" : true,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : true,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "contentType",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@param contentType The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@return The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Type",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@param contentType The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@param contentType The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "messages",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessages",
        "getterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@return A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.*/",
        "getterMethodName" : "getMessages",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-messages",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-messages",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Messages",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.*/",
        "setterMethodName" : "setMessages",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "messages",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "messages",
          "variableType" : "String",
          "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@return Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-session-state",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-session-state",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionState",
          "variableType" : "String",
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestAttributes",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestAttributes",
        "getterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@return Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.*/",
        "getterMethodName" : "getRequestAttributes",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-request-attributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-request-attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RequestAttributes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.*/",
        "setterMethodName" : "setRequestAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestAttributes",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestAttributes",
          "variableType" : "String",
          "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session that received the data.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@param sessionId The identifier of the session that received the data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@return The identifier of the session that received the data.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-session-id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-session-id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@param sessionId The identifier of the session that received the data.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@param sessionId The identifier of the session that received the data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session that received the data.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "audioStream",
        "c2jShape" : "BlobStream",
        "deprecated" : false,
        "documentation" : "<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@param audioStream If the requested content type was audio, the audio version of the message to convey to the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAudioStream",
        "getterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@return If the requested content type was audio, the audio version of the message to convey to the user.*/",
        "getterMethodName" : "getAudioStream",
        "getterModel" : {
          "returnType" : "java.io.InputStream",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : true,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "audioStream",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "audioStream",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : true,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.io.InputStream",
        "marshallingType" : "STREAM",
        "name" : "AudioStream",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@param audioStream If the requested content type was audio, the audio version of the message to convey to the user.*/",
        "setterMethodName" : "setAudioStream",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "audioStream",
          "variableType" : "java.io.InputStream",
          "documentation" : "",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@param audioStream If the requested content type was audio, the audio version of the message to convey to the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "audioStream",
          "variableType" : "java.io.InputStream",
          "documentation" : "<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AudioStream" : {
          "c2jName" : "audioStream",
          "c2jShape" : "BlobStream",
          "deprecated" : false,
          "documentation" : "<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@param audioStream If the requested content type was audio, the audio version of the message to convey to the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAudioStream",
          "getterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@return If the requested content type was audio, the audio version of the message to convey to the user.*/",
          "getterMethodName" : "getAudioStream",
          "getterModel" : {
            "returnType" : "java.io.InputStream",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : true,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "audioStream",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "audioStream",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : true,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.io.InputStream",
          "marshallingType" : "STREAM",
          "name" : "AudioStream",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@param audioStream If the requested content type was audio, the audio version of the message to convey to the user.*/",
          "setterMethodName" : "setAudioStream",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "audioStream",
            "variableType" : "java.io.InputStream",
            "documentation" : "",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>\n@param audioStream If the requested content type was audio, the audio version of the message to convey to the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "audioStream",
            "variableType" : "java.io.InputStream",
            "documentation" : "<p>If the requested content type was audio, the audio version of the message to convey to the user.</p>",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "contentType",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@param contentType The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@return The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Type",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@param contentType The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>\n@param contentType The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>The type of response. Same as the type specified in the <code>responseContentType</code> field in the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Messages" : {
          "c2jName" : "messages",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessages",
          "getterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@return A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.*/",
          "getterMethodName" : "getMessages",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-messages",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-messages",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Messages",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.*/",
          "setterMethodName" : "setMessages",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "messages",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "messages",
            "variableType" : "String",
            "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on how you return the messages from you Lambda function or the order that the messages are defined in the bot.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestAttributes" : {
          "c2jName" : "requestAttributes",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestAttributes",
          "getterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@return Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.*/",
          "getterMethodName" : "getRequestAttributes",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-request-attributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-request-attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RequestAttributes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.*/",
          "setterMethodName" : "setRequestAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestAttributes",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestAttributes",
            "variableType" : "String",
            "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex. These are the same as the <code>requestAttribute</code> parameter in the call to the <code>PutSession</code> operation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session that received the data.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@param sessionId The identifier of the session that received the data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@return The identifier of the session that received the data.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-session-id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-session-id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@param sessionId The identifier of the session that received the data.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session that received the data.</p>\n@param sessionId The identifier of the session that received the data.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session that received the data.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@return Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-session-state",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-session-state",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionState",
            "variableType" : "String",
            "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "PutSessionResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "PutSessionResult",
        "variableName" : "putSessionResult",
        "variableType" : "PutSessionResult",
        "documentation" : null,
        "simpleType" : "PutSessionResult",
        "variableSetterType" : "PutSessionResult"
      },
      "wrapper" : false
    },
    "RecognizeTextRequest" : {
      "c2jName" : "RecognizeTextRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.request.RecognizeTextRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "RecognizeText",
        "locationName" : null,
        "requestUri" : "/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/text",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "botId",
        "c2jShape" : "BotIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the bot that processes the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@param botId The identifier of the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotId",
        "getterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@return The identifier of the bot that processes the request.*/",
        "getterMethodName" : "getBotId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@param botId The identifier of the bot that processes the request.*/",
        "setterMethodName" : "setBotId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@param botId The identifier of the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the bot that processes the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "botAliasId",
        "c2jShape" : "BotAliasIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The alias identifier in use for the bot that processes the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@param botAliasId The alias identifier in use for the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotAliasId",
        "getterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@return The alias identifier in use for the bot that processes the request.*/",
        "getterMethodName" : "getBotAliasId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botAliasId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botAliasId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotAliasId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@param botAliasId The alias identifier in use for the bot that processes the request.*/",
        "setterMethodName" : "setBotAliasId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@param botAliasId The alias identifier in use for the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "<p>The alias identifier in use for the bot that processes the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "localeId",
        "c2jShape" : "LocaleId",
        "deprecated" : false,
        "documentation" : "<p>The locale where the session is in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocaleId",
        "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
        "getterMethodName" : "getLocaleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "localeId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "localeId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LocaleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
        "setterMethodName" : "setLocaleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "<p>The locale where the session is in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the user session that is having the conversation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@param sessionId The identifier of the user session that is having the conversation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@return The identifier of the user session that is having the conversation.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@param sessionId The identifier of the user session that is having the conversation.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@param sessionId The identifier of the user session that is having the conversation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the user session that is having the conversation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "text",
        "c2jShape" : "Text",
        "deprecated" : false,
        "documentation" : "<p>The text that the user entered. Amazon Lex interprets this text.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@param text The text that the user entered. Amazon Lex interprets this text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withText",
        "getterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@return The text that the user entered. Amazon Lex interprets this text.*/",
        "getterMethodName" : "getText",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "text",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "text",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Text",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@param text The text that the user entered. Amazon Lex interprets this text.*/",
        "setterMethodName" : "setText",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@param text The text that the user entered. Amazon Lex interprets this text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "text",
          "variableType" : "String",
          "documentation" : "<p>The text that the user entered. Amazon Lex interprets this text.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "SessionState",
        "deprecated" : false,
        "documentation" : "<p>The current state of the dialog between the user and the bot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@param sessionState The current state of the dialog between the user and the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@return The current state of the dialog between the user and the bot.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "SessionState",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionState",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SessionState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@param sessionState The current state of the dialog between the user and the bot.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@param sessionState The current state of the dialog between the user and the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "<p>The current state of the dialog between the user and the bot.</p>",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestAttributes",
        "c2jShape" : "StringMap",
        "deprecated" : false,
        "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestAttributes",
        "getterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@return Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
        "getterMethodName" : "getRequestAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "requestAttributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "requestAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "RequestAttributes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
        "setterMethodName" : "setRequestAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "requestAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "requestAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BotAliasId" : {
          "c2jName" : "botAliasId",
          "c2jShape" : "BotAliasIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The alias identifier in use for the bot that processes the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@param botAliasId The alias identifier in use for the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotAliasId",
          "getterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@return The alias identifier in use for the bot that processes the request.*/",
          "getterMethodName" : "getBotAliasId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botAliasId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botAliasId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotAliasId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@param botAliasId The alias identifier in use for the bot that processes the request.*/",
          "setterMethodName" : "setBotAliasId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that processes the request.</p>\n@param botAliasId The alias identifier in use for the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "<p>The alias identifier in use for the bot that processes the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BotId" : {
          "c2jName" : "botId",
          "c2jShape" : "BotIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the bot that processes the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@param botId The identifier of the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotId",
          "getterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@return The identifier of the bot that processes the request.*/",
          "getterMethodName" : "getBotId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@param botId The identifier of the bot that processes the request.*/",
          "setterMethodName" : "setBotId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the bot that processes the request.</p>\n@param botId The identifier of the bot that processes the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the bot that processes the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "LocaleId" : {
          "c2jName" : "localeId",
          "c2jShape" : "LocaleId",
          "deprecated" : false,
          "documentation" : "<p>The locale where the session is in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocaleId",
          "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
          "getterMethodName" : "getLocaleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "localeId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "localeId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LocaleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
          "setterMethodName" : "setLocaleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "<p>The locale where the session is in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestAttributes" : {
          "c2jName" : "requestAttributes",
          "c2jShape" : "StringMap",
          "deprecated" : false,
          "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestAttributes",
          "getterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@return Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
          "getterMethodName" : "getRequestAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "requestAttributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "requestAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "RequestAttributes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.*/",
          "setterMethodName" : "setRequestAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "requestAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "requestAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes with the prefix <code>x-amz-lex:</code>.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the user session that is having the conversation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@param sessionId The identifier of the user session that is having the conversation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@return The identifier of the user session that is having the conversation.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@param sessionId The identifier of the user session that is having the conversation.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the user session that is having the conversation.</p>\n@param sessionId The identifier of the user session that is having the conversation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the user session that is having the conversation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "SessionState",
          "deprecated" : false,
          "documentation" : "<p>The current state of the dialog between the user and the bot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@param sessionState The current state of the dialog between the user and the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@return The current state of the dialog between the user and the bot.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "SessionState",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionState",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SessionState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@param sessionState The current state of the dialog between the user and the bot.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The current state of the dialog between the user and the bot.</p>\n@param sessionState The current state of the dialog between the user and the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "<p>The current state of the dialog between the user and the bot.</p>",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "xmlNameSpaceUri" : null
        },
        "Text" : {
          "c2jName" : "text",
          "c2jShape" : "Text",
          "deprecated" : false,
          "documentation" : "<p>The text that the user entered. Amazon Lex interprets this text.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@param text The text that the user entered. Amazon Lex interprets this text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withText",
          "getterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@return The text that the user entered. Amazon Lex interprets this text.*/",
          "getterMethodName" : "getText",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "text",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "text",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Text",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@param text The text that the user entered. Amazon Lex interprets this text.*/",
          "setterMethodName" : "setText",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text that the user entered. Amazon Lex interprets this text.</p>\n@param text The text that the user entered. Amazon Lex interprets this text.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "text",
            "variableType" : "String",
            "documentation" : "<p>The text that the user entered. Amazon Lex interprets this text.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "botId", "botAliasId", "localeId", "text", "sessionId" ],
      "shapeName" : "RecognizeTextRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RecognizeTextRequest",
        "variableName" : "recognizeTextRequest",
        "variableType" : "RecognizeTextRequest",
        "documentation" : null,
        "simpleType" : "RecognizeTextRequest",
        "variableSetterType" : "RecognizeTextRequest"
      },
      "wrapper" : false
    },
    "RecognizeTextResult" : {
      "c2jName" : "RecognizeTextResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.response.RecognizeTextResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "messages",
        "c2jShape" : "Messages",
        "deprecated" : false,
        "documentation" : "<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessages",
        "getterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@return A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
        "getterMethodName" : "getMessages",
        "getterModel" : {
          "returnType" : "java.util.List<Message>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "messages",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "messages",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Message",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Message",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Message",
              "variableName" : "member",
              "variableType" : "Message",
              "documentation" : "",
              "simpleType" : "Message",
              "variableSetterType" : "Message"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Message",
              "variableName" : "member",
              "variableType" : "Message",
              "documentation" : "",
              "simpleType" : "Message",
              "variableSetterType" : "Message"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Message",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Message",
          "templateImplType" : "java.util.ArrayList<Message>",
          "templateType" : "java.util.List<Message>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Messages",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
        "setterMethodName" : "setMessages",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Message>",
          "variableName" : "messages",
          "variableType" : "java.util.List<Message>",
          "documentation" : "",
          "simpleType" : "List<Message>",
          "variableSetterType" : "java.util.Collection<Message>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setMessages(java.util.Collection)} or {@link #withMessages(java.util.Collection)} if you want to override the existing values.</p>\n@param messages A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Message>",
          "variableName" : "messages",
          "variableType" : "java.util.List<Message>",
          "documentation" : "<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
          "simpleType" : "List<Message>",
          "variableSetterType" : "java.util.Collection<Message>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "SessionState",
        "deprecated" : false,
        "documentation" : "<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@return Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "SessionState",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionState",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionState",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SessionState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SessionState",
          "variableName" : "sessionState",
          "variableType" : "SessionState",
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
          "simpleType" : "SessionState",
          "variableSetterType" : "SessionState"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "interpretations",
        "c2jShape" : "Interpretations",
        "deprecated" : false,
        "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInterpretations",
        "getterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@return A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
        "getterMethodName" : "getInterpretations",
        "getterModel" : {
          "returnType" : "java.util.List<Interpretation>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "interpretations",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "interpretations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Interpretation",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Interpretation",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Interpretation",
              "variableName" : "member",
              "variableType" : "Interpretation",
              "documentation" : "",
              "simpleType" : "Interpretation",
              "variableSetterType" : "Interpretation"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Interpretation",
              "variableName" : "member",
              "variableType" : "Interpretation",
              "documentation" : "",
              "simpleType" : "Interpretation",
              "variableSetterType" : "Interpretation"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Interpretation",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Interpretation",
          "templateImplType" : "java.util.ArrayList<Interpretation>",
          "templateType" : "java.util.List<Interpretation>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Interpretations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
        "setterMethodName" : "setInterpretations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Interpretation>",
          "variableName" : "interpretations",
          "variableType" : "java.util.List<Interpretation>",
          "documentation" : "",
          "simpleType" : "List<Interpretation>",
          "variableSetterType" : "java.util.Collection<Interpretation>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setInterpretations(java.util.Collection)} or {@link #withInterpretations(java.util.Collection)} if you want to override the existing values.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Interpretation>",
          "variableName" : "interpretations",
          "variableType" : "java.util.List<Interpretation>",
          "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
          "simpleType" : "List<Interpretation>",
          "variableSetterType" : "java.util.Collection<Interpretation>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestAttributes",
        "c2jShape" : "StringMap",
        "deprecated" : false,
        "documentation" : "<p>The attributes sent in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestAttributes",
        "getterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@return The attributes sent in the request.*/",
        "getterMethodName" : "getRequestAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "requestAttributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "requestAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "RequestAttributes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.*/",
        "setterMethodName" : "setRequestAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "requestAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "requestAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>The attributes sent in the request.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@return The identifier of the session in use.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Interpretations" : {
          "c2jName" : "interpretations",
          "c2jShape" : "Interpretations",
          "deprecated" : false,
          "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInterpretations",
          "getterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@return A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
          "getterMethodName" : "getInterpretations",
          "getterModel" : {
            "returnType" : "java.util.List<Interpretation>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "interpretations",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "interpretations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Interpretation",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Interpretation",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Interpretation",
                "variableName" : "member",
                "variableType" : "Interpretation",
                "documentation" : "",
                "simpleType" : "Interpretation",
                "variableSetterType" : "Interpretation"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Interpretation",
                "variableName" : "member",
                "variableType" : "Interpretation",
                "documentation" : "",
                "simpleType" : "Interpretation",
                "variableSetterType" : "Interpretation"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Interpretation",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Interpretation",
            "templateImplType" : "java.util.ArrayList<Interpretation>",
            "templateType" : "java.util.List<Interpretation>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Interpretations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
          "setterMethodName" : "setInterpretations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Interpretation>",
            "variableName" : "interpretations",
            "variableType" : "java.util.List<Interpretation>",
            "documentation" : "",
            "simpleType" : "List<Interpretation>",
            "variableSetterType" : "java.util.Collection<Interpretation>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setInterpretations(java.util.Collection)} or {@link #withInterpretations(java.util.Collection)} if you want to override the existing values.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Interpretation>",
            "variableName" : "interpretations",
            "variableType" : "java.util.List<Interpretation>",
            "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance. </p> <p>Each interpretation includes the intent, a score that indicates now confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
            "simpleType" : "List<Interpretation>",
            "variableSetterType" : "java.util.Collection<Interpretation>"
          },
          "xmlNameSpaceUri" : null
        },
        "Messages" : {
          "c2jName" : "messages",
          "c2jShape" : "Messages",
          "deprecated" : false,
          "documentation" : "<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessages",
          "getterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@return A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
          "getterMethodName" : "getMessages",
          "getterModel" : {
            "returnType" : "java.util.List<Message>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "messages",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "messages",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Message",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Message",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Message",
                "variableName" : "member",
                "variableType" : "Message",
                "documentation" : "",
                "simpleType" : "Message",
                "variableSetterType" : "Message"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Message",
                "variableName" : "member",
                "variableType" : "Message",
                "documentation" : "",
                "simpleType" : "Message",
                "variableSetterType" : "Message"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Message",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Message",
            "templateImplType" : "java.util.ArrayList<Message>",
            "templateType" : "java.util.List<Message>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Messages",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
          "setterMethodName" : "setMessages",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Message>",
            "variableName" : "messages",
            "variableType" : "java.util.List<Message>",
            "documentation" : "",
            "simpleType" : "List<Message>",
            "variableSetterType" : "java.util.Collection<Message>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setMessages(java.util.Collection)} or {@link #withMessages(java.util.Collection)} if you want to override the existing values.</p>\n@param messages A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Message>",
            "variableName" : "messages",
            "variableType" : "java.util.List<Message>",
            "documentation" : "<p>A list of messages last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
            "simpleType" : "List<Message>",
            "variableSetterType" : "java.util.Collection<Message>"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestAttributes" : {
          "c2jName" : "requestAttributes",
          "c2jShape" : "StringMap",
          "deprecated" : false,
          "documentation" : "<p>The attributes sent in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestAttributes",
          "getterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@return The attributes sent in the request.*/",
          "getterMethodName" : "getRequestAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "requestAttributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "requestAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "RequestAttributes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.*/",
          "setterMethodName" : "setRequestAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "requestAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "requestAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>The attributes sent in the request.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@return The identifier of the session in use.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "SessionState",
          "deprecated" : false,
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@return Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "SessionState",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionState",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionState",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SessionState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SessionState",
            "variableName" : "sessionState",
            "variableType" : "SessionState",
            "documentation" : "<p>Represents the current state of the dialog between the user and the bot. </p> <p>Use this to determine the progress of the conversation and what the next action may be.</p>",
            "simpleType" : "SessionState",
            "variableSetterType" : "SessionState"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RecognizeTextResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RecognizeTextResult",
        "variableName" : "recognizeTextResult",
        "variableType" : "RecognizeTextResult",
        "documentation" : null,
        "simpleType" : "RecognizeTextResult",
        "variableSetterType" : "RecognizeTextResult"
      },
      "wrapper" : false
    },
    "RecognizeUtteranceRequest" : {
      "c2jName" : "RecognizeUtteranceRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.request.RecognizeUtteranceRequest",
      "hasHeaderMember" : true,
      "hasPayloadMember" : true,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : true,
      "marshaller" : {
        "action" : "RecognizeUtterance",
        "locationName" : null,
        "requestUri" : "/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/utterance",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "botId",
        "c2jShape" : "BotIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the bot that should receive the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@param botId The identifier of the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotId",
        "getterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@return The identifier of the bot that should receive the request.*/",
        "getterMethodName" : "getBotId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@param botId The identifier of the bot that should receive the request.*/",
        "setterMethodName" : "setBotId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@param botId The identifier of the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the bot that should receive the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "botAliasId",
        "c2jShape" : "BotAliasIdentifier",
        "deprecated" : false,
        "documentation" : "<p>The alias identifier in use for the bot that should receive the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@param botAliasId The alias identifier in use for the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBotAliasId",
        "getterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@return The alias identifier in use for the bot that should receive the request.*/",
        "getterMethodName" : "getBotAliasId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "botAliasId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "botAliasId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BotAliasId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@param botAliasId The alias identifier in use for the bot that should receive the request.*/",
        "setterMethodName" : "setBotAliasId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@param botAliasId The alias identifier in use for the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "botAliasId",
          "variableType" : "String",
          "documentation" : "<p>The alias identifier in use for the bot that should receive the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "localeId",
        "c2jShape" : "LocaleId",
        "deprecated" : false,
        "documentation" : "<p>The locale where the session is in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withLocaleId",
        "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
        "getterMethodName" : "getLocaleId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "localeId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "localeId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "LocaleId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
        "setterMethodName" : "setLocaleId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "localeId",
          "variableType" : "String",
          "documentation" : "<p>The locale where the session is in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@return The identifier of the session in use.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "sessionId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "SensitiveNonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@return Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-session-state",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-session-state",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionState",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionState",
          "variableType" : "String",
          "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestAttributes",
        "c2jShape" : "SensitiveNonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestAttributes",
        "getterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@return Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.*/",
        "getterMethodName" : "getRequestAttributes",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-request-attributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-request-attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RequestAttributes",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.*/",
        "setterMethodName" : "setRequestAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestAttributes",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestAttributes",
          "variableType" : "String",
          "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestContentType",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param requestContentType Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestContentType",
        "getterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@return Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
        "getterMethodName" : "getRequestContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Type",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RequestContentType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param requestContentType Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
        "setterMethodName" : "setRequestContentType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestContentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param requestContentType Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestContentType",
          "variableType" : "String",
          "documentation" : "<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "responseContentType",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResponseContentType",
        "getterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@return The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
        "getterMethodName" : "getResponseContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Response-Content-Type",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Response-Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ResponseContentType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
        "setterMethodName" : "setResponseContentType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "responseContentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "responseContentType",
          "variableType" : "String",
          "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "inputStream",
        "c2jShape" : "BlobStream",
        "deprecated" : false,
        "documentation" : "<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@param inputStream User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInputStream",
        "getterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@return User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.*/",
        "getterMethodName" : "getInputStream",
        "getterModel" : {
          "returnType" : "java.io.InputStream",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : true,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "inputStream",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "inputStream",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : true,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.io.InputStream",
        "marshallingType" : "STREAM",
        "name" : "InputStream",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@param inputStream User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.*/",
        "setterMethodName" : "setInputStream",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "inputStream",
          "variableType" : "java.io.InputStream",
          "documentation" : "",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@param inputStream User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "inputStream",
          "variableType" : "java.io.InputStream",
          "documentation" : "<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BotAliasId" : {
          "c2jName" : "botAliasId",
          "c2jShape" : "BotAliasIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The alias identifier in use for the bot that should receive the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@param botAliasId The alias identifier in use for the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotAliasId",
          "getterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@return The alias identifier in use for the bot that should receive the request.*/",
          "getterMethodName" : "getBotAliasId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botAliasId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botAliasId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotAliasId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@param botAliasId The alias identifier in use for the bot that should receive the request.*/",
          "setterMethodName" : "setBotAliasId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The alias identifier in use for the bot that should receive the request.</p>\n@param botAliasId The alias identifier in use for the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botAliasId",
            "variableType" : "String",
            "documentation" : "<p>The alias identifier in use for the bot that should receive the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "BotId" : {
          "c2jName" : "botId",
          "c2jShape" : "BotIdentifier",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the bot that should receive the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@param botId The identifier of the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBotId",
          "getterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@return The identifier of the bot that should receive the request.*/",
          "getterMethodName" : "getBotId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "botId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "botId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BotId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@param botId The identifier of the bot that should receive the request.*/",
          "setterMethodName" : "setBotId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the bot that should receive the request.</p>\n@param botId The identifier of the bot that should receive the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "botId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the bot that should receive the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "InputStream" : {
          "c2jName" : "inputStream",
          "c2jShape" : "BlobStream",
          "deprecated" : false,
          "documentation" : "<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@param inputStream User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInputStream",
          "getterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@return User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.*/",
          "getterMethodName" : "getInputStream",
          "getterModel" : {
            "returnType" : "java.io.InputStream",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : true,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "inputStream",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "inputStream",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : true,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.io.InputStream",
          "marshallingType" : "STREAM",
          "name" : "InputStream",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@param inputStream User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.*/",
          "setterMethodName" : "setInputStream",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "inputStream",
            "variableType" : "java.io.InputStream",
            "documentation" : "",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>\n@param inputStream User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "inputStream",
            "variableType" : "java.io.InputStream",
            "documentation" : "<p>User input in PCM or Opus audio format or text format as described in the <code>requestContentType</code> parameter.</p>",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "xmlNameSpaceUri" : null
        },
        "LocaleId" : {
          "c2jName" : "localeId",
          "c2jShape" : "LocaleId",
          "deprecated" : false,
          "documentation" : "<p>The locale where the session is in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withLocaleId",
          "getterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@return The locale where the session is in use.*/",
          "getterMethodName" : "getLocaleId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "localeId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "localeId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "LocaleId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.*/",
          "setterMethodName" : "setLocaleId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The locale where the session is in use.</p>\n@param localeId The locale where the session is in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "localeId",
            "variableType" : "String",
            "documentation" : "<p>The locale where the session is in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestAttributes" : {
          "c2jName" : "requestAttributes",
          "c2jShape" : "SensitiveNonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestAttributes",
          "getterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@return Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.*/",
          "getterMethodName" : "getRequestAttributes",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-request-attributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-request-attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RequestAttributes",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.*/",
          "setterMethodName" : "setRequestAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestAttributes",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>\n@param requestAttributes Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestAttributes",
            "variableType" : "String",
            "documentation" : "<p>Request-specific information passed between the client application and Amazon Lex </p> <p>The namespace <code>x-amz-lex:</code> is reserved for special attributes. Don't create any request attributes for prefix <code>x-amz-lex:</code>.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestContentType" : {
          "c2jName" : "requestContentType",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param requestContentType Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestContentType",
          "getterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@return Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
          "getterMethodName" : "getRequestContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Type",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RequestContentType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param requestContentType Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
          "setterMethodName" : "setRequestContentType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestContentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param requestContentType Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestContentType",
            "variableType" : "String",
            "documentation" : "<p>Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:</p> <ul> <li> <p>PCM format, audio data must be in little-endian byte order.</p> <ul> <li> <p>audio/l16; rate=16000; channels=1</p> </li> <li> <p>audio/x-l16; sample-rate=16000; channel-count=1</p> </li> <li> <p>audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false</p> </li> </ul> </li> <li> <p>Opus format</p> <ul> <li> <p>audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4</p> </li> </ul> </li> <li> <p>Text format</p> <ul> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResponseContentType" : {
          "c2jName" : "responseContentType",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResponseContentType",
          "getterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@return The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
          "getterMethodName" : "getResponseContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Response-Content-Type",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Response-Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ResponseContentType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>*/",
          "setterMethodName" : "setResponseContentType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "responseContentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>\n@param responseContentType The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li>\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "responseContentType",
            "variableType" : "String",
            "documentation" : "<p>The message that Amazon Lex returns in the response can be either text or speech based on the <code>responseContentType</code> value.</p> <ul> <li> <p>If the value is <code>text/plain;charset=utf-8</code>, Amazon Lex returns text in the response.</p> </li> <li> <p>If the value begins with <code>audio/</code>, Amazon Lex returns speech in the response. Amazon Lex uses Amazon Polly to generate the speech using the configuration that you specified in the <code>requestContentType</code> parameter. For example, if you specify <code>audio/mpeg</code> as the value, Amazon Lex returns speech in the MPEG format.</p> </li> <li> <p>If the value is <code>audio/pcm</code>, the speech returned is <code>audio/pcm</code> at 16 KHz in 16-bit, little-endian format.</p> </li> <li> <p>The following are the accepted values:</p> <ul> <li> <p>audio/mpeg</p> </li> <li> <p>audio/ogg</p> </li> <li> <p>audio/pcm (16 KHz)</p> </li> <li> <p>audio/* (defaults to mpeg)</p> </li> <li> <p>text/plain; charset=utf-8</p> </li> </ul> </li> </ul>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@return The identifier of the session in use.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "sessionId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "SensitiveNonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@return Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-session-state",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-session-state",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionState",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>\n@param sessionState Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionState",
            "variableType" : "String",
            "documentation" : "<p>Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex should use in the conversation with the user.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "botId", "botAliasId", "localeId", "requestContentType", "sessionId" ],
      "shapeName" : "RecognizeUtteranceRequest",
      "signerAware" : true,
      "signerType" : "AWS4UnsignedPayloadSignerType",
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RecognizeUtteranceRequest",
        "variableName" : "recognizeUtteranceRequest",
        "variableType" : "RecognizeUtteranceRequest",
        "documentation" : null,
        "simpleType" : "RecognizeUtteranceRequest",
        "variableSetterType" : "RecognizeUtteranceRequest"
      },
      "wrapper" : false
    },
    "RecognizeUtteranceResult" : {
      "c2jName" : "RecognizeUtteranceResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.response.RecognizeUtteranceResult",
      "hasHeaderMember" : true,
      "hasPayloadMember" : true,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : true,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "inputMode",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether the input mode to the operation was text or speech. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@param inputMode Indicates whether the input mode to the operation was text or speech.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInputMode",
        "getterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@return Indicates whether the input mode to the operation was text or speech.*/",
        "getterMethodName" : "getInputMode",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-input-mode",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-input-mode",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InputMode",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@param inputMode Indicates whether the input mode to the operation was text or speech.*/",
        "setterMethodName" : "setInputMode",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "inputMode",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@param inputMode Indicates whether the input mode to the operation was text or speech.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "inputMode",
          "variableType" : "String",
          "documentation" : "<p>Indicates whether the input mode to the operation was text or speech. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "contentType",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Content type as specified in the <code>responseContentType</code> in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@param contentType Content type as specified in the <code>responseContentType</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContentType",
        "getterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@return Content type as specified in the <code>responseContentType</code> in the request.*/",
        "getterMethodName" : "getContentType",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "Content-Type",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "Content-Type",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContentType",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@param contentType Content type as specified in the <code>responseContentType</code> in the request.*/",
        "setterMethodName" : "setContentType",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@param contentType Content type as specified in the <code>responseContentType</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contentType",
          "variableType" : "String",
          "documentation" : "<p>Content type as specified in the <code>responseContentType</code> in the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "messages",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessages",
        "getterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@return A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
        "getterMethodName" : "getMessages",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-messages",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-messages",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Messages",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
        "setterMethodName" : "setMessages",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "messages",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "messages",
          "variableType" : "String",
          "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "interpretations",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInterpretations",
        "getterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@return A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
        "getterMethodName" : "getInterpretations",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-interpretations",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-interpretations",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Interpretations",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
        "setterMethodName" : "setInterpretations",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "interpretations",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "interpretations",
          "variableType" : "String",
          "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionState",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionState",
        "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@return Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.*/",
        "getterMethodName" : "getSessionState",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-session-state",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-session-state",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionState",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.*/",
        "setterMethodName" : "setSessionState",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionState",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionState",
          "variableType" : "String",
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "requestAttributes",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The attributes sent in the request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRequestAttributes",
        "getterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@return The attributes sent in the request.*/",
        "getterMethodName" : "getRequestAttributes",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-request-attributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-request-attributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RequestAttributes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.*/",
        "setterMethodName" : "setRequestAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestAttributes",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "requestAttributes",
          "variableType" : "String",
          "documentation" : "<p>The attributes sent in the request.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionId",
        "c2jShape" : "SessionId",
        "deprecated" : false,
        "documentation" : "<p>The identifier of the session in use.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionId",
        "getterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@return The identifier of the session in use.*/",
        "getterMethodName" : "getSessionId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-session-id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-session-id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "SessionId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.*/",
        "setterMethodName" : "setSessionId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sessionId",
          "variableType" : "String",
          "documentation" : "<p>The identifier of the session in use.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "inputTranscript",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@param inputTranscript The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInputTranscript",
        "getterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@return The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.*/",
        "getterMethodName" : "getInputTranscript",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : true,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "header",
          "marshallLocation" : "HEADER",
          "marshallLocationName" : "x-amz-lex-input-transcript",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "x-amz-lex-input-transcript",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InputTranscript",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@param inputTranscript The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.*/",
        "setterMethodName" : "setInputTranscript",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "inputTranscript",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@param inputTranscript The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "inputTranscript",
          "variableType" : "String",
          "documentation" : "<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "audioStream",
        "c2jShape" : "BlobStream",
        "deprecated" : false,
        "documentation" : "<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@param audioStream The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAudioStream",
        "getterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@return The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.*/",
        "getterMethodName" : "getAudioStream",
        "getterModel" : {
          "returnType" : "java.io.InputStream",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : true,
          "isStreaming" : true,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "audioStream",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "audioStream",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : true,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.io.InputStream",
        "marshallingType" : "STREAM",
        "name" : "AudioStream",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@param audioStream The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.*/",
        "setterMethodName" : "setAudioStream",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "audioStream",
          "variableType" : "java.io.InputStream",
          "documentation" : "",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@param audioStream The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.io.InputStream",
          "variableName" : "audioStream",
          "variableType" : "java.io.InputStream",
          "documentation" : "<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>",
          "simpleType" : "InputStream",
          "variableSetterType" : "java.io.InputStream"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AudioStream" : {
          "c2jName" : "audioStream",
          "c2jShape" : "BlobStream",
          "deprecated" : false,
          "documentation" : "<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@param audioStream The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAudioStream",
          "getterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@return The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.*/",
          "getterMethodName" : "getAudioStream",
          "getterModel" : {
            "returnType" : "java.io.InputStream",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : true,
            "isStreaming" : true,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "audioStream",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "audioStream",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : true,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.io.InputStream",
          "marshallingType" : "STREAM",
          "name" : "AudioStream",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@param audioStream The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.*/",
          "setterMethodName" : "setAudioStream",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "audioStream",
            "variableType" : "java.io.InputStream",
            "documentation" : "",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>\n@param audioStream The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.io.InputStream",
            "variableName" : "audioStream",
            "variableType" : "java.io.InputStream",
            "documentation" : "<p>The prompt or statement to send to the user. This is based on the bot configuration and context. For example, if Amazon Lex did not understand the user intent, it sends the <code>clarificationPrompt</code> configured for the bot. If the intent requires confirmation before taking the fulfillment action, it sends the <code>confirmationPrompt</code>. Another example: Suppose that the Lambda function successfully fulfilled the intent, and sent a message to convey to the user. Then Amazon Lex sends that message in the response.</p>",
            "simpleType" : "InputStream",
            "variableSetterType" : "java.io.InputStream"
          },
          "xmlNameSpaceUri" : null
        },
        "ContentType" : {
          "c2jName" : "contentType",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Content type as specified in the <code>responseContentType</code> in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@param contentType Content type as specified in the <code>responseContentType</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContentType",
          "getterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@return Content type as specified in the <code>responseContentType</code> in the request.*/",
          "getterMethodName" : "getContentType",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "Content-Type",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "Content-Type",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContentType",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@param contentType Content type as specified in the <code>responseContentType</code> in the request.*/",
          "setterMethodName" : "setContentType",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Content type as specified in the <code>responseContentType</code> in the request.</p>\n@param contentType Content type as specified in the <code>responseContentType</code> in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contentType",
            "variableType" : "String",
            "documentation" : "<p>Content type as specified in the <code>responseContentType</code> in the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "InputMode" : {
          "c2jName" : "inputMode",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether the input mode to the operation was text or speech. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@param inputMode Indicates whether the input mode to the operation was text or speech.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInputMode",
          "getterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@return Indicates whether the input mode to the operation was text or speech.*/",
          "getterMethodName" : "getInputMode",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-input-mode",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-input-mode",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InputMode",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@param inputMode Indicates whether the input mode to the operation was text or speech.*/",
          "setterMethodName" : "setInputMode",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "inputMode",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether the input mode to the operation was text or speech. </p>\n@param inputMode Indicates whether the input mode to the operation was text or speech.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "inputMode",
            "variableType" : "String",
            "documentation" : "<p>Indicates whether the input mode to the operation was text or speech. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "InputTranscript" : {
          "c2jName" : "inputTranscript",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@param inputTranscript The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInputTranscript",
          "getterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@return The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.*/",
          "getterMethodName" : "getInputTranscript",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-input-transcript",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-input-transcript",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InputTranscript",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@param inputTranscript The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.*/",
          "setterMethodName" : "setInputTranscript",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "inputTranscript",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>\n@param inputTranscript The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "inputTranscript",
            "variableType" : "String",
            "documentation" : "<p>The text used to process the request.</p> <p>If the input was an audio stream, the <code>inputTranscript</code> field contains the text extracted from the audio stream. This is the text that is actually processed to recognize intents and slot values. You can use this information to determine if Amazon Lex is correctly processing the audio that you send.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Interpretations" : {
          "c2jName" : "interpretations",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInterpretations",
          "getterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@return A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
          "getterMethodName" : "getInterpretations",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-interpretations",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-interpretations",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Interpretations",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.*/",
          "setterMethodName" : "setInterpretations",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "interpretations",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>\n@param interpretations A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "interpretations",
            "variableType" : "String",
            "documentation" : "<p>A list of intents that Amazon Lex determined might satisfy the user's utterance.</p> <p>Each interpretation includes the intent, a score that indicates how confident Amazon Lex is that the interpretation is the correct one, and an optional sentiment response that indicates the sentiment expressed in the utterance.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Messages" : {
          "c2jName" : "messages",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessages",
          "getterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@return A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
          "getterMethodName" : "getMessages",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-messages",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-messages",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Messages",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.*/",
          "setterMethodName" : "setMessages",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "messages",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>\n@param messages A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "messages",
            "variableType" : "String",
            "documentation" : "<p>A list of messages that were last sent to the user. The messages are ordered based on the order that you returned the messages from your Lambda function or the order that the messages are defined in the bot.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RequestAttributes" : {
          "c2jName" : "requestAttributes",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The attributes sent in the request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRequestAttributes",
          "getterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@return The attributes sent in the request.*/",
          "getterMethodName" : "getRequestAttributes",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-request-attributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-request-attributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RequestAttributes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.*/",
          "setterMethodName" : "setRequestAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestAttributes",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The attributes sent in the request.</p>\n@param requestAttributes The attributes sent in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "requestAttributes",
            "variableType" : "String",
            "documentation" : "<p>The attributes sent in the request.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionId" : {
          "c2jName" : "sessionId",
          "c2jShape" : "SessionId",
          "deprecated" : false,
          "documentation" : "<p>The identifier of the session in use.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionId",
          "getterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@return The identifier of the session in use.*/",
          "getterMethodName" : "getSessionId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-session-id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-session-id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.*/",
          "setterMethodName" : "setSessionId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The identifier of the session in use.</p>\n@param sessionId The identifier of the session in use.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionId",
            "variableType" : "String",
            "documentation" : "<p>The identifier of the session in use.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionState" : {
          "c2jName" : "sessionState",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionState",
          "getterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@return Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.*/",
          "getterMethodName" : "getSessionState",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : true,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "header",
            "marshallLocation" : "HEADER",
            "marshallLocationName" : "x-amz-lex-session-state",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "x-amz-lex-session-state",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "SessionState",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.*/",
          "setterMethodName" : "setSessionState",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionState",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>\n@param sessionState Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sessionState",
            "variableType" : "String",
            "documentation" : "<p>Represents the current state of the dialog between the user and the bot.</p> <p>Use this to determine the progress of the conversation and what the next action might be.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RecognizeUtteranceResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RecognizeUtteranceResult",
        "variableName" : "recognizeUtteranceResult",
        "variableType" : "RecognizeUtteranceResult",
        "documentation" : null,
        "simpleType" : "RecognizeUtteranceResult",
        "variableSetterType" : "RecognizeUtteranceResult"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "SentimentResponse" : {
      "c2jName" : "SentimentResponse",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Provides information about the sentiment expressed in a user's response in a conversation. Sentiments are determined using Amazon Comprehend. Sentiments are only returned if they are enabled for the bot.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/comprehend/latest/dg/how-sentiment.html\"> Determine Sentiment </a> in the <i>Amazon Comprehend developer guide</i>.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.SentimentResponse",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "sentiment",
        "c2jShape" : "SentimentType",
        "deprecated" : false,
        "documentation" : "<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "SentimentType",
        "fluentSetterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@param sentiment The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SentimentType*/",
        "fluentSetterMethodName" : "withSentiment",
        "getterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@return The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@see SentimentType*/",
        "getterMethodName" : "getSentiment",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sentiment",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sentiment",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Sentiment",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@param sentiment The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@see SentimentType*/",
        "setterMethodName" : "setSentiment",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sentiment",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@param sentiment The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SentimentType*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "sentiment",
          "variableType" : "String",
          "documentation" : "<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sentimentScore",
        "c2jShape" : "SentimentScore",
        "deprecated" : false,
        "documentation" : "",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**\n@param sentimentScore \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSentimentScore",
        "getterDocumentation" : "/**\n@return */",
        "getterMethodName" : "getSentimentScore",
        "getterModel" : {
          "returnType" : "SentimentScore",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sentimentScore",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sentimentScore",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "SentimentScore",
        "sensitive" : false,
        "setterDocumentation" : "/**\n@param sentimentScore */",
        "setterMethodName" : "setSentimentScore",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SentimentScore",
          "variableName" : "sentimentScore",
          "variableType" : "SentimentScore",
          "documentation" : "",
          "simpleType" : "SentimentScore",
          "variableSetterType" : "SentimentScore"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**\n@param sentimentScore \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "SentimentScore",
          "variableName" : "sentimentScore",
          "variableType" : "SentimentScore",
          "documentation" : "",
          "simpleType" : "SentimentScore",
          "variableSetterType" : "SentimentScore"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Sentiment" : {
          "c2jName" : "sentiment",
          "c2jShape" : "SentimentType",
          "deprecated" : false,
          "documentation" : "<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "SentimentType",
          "fluentSetterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@param sentiment The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SentimentType*/",
          "fluentSetterMethodName" : "withSentiment",
          "getterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@return The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@see SentimentType*/",
          "getterMethodName" : "getSentiment",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sentiment",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sentiment",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Sentiment",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@param sentiment The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@see SentimentType*/",
          "setterMethodName" : "setSentiment",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sentiment",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>\n@param sentiment The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.\n@return Returns a reference to this object so that method calls can be chained together.\n@see SentimentType*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "sentiment",
            "variableType" : "String",
            "documentation" : "<p>The overall sentiment expressed in the user's response. This is the sentiment most likely expressed by the user based on the analysis by Amazon Comprehend.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SentimentScore" : {
          "c2jName" : "sentimentScore",
          "c2jShape" : "SentimentScore",
          "deprecated" : false,
          "documentation" : "",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**\n@param sentimentScore \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSentimentScore",
          "getterDocumentation" : "/**\n@return */",
          "getterMethodName" : "getSentimentScore",
          "getterModel" : {
            "returnType" : "SentimentScore",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sentimentScore",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sentimentScore",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "SentimentScore",
          "sensitive" : false,
          "setterDocumentation" : "/**\n@param sentimentScore */",
          "setterMethodName" : "setSentimentScore",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SentimentScore",
            "variableName" : "sentimentScore",
            "variableType" : "SentimentScore",
            "documentation" : "",
            "simpleType" : "SentimentScore",
            "variableSetterType" : "SentimentScore"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**\n@param sentimentScore \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "SentimentScore",
            "variableName" : "sentimentScore",
            "variableType" : "SentimentScore",
            "documentation" : "",
            "simpleType" : "SentimentScore",
            "variableSetterType" : "SentimentScore"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SentimentResponse",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SentimentResponse",
        "variableName" : "sentimentResponse",
        "variableType" : "SentimentResponse",
        "documentation" : null,
        "simpleType" : "SentimentResponse",
        "variableSetterType" : "SentimentResponse"
      },
      "wrapper" : false
    },
    "SentimentScore" : {
      "c2jName" : "SentimentScore",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The individual sentiment responses for the utterance.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.SentimentScore",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "positive",
        "c2jShape" : "Double",
        "deprecated" : false,
        "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@param positive The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withPositive",
        "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.*/",
        "getterMethodName" : "getPositive",
        "getterModel" : {
          "returnType" : "Double",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "positive",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "positive",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Double",
        "marshallingType" : "DOUBLE",
        "name" : "Positive",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@param positive The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.*/",
        "setterMethodName" : "setPositive",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "positive",
          "variableType" : "Double",
          "documentation" : "",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@param positive The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "positive",
          "variableType" : "Double",
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "negative",
        "c2jShape" : "Double",
        "deprecated" : false,
        "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@param negative The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNegative",
        "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.*/",
        "getterMethodName" : "getNegative",
        "getterModel" : {
          "returnType" : "Double",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "negative",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "negative",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Double",
        "marshallingType" : "DOUBLE",
        "name" : "Negative",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@param negative The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.*/",
        "setterMethodName" : "setNegative",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "negative",
          "variableType" : "Double",
          "documentation" : "",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@param negative The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "negative",
          "variableType" : "Double",
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "neutral",
        "c2jShape" : "Double",
        "deprecated" : false,
        "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@param neutral The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNeutral",
        "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.*/",
        "getterMethodName" : "getNeutral",
        "getterModel" : {
          "returnType" : "Double",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "neutral",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "neutral",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Double",
        "marshallingType" : "DOUBLE",
        "name" : "Neutral",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@param neutral The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.*/",
        "setterMethodName" : "setNeutral",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "neutral",
          "variableType" : "Double",
          "documentation" : "",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@param neutral The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "neutral",
          "variableType" : "Double",
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "mixed",
        "c2jShape" : "Double",
        "deprecated" : false,
        "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@param mixed The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMixed",
        "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.*/",
        "getterMethodName" : "getMixed",
        "getterModel" : {
          "returnType" : "Double",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "mixed",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "mixed",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Double",
        "marshallingType" : "DOUBLE",
        "name" : "Mixed",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@param mixed The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.*/",
        "setterMethodName" : "setMixed",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "mixed",
          "variableType" : "Double",
          "documentation" : "",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@param mixed The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Double",
          "variableName" : "mixed",
          "variableType" : "Double",
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>",
          "simpleType" : "Double",
          "variableSetterType" : "Double"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Mixed" : {
          "c2jName" : "mixed",
          "c2jShape" : "Double",
          "deprecated" : false,
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@param mixed The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMixed",
          "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.*/",
          "getterMethodName" : "getMixed",
          "getterModel" : {
            "returnType" : "Double",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "mixed",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "mixed",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Double",
          "marshallingType" : "DOUBLE",
          "name" : "Mixed",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@param mixed The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.*/",
          "setterMethodName" : "setMixed",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "mixed",
            "variableType" : "Double",
            "documentation" : "",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>\n@param mixed The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "mixed",
            "variableType" : "Double",
            "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>MIXED</code> sentiment.</p>",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "xmlNameSpaceUri" : null
        },
        "Negative" : {
          "c2jName" : "negative",
          "c2jShape" : "Double",
          "deprecated" : false,
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@param negative The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNegative",
          "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.*/",
          "getterMethodName" : "getNegative",
          "getterModel" : {
            "returnType" : "Double",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "negative",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "negative",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Double",
          "marshallingType" : "DOUBLE",
          "name" : "Negative",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@param negative The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.*/",
          "setterMethodName" : "setNegative",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "negative",
            "variableType" : "Double",
            "documentation" : "",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>\n@param negative The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "negative",
            "variableType" : "Double",
            "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEGATIVE</code> sentiment.</p>",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "xmlNameSpaceUri" : null
        },
        "Neutral" : {
          "c2jName" : "neutral",
          "c2jShape" : "Double",
          "deprecated" : false,
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@param neutral The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNeutral",
          "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.*/",
          "getterMethodName" : "getNeutral",
          "getterModel" : {
            "returnType" : "Double",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "neutral",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "neutral",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Double",
          "marshallingType" : "DOUBLE",
          "name" : "Neutral",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@param neutral The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.*/",
          "setterMethodName" : "setNeutral",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "neutral",
            "variableType" : "Double",
            "documentation" : "",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>\n@param neutral The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "neutral",
            "variableType" : "Double",
            "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>NEUTRAL</code> sentiment.</p>",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "xmlNameSpaceUri" : null
        },
        "Positive" : {
          "c2jName" : "positive",
          "c2jShape" : "Double",
          "deprecated" : false,
          "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@param positive The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withPositive",
          "getterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@return The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.*/",
          "getterMethodName" : "getPositive",
          "getterModel" : {
            "returnType" : "Double",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "positive",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "positive",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Double",
          "marshallingType" : "DOUBLE",
          "name" : "Positive",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@param positive The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.*/",
          "setterMethodName" : "setPositive",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "positive",
            "variableType" : "Double",
            "documentation" : "",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>\n@param positive The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Double",
            "variableName" : "positive",
            "variableType" : "Double",
            "documentation" : "<p>The level of confidence that Amazon Comprehend has in the accuracy of its detection of the <code>POSITIVE</code> sentiment.</p>",
            "simpleType" : "Double",
            "variableSetterType" : "Double"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SentimentScore",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SentimentScore",
        "variableName" : "sentimentScore",
        "variableType" : "SentimentScore",
        "documentation" : null,
        "simpleType" : "SentimentScore",
        "variableSetterType" : "SentimentScore"
      },
      "wrapper" : false
    },
    "SentimentType" : {
      "c2jName" : "SentimentType",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "MIXED",
        "value" : "MIXED"
      }, {
        "name" : "NEGATIVE",
        "value" : "NEGATIVE"
      }, {
        "name" : "NEUTRAL",
        "value" : "NEUTRAL"
      }, {
        "name" : "POSITIVE",
        "value" : "POSITIVE"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.enum.SentimentType",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SentimentType",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SentimentType",
        "variableName" : "sentimentType",
        "variableType" : "SentimentType",
        "documentation" : null,
        "simpleType" : "SentimentType",
        "variableSetterType" : "SentimentType"
      },
      "wrapper" : false
    },
    "SessionState" : {
      "c2jName" : "SessionState",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The state of the user's session with Amazon Lex.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.SessionState",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "dialogAction",
        "c2jShape" : "DialogAction",
        "deprecated" : false,
        "documentation" : "<p>The next step that Amazon Lex should take in the conversation with a user.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@param dialogAction The next step that Amazon Lex should take in the conversation with a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDialogAction",
        "getterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@return The next step that Amazon Lex should take in the conversation with a user.*/",
        "getterMethodName" : "getDialogAction",
        "getterModel" : {
          "returnType" : "DialogAction",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dialogAction",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dialogAction",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DialogAction",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@param dialogAction The next step that Amazon Lex should take in the conversation with a user.*/",
        "setterMethodName" : "setDialogAction",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DialogAction",
          "variableName" : "dialogAction",
          "variableType" : "DialogAction",
          "documentation" : "",
          "simpleType" : "DialogAction",
          "variableSetterType" : "DialogAction"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@param dialogAction The next step that Amazon Lex should take in the conversation with a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DialogAction",
          "variableName" : "dialogAction",
          "variableType" : "DialogAction",
          "documentation" : "<p>The next step that Amazon Lex should take in the conversation with a user.</p>",
          "simpleType" : "DialogAction",
          "variableSetterType" : "DialogAction"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "intent",
        "c2jShape" : "Intent",
        "deprecated" : false,
        "documentation" : "<p>The active intent that Amazon Lex is processing.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@param intent The active intent that Amazon Lex is processing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIntent",
        "getterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@return The active intent that Amazon Lex is processing.*/",
        "getterMethodName" : "getIntent",
        "getterModel" : {
          "returnType" : "Intent",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "intent",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "intent",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Intent",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@param intent The active intent that Amazon Lex is processing.*/",
        "setterMethodName" : "setIntent",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Intent",
          "variableName" : "intent",
          "variableType" : "Intent",
          "documentation" : "",
          "simpleType" : "Intent",
          "variableSetterType" : "Intent"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@param intent The active intent that Amazon Lex is processing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Intent",
          "variableName" : "intent",
          "variableType" : "Intent",
          "documentation" : "<p>The active intent that Amazon Lex is processing.</p>",
          "simpleType" : "Intent",
          "variableSetterType" : "Intent"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "activeContexts",
        "c2jShape" : "ActiveContextsList",
        "deprecated" : false,
        "documentation" : "<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n@param activeContexts One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withActiveContexts",
        "getterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n@return One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.*/",
        "getterMethodName" : "getActiveContexts",
        "getterModel" : {
          "returnType" : "java.util.List<ActiveContext>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "activeContexts",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "activeContexts",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ActiveContext",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ActiveContext",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ActiveContext",
              "variableName" : "member",
              "variableType" : "ActiveContext",
              "documentation" : "",
              "simpleType" : "ActiveContext",
              "variableSetterType" : "ActiveContext"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ActiveContext",
              "variableName" : "member",
              "variableType" : "ActiveContext",
              "documentation" : "",
              "simpleType" : "ActiveContext",
              "variableSetterType" : "ActiveContext"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ActiveContext",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ActiveContext",
          "templateImplType" : "java.util.ArrayList<ActiveContext>",
          "templateType" : "java.util.List<ActiveContext>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ActiveContexts",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n@param activeContexts One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.*/",
        "setterMethodName" : "setActiveContexts",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ActiveContext>",
          "variableName" : "activeContexts",
          "variableType" : "java.util.List<ActiveContext>",
          "documentation" : "",
          "simpleType" : "List<ActiveContext>",
          "variableSetterType" : "java.util.Collection<ActiveContext>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActiveContexts(java.util.Collection)} or {@link #withActiveContexts(java.util.Collection)} if you want to override the existing values.</p>\n@param activeContexts One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ActiveContext>",
          "variableName" : "activeContexts",
          "variableType" : "java.util.List<ActiveContext>",
          "documentation" : "<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>",
          "simpleType" : "List<ActiveContext>",
          "variableSetterType" : "java.util.Collection<ActiveContext>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "sessionAttributes",
        "c2jShape" : "StringMap",
        "deprecated" : false,
        "documentation" : "<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@param sessionAttributes Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSessionAttributes",
        "getterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@return Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.*/",
        "getterMethodName" : "getSessionAttributes",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "sessionAttributes",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "sessionAttributes",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "String",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "SessionAttributes",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@param sessionAttributes Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.*/",
        "setterMethodName" : "setSessionAttributes",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "sessionAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@param sessionAttributes Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "sessionAttributes",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "originatingRequestId",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p/>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p/>\n@param originatingRequestId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOriginatingRequestId",
        "getterDocumentation" : "/**<p/>\n@return */",
        "getterMethodName" : "getOriginatingRequestId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "originatingRequestId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "originatingRequestId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OriginatingRequestId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p/>\n@param originatingRequestId */",
        "setterMethodName" : "setOriginatingRequestId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "originatingRequestId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p/>\n@param originatingRequestId \n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "originatingRequestId",
          "variableType" : "String",
          "documentation" : "<p/>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ActiveContexts" : {
          "c2jName" : "activeContexts",
          "c2jShape" : "ActiveContextsList",
          "deprecated" : false,
          "documentation" : "<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n@param activeContexts One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withActiveContexts",
          "getterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n@return One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.*/",
          "getterMethodName" : "getActiveContexts",
          "getterModel" : {
            "returnType" : "java.util.List<ActiveContext>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "activeContexts",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "activeContexts",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ActiveContext",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ActiveContext",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ActiveContext",
                "variableName" : "member",
                "variableType" : "ActiveContext",
                "documentation" : "",
                "simpleType" : "ActiveContext",
                "variableSetterType" : "ActiveContext"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ActiveContext",
                "variableName" : "member",
                "variableType" : "ActiveContext",
                "documentation" : "",
                "simpleType" : "ActiveContext",
                "variableSetterType" : "ActiveContext"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ActiveContext",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ActiveContext",
            "templateImplType" : "java.util.ArrayList<ActiveContext>",
            "templateType" : "java.util.List<ActiveContext>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ActiveContexts",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n@param activeContexts One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.*/",
          "setterMethodName" : "setActiveContexts",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ActiveContext>",
            "variableName" : "activeContexts",
            "variableType" : "java.util.List<ActiveContext>",
            "documentation" : "",
            "simpleType" : "List<ActiveContext>",
            "variableSetterType" : "java.util.Collection<ActiveContext>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setActiveContexts(java.util.Collection)} or {@link #withActiveContexts(java.util.Collection)} if you want to override the existing values.</p>\n@param activeContexts One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ActiveContext>",
            "variableName" : "activeContexts",
            "variableType" : "java.util.List<ActiveContext>",
            "documentation" : "<p>One or more contexts that indicate to Amazon Lex the context of a request. When a context is active, Amazon Lex considers intents with the matching context as a trigger as the next intent in a session.</p>",
            "simpleType" : "List<ActiveContext>",
            "variableSetterType" : "java.util.Collection<ActiveContext>"
          },
          "xmlNameSpaceUri" : null
        },
        "DialogAction" : {
          "c2jName" : "dialogAction",
          "c2jShape" : "DialogAction",
          "deprecated" : false,
          "documentation" : "<p>The next step that Amazon Lex should take in the conversation with a user.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@param dialogAction The next step that Amazon Lex should take in the conversation with a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDialogAction",
          "getterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@return The next step that Amazon Lex should take in the conversation with a user.*/",
          "getterMethodName" : "getDialogAction",
          "getterModel" : {
            "returnType" : "DialogAction",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dialogAction",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dialogAction",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DialogAction",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@param dialogAction The next step that Amazon Lex should take in the conversation with a user.*/",
          "setterMethodName" : "setDialogAction",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DialogAction",
            "variableName" : "dialogAction",
            "variableType" : "DialogAction",
            "documentation" : "",
            "simpleType" : "DialogAction",
            "variableSetterType" : "DialogAction"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The next step that Amazon Lex should take in the conversation with a user.</p>\n@param dialogAction The next step that Amazon Lex should take in the conversation with a user.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DialogAction",
            "variableName" : "dialogAction",
            "variableType" : "DialogAction",
            "documentation" : "<p>The next step that Amazon Lex should take in the conversation with a user.</p>",
            "simpleType" : "DialogAction",
            "variableSetterType" : "DialogAction"
          },
          "xmlNameSpaceUri" : null
        },
        "Intent" : {
          "c2jName" : "intent",
          "c2jShape" : "Intent",
          "deprecated" : false,
          "documentation" : "<p>The active intent that Amazon Lex is processing.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@param intent The active intent that Amazon Lex is processing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIntent",
          "getterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@return The active intent that Amazon Lex is processing.*/",
          "getterMethodName" : "getIntent",
          "getterModel" : {
            "returnType" : "Intent",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "intent",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "intent",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Intent",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@param intent The active intent that Amazon Lex is processing.*/",
          "setterMethodName" : "setIntent",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Intent",
            "variableName" : "intent",
            "variableType" : "Intent",
            "documentation" : "",
            "simpleType" : "Intent",
            "variableSetterType" : "Intent"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The active intent that Amazon Lex is processing.</p>\n@param intent The active intent that Amazon Lex is processing.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Intent",
            "variableName" : "intent",
            "variableType" : "Intent",
            "documentation" : "<p>The active intent that Amazon Lex is processing.</p>",
            "simpleType" : "Intent",
            "variableSetterType" : "Intent"
          },
          "xmlNameSpaceUri" : null
        },
        "OriginatingRequestId" : {
          "c2jName" : "originatingRequestId",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p/>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p/>\n@param originatingRequestId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOriginatingRequestId",
          "getterDocumentation" : "/**<p/>\n@return */",
          "getterMethodName" : "getOriginatingRequestId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "originatingRequestId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "originatingRequestId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OriginatingRequestId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p/>\n@param originatingRequestId */",
          "setterMethodName" : "setOriginatingRequestId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "originatingRequestId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p/>\n@param originatingRequestId \n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "originatingRequestId",
            "variableType" : "String",
            "documentation" : "<p/>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "SessionAttributes" : {
          "c2jName" : "sessionAttributes",
          "c2jShape" : "StringMap",
          "deprecated" : false,
          "documentation" : "<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@param sessionAttributes Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSessionAttributes",
          "getterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@return Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.*/",
          "getterMethodName" : "getSessionAttributes",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "sessionAttributes",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "sessionAttributes",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "String",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "SessionAttributes",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@param sessionAttributes Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.*/",
          "setterMethodName" : "setSessionAttributes",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "sessionAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>\n@param sessionAttributes Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "sessionAttributes",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>Map of key/value pairs representing session-specific context information. It contains application information passed between Amazon Lex and a client application.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SessionState",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SessionState",
        "variableName" : "sessionState",
        "variableType" : "SessionState",
        "documentation" : null,
        "simpleType" : "SessionState",
        "variableSetterType" : "SessionState"
      },
      "wrapper" : false
    },
    "Slot" : {
      "c2jName" : "Slot",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A value that Amazon Lex uses to fulfill an intent. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.Slot",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "value",
        "c2jShape" : "Value",
        "deprecated" : false,
        "documentation" : "<p>The current value of the slot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The current value of the slot.</p>\n@param value The current value of the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withValue",
        "getterDocumentation" : "/**<p>The current value of the slot.</p>\n@return The current value of the slot.*/",
        "getterMethodName" : "getValue",
        "getterModel" : {
          "returnType" : "Value",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "value",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "value",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Value",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The current value of the slot.</p>\n@param value The current value of the slot.*/",
        "setterMethodName" : "setValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Value",
          "variableName" : "value",
          "variableType" : "Value",
          "documentation" : "",
          "simpleType" : "Value",
          "variableSetterType" : "Value"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The current value of the slot.</p>\n@param value The current value of the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Value",
          "variableName" : "value",
          "variableType" : "Value",
          "documentation" : "<p>The current value of the slot.</p>",
          "simpleType" : "Value",
          "variableSetterType" : "Value"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Value" : {
          "c2jName" : "value",
          "c2jShape" : "Value",
          "deprecated" : false,
          "documentation" : "<p>The current value of the slot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The current value of the slot.</p>\n@param value The current value of the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withValue",
          "getterDocumentation" : "/**<p>The current value of the slot.</p>\n@return The current value of the slot.*/",
          "getterMethodName" : "getValue",
          "getterModel" : {
            "returnType" : "Value",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "value",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "value",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Value",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The current value of the slot.</p>\n@param value The current value of the slot.*/",
          "setterMethodName" : "setValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Value",
            "variableName" : "value",
            "variableType" : "Value",
            "documentation" : "",
            "simpleType" : "Value",
            "variableSetterType" : "Value"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The current value of the slot.</p>\n@param value The current value of the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Value",
            "variableName" : "value",
            "variableType" : "Value",
            "documentation" : "<p>The current value of the slot.</p>",
            "simpleType" : "Value",
            "variableSetterType" : "Value"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Slot",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Slot",
        "variableName" : "slot",
        "variableType" : "Slot",
        "documentation" : null,
        "simpleType" : "Slot",
        "variableSetterType" : "Slot"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    },
    "ValidationException" : {
      "c2jName" : "ValidationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p/>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ValidationException",
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.exception.ValidationException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.lexruntimev2.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "ValidationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ValidationException",
        "variableName" : "validationException",
        "variableType" : "ValidationException",
        "documentation" : null,
        "simpleType" : "ValidationException",
        "variableSetterType" : "ValidationException"
      },
      "wrapper" : false
    },
    "Value" : {
      "c2jName" : "Value",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The value of a slot.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.lexruntimev2.model.Value",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "originalValue",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The text of the utterance from the user that was entered for the slot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@param originalValue The text of the utterance from the user that was entered for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withOriginalValue",
        "getterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@return The text of the utterance from the user that was entered for the slot.*/",
        "getterMethodName" : "getOriginalValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "originalValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "originalValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OriginalValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@param originalValue The text of the utterance from the user that was entered for the slot.*/",
        "setterMethodName" : "setOriginalValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "originalValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@param originalValue The text of the utterance from the user that was entered for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "originalValue",
          "variableType" : "String",
          "documentation" : "<p>The text of the utterance from the user that was entered for the slot.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "interpretedValue",
        "c2jShape" : "NonEmptyString",
        "deprecated" : false,
        "documentation" : "<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@param interpretedValue The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withInterpretedValue",
        "getterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@return The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.*/",
        "getterMethodName" : "getInterpretedValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "interpretedValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "interpretedValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "InterpretedValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@param interpretedValue The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.*/",
        "setterMethodName" : "setInterpretedValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "interpretedValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@param interpretedValue The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "interpretedValue",
          "variableType" : "String",
          "documentation" : "<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "resolvedValues",
        "c2jShape" : "StringList",
        "deprecated" : false,
        "documentation" : "<p>A list of additional values that have been recognized for the slot.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n@param resolvedValues A list of additional values that have been recognized for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResolvedValues",
        "getterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n@return A list of additional values that have been recognized for the slot.*/",
        "getterMethodName" : "getResolvedValues",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "resolvedValues",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "resolvedValues",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "NonEmptyString",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ResolvedValues",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n@param resolvedValues A list of additional values that have been recognized for the slot.*/",
        "setterMethodName" : "setResolvedValues",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "resolvedValues",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolvedValues(java.util.Collection)} or {@link #withResolvedValues(java.util.Collection)} if you want to override the existing values.</p>\n@param resolvedValues A list of additional values that have been recognized for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "resolvedValues",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p>A list of additional values that have been recognized for the slot.</p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "InterpretedValue" : {
          "c2jName" : "interpretedValue",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@param interpretedValue The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withInterpretedValue",
          "getterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@return The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.*/",
          "getterMethodName" : "getInterpretedValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "interpretedValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "interpretedValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "InterpretedValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@param interpretedValue The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.*/",
          "setterMethodName" : "setInterpretedValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "interpretedValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>\n@param interpretedValue The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "interpretedValue",
            "variableType" : "String",
            "documentation" : "<p>The value that Amazon Lex determines for the slot. The actual value depends on the setting of the value selection strategy for the bot. You can choose to use the value entered by the user, or you can have Amazon Lex choose the first value in the <code>resolvedValues</code> list.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OriginalValue" : {
          "c2jName" : "originalValue",
          "c2jShape" : "NonEmptyString",
          "deprecated" : false,
          "documentation" : "<p>The text of the utterance from the user that was entered for the slot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@param originalValue The text of the utterance from the user that was entered for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withOriginalValue",
          "getterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@return The text of the utterance from the user that was entered for the slot.*/",
          "getterMethodName" : "getOriginalValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "originalValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "originalValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OriginalValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@param originalValue The text of the utterance from the user that was entered for the slot.*/",
          "setterMethodName" : "setOriginalValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "originalValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The text of the utterance from the user that was entered for the slot.</p>\n@param originalValue The text of the utterance from the user that was entered for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "originalValue",
            "variableType" : "String",
            "documentation" : "<p>The text of the utterance from the user that was entered for the slot.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ResolvedValues" : {
          "c2jName" : "resolvedValues",
          "c2jShape" : "StringList",
          "deprecated" : false,
          "documentation" : "<p>A list of additional values that have been recognized for the slot.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n@param resolvedValues A list of additional values that have been recognized for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResolvedValues",
          "getterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n@return A list of additional values that have been recognized for the slot.*/",
          "getterMethodName" : "getResolvedValues",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "resolvedValues",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "resolvedValues",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "NonEmptyString",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ResolvedValues",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n@param resolvedValues A list of additional values that have been recognized for the slot.*/",
          "setterMethodName" : "setResolvedValues",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "resolvedValues",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of additional values that have been recognized for the slot.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setResolvedValues(java.util.Collection)} or {@link #withResolvedValues(java.util.Collection)} if you want to override the existing values.</p>\n@param resolvedValues A list of additional values that have been recognized for the slot.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "resolvedValues",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p>A list of additional values that have been recognized for the slot.</p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.lexruntimev2.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "interpretedValue" ],
      "shapeName" : "Value",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Value",
        "variableName" : "value",
        "variableType" : "Value",
        "documentation" : null,
        "simpleType" : "Value",
        "variableSetterType" : "Value"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2016-2021 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonLexRuntimeV2Exception",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.lexruntimev2.model.AmazonLexRuntimeV2Exception",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.lexruntimev2.model.transform"
}