{
  "customizationConfig" : {
    "additionalShapeConstructors" : null,
    "authPolicyActions" : {
      "actionPrefix" : null,
      "additionalOperations" : null,
      "fileNamePrefix" : null,
      "skip" : true
    },
    "calculateCRC32FromCompressedData" : false,
    "contentTypeOverride" : null,
    "convenienceTypeOverloads" : [ ],
    "customClientConfigFactory" : null,
    "customCodeTemplates" : null,
    "customErrorCodeFieldName" : null,
    "customExceptionUnmarshallerImpl" : null,
    "customFileHeader" : null,
    "customResponseHandlerFqcn" : null,
    "customResponseMetadataClassName" : null,
    "customServiceMetadata" : null,
    "customServiceNameForRequest" : null,
    "customSignerProvider" : null,
    "deprecatedSuppressions" : [ "ClientMutationMethods", "EnumSetterOverload", "ClientConstructors" ],
    "emitLegacyEnumSetterFor" : null,
    "operationModifiers" : null,
    "operationsWithResponseStreamContentLengthValidation" : null,
    "presignersFqcn" : null,
    "renameShapes" : null,
    "requestMetrics" : null,
    "requiredParamValidationEnabled" : false,
    "s3ArnableFields" : null,
    "sdkModeledExceptionBaseClassName" : null,
    "sendEmptyAutoConstructedListAsEmptyList" : null,
    "sendExplicitlyEmptyListsForQuery" : false,
    "serviceClientHoldInputStream" : false,
    "shapeModifiers" : null,
    "shapeSubstitutions" : null,
    "simpleMethods" : null,
    "skipClientMethodForOperations" : [ ],
    "skipInterfaceAdditions" : false,
    "skipSmokeTests" : true,
    "transformDirectory" : "transform",
    "useAutoConstructList" : false,
    "useAutoConstructMap" : false,
    "useUidAsFilePrefix" : true
  },
  "metadata" : {
    "apiVersion" : "2020-03-01",
    "asyncClient" : "AmazonHoneycodeAsyncClient",
    "asyncClientBuilderClassName" : "AmazonHoneycodeAsyncClientBuilder",
    "asyncInterface" : "AmazonHoneycodeAsync",
    "cborProtocol" : false,
    "checksumFormat" : null,
    "contentType" : "",
    "cucumberModuleInjectorClassName" : "AmazonHoneycodeModuleInjector",
    "defaultEndpoint" : "honeycode.us-east-1.amazonaws.com",
    "defaultEndpointWithoutHttpProtocol" : "honeycode.us-east-1.amazonaws.com",
    "defaultRegion" : null,
    "documentation" : "<p> Amazon Honeycode is a fully managed service that allows you to quickly build mobile and web apps for teamsâ€”without programming. Build Honeycode apps for managing almost anything, like projects, customers, operations, approvals, resources, and even your team. </p>",
    "endpointPrefix" : "honeycode",
    "hasApiWithStreamInput" : false,
    "ionProtocol" : false,
    "jsonProtocol" : true,
    "jsonVersion" : "1.1",
    "packageName" : "com.amazonaws.services.honeycode",
    "packagePath" : "com/amazonaws/services/honeycode",
    "protocol" : "rest-json",
    "protocolDefaultExceptionUmarshallerImpl" : null,
    "protocolFactory" : "com.amazonaws.protocol.json.SdkJsonProtocolFactory",
    "requestBaseFqcn" : "com.amazonaws.AmazonWebServiceRequest",
    "requiresApiKey" : false,
    "requiresIamSigners" : false,
    "serviceAbbreviation" : "Honeycode",
    "serviceFullName" : "Amazon Honeycode",
    "serviceId" : "Honeycode",
    "serviceName" : "Honeycode",
    "signingName" : "honeycode",
    "smokeTestsPackageName" : "com.amazonaws.services.honeycode.smoketests",
    "syncClient" : "AmazonHoneycodeClient",
    "syncClientBuilderClassName" : "AmazonHoneycodeClientBuilder",
    "syncInterface" : "AmazonHoneycode",
    "uid" : "honeycode-2020-03-01",
    "unmarshallerClassSuffix" : "JsonUnmarshaller",
    "unmarshallerContextClassName" : "JsonUnmarshallerContext",
    "xmlProtocol" : false
  },
  "operations" : {
    "BatchCreateTableRows" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchCreateTableRowsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchCreateTableRowsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchCreateTableRowsRequest, BatchCreateTableRowsResult>",
      "asyncReturnType" : "BatchCreateTableRowsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The BatchCreateTableRows API allows you to create one or more rows at the end of a table in a workbook. The API allows you to specify the values to set in some or all of the columns in the new rows. </p> <p> If a column is not explicitly set in a specific row, then the column level formula specified in the table will be applied to the new row. If there is no column level formula but the last row of the table has a formula, then that formula will be copied down to the new row. If there is no column level formula and no formula in the last row of the table, then that column will be left blank for the new rows. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceQuotaExceededException",
        "documentation" : "<p> The request caused service quota to be breached. </p>",
        "httpStatusCode" : 402
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchCreateTableRowsRequest",
        "variableName" : "batchCreateTableRowsRequest",
        "variableType" : "BatchCreateTableRowsRequest",
        "documentation" : "",
        "simpleType" : "BatchCreateTableRowsRequest",
        "variableSetterType" : "BatchCreateTableRowsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchCreateTableRows",
      "operationName" : "BatchCreateTableRows",
      "returnType" : {
        "returnType" : "BatchCreateTableRowsResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchCreateTableRowsResult"
    },
    "BatchDeleteTableRows" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchDeleteTableRowsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchDeleteTableRowsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchDeleteTableRowsRequest, BatchDeleteTableRowsResult>",
      "asyncReturnType" : "BatchDeleteTableRowsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The BatchDeleteTableRows API allows you to delete one or more rows from a table in a workbook. You need to specify the ids of the rows that you want to delete from the table. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchDeleteTableRowsRequest",
        "variableName" : "batchDeleteTableRowsRequest",
        "variableType" : "BatchDeleteTableRowsRequest",
        "documentation" : "",
        "simpleType" : "BatchDeleteTableRowsRequest",
        "variableSetterType" : "BatchDeleteTableRowsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchDeleteTableRows",
      "operationName" : "BatchDeleteTableRows",
      "returnType" : {
        "returnType" : "BatchDeleteTableRowsResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchDeleteTableRowsResult"
    },
    "BatchUpdateTableRows" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchUpdateTableRowsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchUpdateTableRowsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchUpdateTableRowsRequest, BatchUpdateTableRowsResult>",
      "asyncReturnType" : "BatchUpdateTableRowsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The BatchUpdateTableRows API allows you to update one or more rows in a table in a workbook. </p> <p> You can specify the values to set in some or all of the columns in the table for the specified rows. If a column is not explicitly specified in a particular row, then that column will not be updated for that row. To clear out the data in a specific cell, you need to set the value as an empty string (\"\"). </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchUpdateTableRowsRequest",
        "variableName" : "batchUpdateTableRowsRequest",
        "variableType" : "BatchUpdateTableRowsRequest",
        "documentation" : "",
        "simpleType" : "BatchUpdateTableRowsRequest",
        "variableSetterType" : "BatchUpdateTableRowsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchUpdateTableRows",
      "operationName" : "BatchUpdateTableRows",
      "returnType" : {
        "returnType" : "BatchUpdateTableRowsResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchUpdateTableRowsResult"
    },
    "BatchUpsertTableRows" : {
      "asyncCallableType" : "java.util.concurrent.Callable<BatchUpsertTableRowsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<BatchUpsertTableRowsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<BatchUpsertTableRowsRequest, BatchUpsertTableRowsResult>",
      "asyncReturnType" : "BatchUpsertTableRowsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The BatchUpsertTableRows API allows you to upsert one or more rows in a table. The upsert operation takes a filter expression as input and evaluates it to find matching rows on the destination table. If matching rows are found, it will update the cells in the matching rows to new values specified in the request. If no matching rows are found, a new row is added at the end of the table and the cells in that row are set to the new values specified in the request. </p> <p> You can specify the values to set in some or all of the columns in the table for the matching or newly appended rows. If a column is not explicitly specified for a particular row, then that column will not be updated for that row. To clear out the data in a specific cell, you need to set the value as an empty string (\"\"). </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceQuotaExceededException",
        "documentation" : "<p> The request caused service quota to be breached. </p>",
        "httpStatusCode" : 402
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchUpsertTableRowsRequest",
        "variableName" : "batchUpsertTableRowsRequest",
        "variableType" : "BatchUpsertTableRowsRequest",
        "documentation" : "",
        "simpleType" : "BatchUpsertTableRowsRequest",
        "variableSetterType" : "BatchUpsertTableRowsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "batchUpsertTableRows",
      "operationName" : "BatchUpsertTableRows",
      "returnType" : {
        "returnType" : "BatchUpsertTableRowsResult",
        "documentation" : null
      },
      "syncReturnType" : "BatchUpsertTableRowsResult"
    },
    "DescribeTableDataImportJob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<DescribeTableDataImportJobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<DescribeTableDataImportJobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<DescribeTableDataImportJobRequest, DescribeTableDataImportJobResult>",
      "asyncReturnType" : "DescribeTableDataImportJobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The DescribeTableDataImportJob API allows you to retrieve the status and details of a table data import job. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeTableDataImportJobRequest",
        "variableName" : "describeTableDataImportJobRequest",
        "variableType" : "DescribeTableDataImportJobRequest",
        "documentation" : "",
        "simpleType" : "DescribeTableDataImportJobRequest",
        "variableSetterType" : "DescribeTableDataImportJobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "describeTableDataImportJob",
      "operationName" : "DescribeTableDataImportJob",
      "returnType" : {
        "returnType" : "DescribeTableDataImportJobResult",
        "documentation" : null
      },
      "syncReturnType" : "DescribeTableDataImportJobResult"
    },
    "GetScreenData" : {
      "asyncCallableType" : "java.util.concurrent.Callable<GetScreenDataResult>",
      "asyncFutureType" : "java.util.concurrent.Future<GetScreenDataResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<GetScreenDataRequest, GetScreenDataResult>",
      "asyncReturnType" : "GetScreenDataResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The GetScreenData API allows retrieval of data from a screen in a Honeycode app. The API allows setting local variables in the screen to filter, sort or otherwise affect what will be displayed on the screen. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetScreenDataRequest",
        "variableName" : "getScreenDataRequest",
        "variableType" : "GetScreenDataRequest",
        "documentation" : "",
        "simpleType" : "GetScreenDataRequest",
        "variableSetterType" : "GetScreenDataRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "getScreenData",
      "operationName" : "GetScreenData",
      "returnType" : {
        "returnType" : "GetScreenDataResult",
        "documentation" : null
      },
      "syncReturnType" : "GetScreenDataResult"
    },
    "InvokeScreenAutomation" : {
      "asyncCallableType" : "java.util.concurrent.Callable<InvokeScreenAutomationResult>",
      "asyncFutureType" : "java.util.concurrent.Future<InvokeScreenAutomationResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<InvokeScreenAutomationRequest, InvokeScreenAutomationResult>",
      "asyncReturnType" : "InvokeScreenAutomationResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The InvokeScreenAutomation API allows invoking an action defined in a screen in a Honeycode app. The API allows setting local variables, which can then be used in the automation being invoked. This allows automating the Honeycode app interactions to write, update or delete data in the workbook. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "AutomationExecutionException",
        "documentation" : "<p>The automation execution did not end successfully.</p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "AutomationExecutionTimeoutException",
        "documentation" : "<p>The automation execution timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvokeScreenAutomationRequest",
        "variableName" : "invokeScreenAutomationRequest",
        "variableType" : "InvokeScreenAutomationRequest",
        "documentation" : "",
        "simpleType" : "InvokeScreenAutomationRequest",
        "variableSetterType" : "InvokeScreenAutomationRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "invokeScreenAutomation",
      "operationName" : "InvokeScreenAutomation",
      "returnType" : {
        "returnType" : "InvokeScreenAutomationResult",
        "documentation" : null
      },
      "syncReturnType" : "InvokeScreenAutomationResult"
    },
    "ListTableColumns" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTableColumnsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTableColumnsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTableColumnsRequest, ListTableColumnsResult>",
      "asyncReturnType" : "ListTableColumnsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The ListTableColumns API allows you to retrieve a list of all the columns in a table in a workbook. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTableColumnsRequest",
        "variableName" : "listTableColumnsRequest",
        "variableType" : "ListTableColumnsRequest",
        "documentation" : "",
        "simpleType" : "ListTableColumnsRequest",
        "variableSetterType" : "ListTableColumnsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTableColumns",
      "operationName" : "ListTableColumns",
      "returnType" : {
        "returnType" : "ListTableColumnsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTableColumnsResult"
    },
    "ListTableRows" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTableRowsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTableRowsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTableRowsRequest, ListTableRowsResult>",
      "asyncReturnType" : "ListTableRowsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The ListTableRows API allows you to retrieve a list of all the rows in a table in a workbook. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTableRowsRequest",
        "variableName" : "listTableRowsRequest",
        "variableType" : "ListTableRowsRequest",
        "documentation" : "",
        "simpleType" : "ListTableRowsRequest",
        "variableSetterType" : "ListTableRowsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTableRows",
      "operationName" : "ListTableRows",
      "returnType" : {
        "returnType" : "ListTableRowsResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTableRowsResult"
    },
    "ListTables" : {
      "asyncCallableType" : "java.util.concurrent.Callable<ListTablesResult>",
      "asyncFutureType" : "java.util.concurrent.Future<ListTablesResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<ListTablesRequest, ListTablesResult>",
      "asyncReturnType" : "ListTablesResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The ListTables API allows you to retrieve a list of all the tables in a workbook. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTablesRequest",
        "variableName" : "listTablesRequest",
        "variableType" : "ListTablesRequest",
        "documentation" : "",
        "simpleType" : "ListTablesRequest",
        "variableSetterType" : "ListTablesRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "listTables",
      "operationName" : "ListTables",
      "returnType" : {
        "returnType" : "ListTablesResult",
        "documentation" : null
      },
      "syncReturnType" : "ListTablesResult"
    },
    "QueryTableRows" : {
      "asyncCallableType" : "java.util.concurrent.Callable<QueryTableRowsResult>",
      "asyncFutureType" : "java.util.concurrent.Future<QueryTableRowsResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<QueryTableRowsRequest, QueryTableRowsResult>",
      "asyncReturnType" : "QueryTableRowsResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The QueryTableRows API allows you to use a filter formula to query for specific rows in a table. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "RequestTimeoutException",
        "documentation" : "<p>The request timed out.</p>",
        "httpStatusCode" : 504
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "QueryTableRowsRequest",
        "variableName" : "queryTableRowsRequest",
        "variableType" : "QueryTableRowsRequest",
        "documentation" : "",
        "simpleType" : "QueryTableRowsRequest",
        "variableSetterType" : "QueryTableRowsRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "queryTableRows",
      "operationName" : "QueryTableRows",
      "returnType" : {
        "returnType" : "QueryTableRowsResult",
        "documentation" : null
      },
      "syncReturnType" : "QueryTableRowsResult"
    },
    "StartTableDataImportJob" : {
      "asyncCallableType" : "java.util.concurrent.Callable<StartTableDataImportJobResult>",
      "asyncFutureType" : "java.util.concurrent.Future<StartTableDataImportJobResult>",
      "asyncHandlerType" : "com.amazonaws.handlers.AsyncHandler<StartTableDataImportJobRequest, StartTableDataImportJobResult>",
      "asyncReturnType" : "StartTableDataImportJobResult",
      "authenticated" : true,
      "deprecated" : false,
      "documentation" : "<p> The StartTableDataImportJob API allows you to start an import job on a table. This API will only return the id of the job that was started. To find out the status of the import request, you need to call the DescribeTableDataImportJob API. </p>",
      "endpointCacheRequired" : false,
      "endpointDiscovery" : null,
      "endpointOperation" : false,
      "endpointTrait" : null,
      "exceptions" : [ {
        "exceptionName" : "AccessDeniedException",
        "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
        "httpStatusCode" : 403
      }, {
        "exceptionName" : "InternalServerException",
        "documentation" : "<p>There were unexpected errors from the server.</p>",
        "httpStatusCode" : 500
      }, {
        "exceptionName" : "ResourceNotFoundException",
        "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
        "httpStatusCode" : 404
      }, {
        "exceptionName" : "ServiceUnavailableException",
        "documentation" : "<p>Remote service is unreachable.</p>",
        "httpStatusCode" : 503
      }, {
        "exceptionName" : "ThrottlingException",
        "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
        "httpStatusCode" : 429
      }, {
        "exceptionName" : "ValidationException",
        "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
        "httpStatusCode" : 400
      } ],
      "hasBlobMemberAsPayload" : false,
      "hostPrefixProcessor" : null,
      "input" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartTableDataImportJobRequest",
        "variableName" : "startTableDataImportJobRequest",
        "variableType" : "StartTableDataImportJobRequest",
        "documentation" : "",
        "simpleType" : "StartTableDataImportJobRequest",
        "variableSetterType" : "StartTableDataImportJobRequest"
      },
      "inputStreamPropertyName" : null,
      "methodName" : "startTableDataImportJob",
      "operationName" : "StartTableDataImportJob",
      "returnType" : {
        "returnType" : "StartTableDataImportJobResult",
        "documentation" : null
      },
      "syncReturnType" : "StartTableDataImportJobResult"
    }
  },
  "shapes" : {
    "AccessDeniedException" : {
      "c2jName" : "AccessDeniedException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> You do not have sufficient access to perform this action. Check that the workbook is owned by you and your IAM policy allows access to the resource in the request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "AccessDeniedException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.AccessDeniedException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AccessDeniedException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AccessDeniedException",
        "variableName" : "accessDeniedException",
        "variableType" : "AccessDeniedException",
        "documentation" : null,
        "simpleType" : "AccessDeniedException",
        "variableSetterType" : "AccessDeniedException"
      },
      "wrapper" : false
    },
    "AutomationExecutionException" : {
      "c2jName" : "AutomationExecutionException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The automation execution did not end successfully.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "AutomationExecutionException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.AutomationExecutionException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AutomationExecutionException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AutomationExecutionException",
        "variableName" : "automationExecutionException",
        "variableType" : "AutomationExecutionException",
        "documentation" : null,
        "simpleType" : "AutomationExecutionException",
        "variableSetterType" : "AutomationExecutionException"
      },
      "wrapper" : false
    },
    "AutomationExecutionTimeoutException" : {
      "c2jName" : "AutomationExecutionTimeoutException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The automation execution timed out.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "AutomationExecutionTimeoutException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.AutomationExecutionTimeoutException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "AutomationExecutionTimeoutException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "AutomationExecutionTimeoutException",
        "variableName" : "automationExecutionTimeoutException",
        "variableType" : "AutomationExecutionTimeoutException",
        "documentation" : null,
        "simpleType" : "AutomationExecutionTimeoutException",
        "variableSetterType" : "AutomationExecutionTimeoutException"
      },
      "wrapper" : false
    },
    "BatchCreateTableRowsRequest" : {
      "c2jName" : "BatchCreateTableRowsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.BatchCreateTableRowsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchCreateTableRows",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/rows/batchcreate",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowsToCreate",
        "c2jShape" : "CreateRowDataList",
        "deprecated" : false,
        "documentation" : "<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToCreate The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowsToCreate",
        "getterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@return The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
        "getterMethodName" : "getRowsToCreate",
        "getterModel" : {
          "returnType" : "java.util.List<CreateRowData>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowsToCreate",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowsToCreate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "CreateRowData",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "CreateRowData",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CreateRowData",
              "variableName" : "member",
              "variableType" : "CreateRowData",
              "documentation" : "",
              "simpleType" : "CreateRowData",
              "variableSetterType" : "CreateRowData"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CreateRowData",
              "variableName" : "member",
              "variableType" : "CreateRowData",
              "documentation" : "",
              "simpleType" : "CreateRowData",
              "variableSetterType" : "CreateRowData"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "CreateRowData",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "CreateRowData",
          "templateImplType" : "java.util.ArrayList<CreateRowData>",
          "templateType" : "java.util.List<CreateRowData>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowsToCreate",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToCreate The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
        "setterMethodName" : "setRowsToCreate",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<CreateRowData>",
          "variableName" : "rowsToCreate",
          "variableType" : "java.util.List<CreateRowData>",
          "documentation" : "",
          "simpleType" : "List<CreateRowData>",
          "variableSetterType" : "java.util.Collection<CreateRowData>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowsToCreate(java.util.Collection)} or {@link #withRowsToCreate(java.util.Collection)} if you want to override the existing values.</p>\n@param rowsToCreate The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<CreateRowData>",
          "variableName" : "rowsToCreate",
          "variableType" : "java.util.List<CreateRowData>",
          "documentation" : "<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
          "simpleType" : "List<CreateRowData>",
          "variableSetterType" : "java.util.Collection<CreateRowData>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p> The request token for performing the batch create operation. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the operation again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowsToCreate" : {
          "c2jName" : "rowsToCreate",
          "c2jShape" : "CreateRowDataList",
          "deprecated" : false,
          "documentation" : "<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToCreate The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowsToCreate",
          "getterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@return The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
          "getterMethodName" : "getRowsToCreate",
          "getterModel" : {
            "returnType" : "java.util.List<CreateRowData>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowsToCreate",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowsToCreate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "CreateRowData",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "CreateRowData",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CreateRowData",
                "variableName" : "member",
                "variableType" : "CreateRowData",
                "documentation" : "",
                "simpleType" : "CreateRowData",
                "variableSetterType" : "CreateRowData"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CreateRowData",
                "variableName" : "member",
                "variableType" : "CreateRowData",
                "documentation" : "",
                "simpleType" : "CreateRowData",
                "variableSetterType" : "CreateRowData"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "CreateRowData",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "CreateRowData",
            "templateImplType" : "java.util.ArrayList<CreateRowData>",
            "templateType" : "java.util.List<CreateRowData>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowsToCreate",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToCreate The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
          "setterMethodName" : "setRowsToCreate",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<CreateRowData>",
            "variableName" : "rowsToCreate",
            "variableType" : "java.util.List<CreateRowData>",
            "documentation" : "",
            "simpleType" : "List<CreateRowData>",
            "variableSetterType" : "java.util.Collection<CreateRowData>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowsToCreate(java.util.Collection)} or {@link #withRowsToCreate(java.util.Collection)} if you want to override the existing values.</p>\n@param rowsToCreate The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<CreateRowData>",
            "variableName" : "rowsToCreate",
            "variableType" : "java.util.List<CreateRowData>",
            "documentation" : "<p> The list of rows to create at the end of the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request and the cells to create for that row. You need to specify at least one item in this list. </p> <p> Note that if one of the column ids in any of the rows in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
            "simpleType" : "List<CreateRowData>",
            "variableSetterType" : "java.util.Collection<CreateRowData>"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table where the new rows are being added.</p> <p> If a table with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook where the new rows are being added.</p> <p> If a workbook with the specified ID could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId", "rowsToCreate" ],
      "shapeName" : "BatchCreateTableRowsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchCreateTableRowsRequest",
        "variableName" : "batchCreateTableRowsRequest",
        "variableType" : "BatchCreateTableRowsRequest",
        "documentation" : null,
        "simpleType" : "BatchCreateTableRowsRequest",
        "variableSetterType" : "BatchCreateTableRowsRequest"
      },
      "wrapper" : false
    },
    "BatchCreateTableRowsResult" : {
      "c2jName" : "BatchCreateTableRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.BatchCreateTableRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@return The updated workbook cursor after adding the new rows at the end of the table.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "createdRows",
        "c2jShape" : "CreatedRowsMap",
        "deprecated" : false,
        "documentation" : "<p>The map of batch item id to the row id that was created for that item.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@param createdRows The map of batch item id to the row id that was created for that item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCreatedRows",
        "getterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@return The map of batch item id to the row id that was created for that item.*/",
        "getterMethodName" : "getCreatedRows",
        "getterModel" : {
          "returnType" : "java.util.Map<String,String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "createdRows",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "createdRows",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "RowId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "value",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "String",
          "entryType" : "Map.Entry<String, String>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,String>",
          "templateType" : "java.util.Map<String,String>",
          "valueList" : false,
          "valueSimple" : true
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "CreatedRows",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@param createdRows The map of batch item id to the row id that was created for that item.*/",
        "setterMethodName" : "setCreatedRows",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "createdRows",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@param createdRows The map of batch item id to the row id that was created for that item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,String>",
          "variableName" : "createdRows",
          "variableType" : "java.util.Map<String,String>",
          "documentation" : "<p>The map of batch item id to the row id that was created for that item.</p>",
          "simpleType" : "Map<String,String>",
          "variableSetterType" : "java.util.Map<String,String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failedBatchItems",
        "c2jShape" : "FailedBatchItems",
        "deprecated" : false,
        "documentation" : "<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n@param failedBatchItems The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailedBatchItems",
        "getterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n@return The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.*/",
        "getterMethodName" : "getFailedBatchItems",
        "getterModel" : {
          "returnType" : "java.util.List<FailedBatchItem>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failedBatchItems",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failedBatchItems",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FailedBatchItem",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FailedBatchItem",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FailedBatchItem",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FailedBatchItem",
          "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
          "templateType" : "java.util.List<FailedBatchItem>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FailedBatchItems",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n@param failedBatchItems The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.*/",
        "setterMethodName" : "setFailedBatchItems",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CreatedRows" : {
          "c2jName" : "createdRows",
          "c2jShape" : "CreatedRowsMap",
          "deprecated" : false,
          "documentation" : "<p>The map of batch item id to the row id that was created for that item.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@param createdRows The map of batch item id to the row id that was created for that item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCreatedRows",
          "getterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@return The map of batch item id to the row id that was created for that item.*/",
          "getterMethodName" : "getCreatedRows",
          "getterModel" : {
            "returnType" : "java.util.Map<String,String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "createdRows",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "createdRows",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "RowId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "value",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "String",
            "entryType" : "Map.Entry<String, String>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,String>",
            "templateType" : "java.util.Map<String,String>",
            "valueList" : false,
            "valueSimple" : true
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "CreatedRows",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@param createdRows The map of batch item id to the row id that was created for that item.*/",
          "setterMethodName" : "setCreatedRows",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "createdRows",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The map of batch item id to the row id that was created for that item.</p>\n@param createdRows The map of batch item id to the row id that was created for that item.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,String>",
            "variableName" : "createdRows",
            "variableType" : "java.util.Map<String,String>",
            "documentation" : "<p>The map of batch item id to the row id that was created for that item.</p>",
            "simpleType" : "Map<String,String>",
            "variableSetterType" : "java.util.Map<String,String>"
          },
          "xmlNameSpaceUri" : null
        },
        "FailedBatchItems" : {
          "c2jName" : "failedBatchItems",
          "c2jShape" : "FailedBatchItems",
          "deprecated" : false,
          "documentation" : "<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n@param failedBatchItems The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailedBatchItems",
          "getterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n@return The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.*/",
          "getterMethodName" : "getFailedBatchItems",
          "getterModel" : {
            "returnType" : "java.util.List<FailedBatchItem>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failedBatchItems",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failedBatchItems",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FailedBatchItem",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FailedBatchItem",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FailedBatchItem",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FailedBatchItem",
            "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
            "templateType" : "java.util.List<FailedBatchItem>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FailedBatchItems",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n@param failedBatchItems The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.*/",
          "setterMethodName" : "setFailedBatchItems",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "<p> The list of batch items in the request that could not be added to the table. Each element in this list contains one item from the request that could not be added to the table along with the reason why that item could not be added. </p>",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@return The updated workbook cursor after adding the new rows at the end of the table.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookCursor", "createdRows" ],
      "shapeName" : "BatchCreateTableRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchCreateTableRowsResult",
        "variableName" : "batchCreateTableRowsResult",
        "variableType" : "BatchCreateTableRowsResult",
        "documentation" : null,
        "simpleType" : "BatchCreateTableRowsResult",
        "variableSetterType" : "BatchCreateTableRowsResult"
      },
      "wrapper" : false
    },
    "BatchDeleteTableRowsRequest" : {
      "c2jName" : "BatchDeleteTableRowsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.BatchDeleteTableRowsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchDeleteTableRows",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/rows/batchdelete",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowIds",
        "c2jShape" : "RowIdList",
        "deprecated" : false,
        "documentation" : "<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n@param rowIds The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowIds",
        "getterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n@return The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.*/",
        "getterMethodName" : "getRowIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RowId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n@param rowIds The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.*/",
        "setterMethodName" : "setRowIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIds(java.util.Collection)} or {@link #withRowIds(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIds The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p> The request token for performing the delete action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowIds" : {
          "c2jName" : "rowIds",
          "c2jShape" : "RowIdList",
          "deprecated" : false,
          "documentation" : "<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n@param rowIds The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowIds",
          "getterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n@return The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.*/",
          "getterMethodName" : "getRowIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RowId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n@param rowIds The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.*/",
          "setterMethodName" : "setRowIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIds(java.util.Collection)} or {@link #withRowIds(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIds The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p> The list of row ids to delete from the table. You need to specify at least one row id in this list. </p> <p> Note that if one of the row ids provided in the request does not exist in the table, then the request fails and no rows are deleted from the table. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table where the rows are being deleted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook where the rows are being deleted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId", "rowIds" ],
      "shapeName" : "BatchDeleteTableRowsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchDeleteTableRowsRequest",
        "variableName" : "batchDeleteTableRowsRequest",
        "variableType" : "BatchDeleteTableRowsRequest",
        "documentation" : null,
        "simpleType" : "BatchDeleteTableRowsRequest",
        "variableSetterType" : "BatchDeleteTableRowsRequest"
      },
      "wrapper" : false
    },
    "BatchDeleteTableRowsResult" : {
      "c2jName" : "BatchDeleteTableRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.BatchDeleteTableRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p>The updated workbook cursor after deleting the rows from the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@param workbookCursor The updated workbook cursor after deleting the rows from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@return The updated workbook cursor after deleting the rows from the table.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@param workbookCursor The updated workbook cursor after deleting the rows from the table.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@param workbookCursor The updated workbook cursor after deleting the rows from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p>The updated workbook cursor after deleting the rows from the table.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failedBatchItems",
        "c2jShape" : "FailedBatchItems",
        "deprecated" : false,
        "documentation" : "<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n@param failedBatchItems The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailedBatchItems",
        "getterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n@return The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.*/",
        "getterMethodName" : "getFailedBatchItems",
        "getterModel" : {
          "returnType" : "java.util.List<FailedBatchItem>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failedBatchItems",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failedBatchItems",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FailedBatchItem",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FailedBatchItem",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FailedBatchItem",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FailedBatchItem",
          "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
          "templateType" : "java.util.List<FailedBatchItem>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FailedBatchItems",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n@param failedBatchItems The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.*/",
        "setterMethodName" : "setFailedBatchItems",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailedBatchItems" : {
          "c2jName" : "failedBatchItems",
          "c2jShape" : "FailedBatchItems",
          "deprecated" : false,
          "documentation" : "<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n@param failedBatchItems The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailedBatchItems",
          "getterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n@return The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.*/",
          "getterMethodName" : "getFailedBatchItems",
          "getterModel" : {
            "returnType" : "java.util.List<FailedBatchItem>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failedBatchItems",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failedBatchItems",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FailedBatchItem",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FailedBatchItem",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FailedBatchItem",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FailedBatchItem",
            "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
            "templateType" : "java.util.List<FailedBatchItem>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FailedBatchItems",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n@param failedBatchItems The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.*/",
          "setterMethodName" : "setFailedBatchItems",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "<p> The list of row ids in the request that could not be deleted from the table. Each element in this list contains one row id from the request that could not be deleted along with the reason why that item could not be deleted. </p>",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p>The updated workbook cursor after deleting the rows from the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@param workbookCursor The updated workbook cursor after deleting the rows from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@return The updated workbook cursor after deleting the rows from the table.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@param workbookCursor The updated workbook cursor after deleting the rows from the table.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated workbook cursor after deleting the rows from the table.</p>\n@param workbookCursor The updated workbook cursor after deleting the rows from the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p>The updated workbook cursor after deleting the rows from the table.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookCursor" ],
      "shapeName" : "BatchDeleteTableRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchDeleteTableRowsResult",
        "variableName" : "batchDeleteTableRowsResult",
        "variableType" : "BatchDeleteTableRowsResult",
        "documentation" : null,
        "simpleType" : "BatchDeleteTableRowsResult",
        "variableSetterType" : "BatchDeleteTableRowsResult"
      },
      "wrapper" : false
    },
    "BatchUpdateTableRowsRequest" : {
      "c2jName" : "BatchUpdateTableRowsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.BatchUpdateTableRowsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchUpdateTableRows",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/rows/batchupdate",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowsToUpdate",
        "c2jShape" : "UpdateRowDataList",
        "deprecated" : false,
        "documentation" : "<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpdate The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowsToUpdate",
        "getterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@return The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
        "getterMethodName" : "getRowsToUpdate",
        "getterModel" : {
          "returnType" : "java.util.List<UpdateRowData>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowsToUpdate",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowsToUpdate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "UpdateRowData",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "UpdateRowData",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "UpdateRowData",
              "variableName" : "member",
              "variableType" : "UpdateRowData",
              "documentation" : "",
              "simpleType" : "UpdateRowData",
              "variableSetterType" : "UpdateRowData"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "UpdateRowData",
              "variableName" : "member",
              "variableType" : "UpdateRowData",
              "documentation" : "",
              "simpleType" : "UpdateRowData",
              "variableSetterType" : "UpdateRowData"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "UpdateRowData",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "UpdateRowData",
          "templateImplType" : "java.util.ArrayList<UpdateRowData>",
          "templateType" : "java.util.List<UpdateRowData>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowsToUpdate",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpdate The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
        "setterMethodName" : "setRowsToUpdate",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<UpdateRowData>",
          "variableName" : "rowsToUpdate",
          "variableType" : "java.util.List<UpdateRowData>",
          "documentation" : "",
          "simpleType" : "List<UpdateRowData>",
          "variableSetterType" : "java.util.Collection<UpdateRowData>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowsToUpdate(java.util.Collection)} or {@link #withRowsToUpdate(java.util.Collection)} if you want to override the existing values.</p>\n@param rowsToUpdate The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<UpdateRowData>",
          "variableName" : "rowsToUpdate",
          "variableType" : "java.util.List<UpdateRowData>",
          "documentation" : "<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
          "simpleType" : "List<UpdateRowData>",
          "variableSetterType" : "java.util.Collection<UpdateRowData>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowsToUpdate" : {
          "c2jName" : "rowsToUpdate",
          "c2jShape" : "UpdateRowDataList",
          "deprecated" : false,
          "documentation" : "<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpdate The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowsToUpdate",
          "getterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@return The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
          "getterMethodName" : "getRowsToUpdate",
          "getterModel" : {
            "returnType" : "java.util.List<UpdateRowData>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowsToUpdate",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowsToUpdate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "UpdateRowData",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "UpdateRowData",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "UpdateRowData",
                "variableName" : "member",
                "variableType" : "UpdateRowData",
                "documentation" : "",
                "simpleType" : "UpdateRowData",
                "variableSetterType" : "UpdateRowData"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "UpdateRowData",
                "variableName" : "member",
                "variableType" : "UpdateRowData",
                "documentation" : "",
                "simpleType" : "UpdateRowData",
                "variableSetterType" : "UpdateRowData"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "UpdateRowData",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "UpdateRowData",
            "templateImplType" : "java.util.ArrayList<UpdateRowData>",
            "templateType" : "java.util.List<UpdateRowData>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowsToUpdate",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpdate The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.*/",
          "setterMethodName" : "setRowsToUpdate",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<UpdateRowData>",
            "variableName" : "rowsToUpdate",
            "variableType" : "java.util.List<UpdateRowData>",
            "documentation" : "",
            "simpleType" : "List<UpdateRowData>",
            "variableSetterType" : "java.util.Collection<UpdateRowData>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowsToUpdate(java.util.Collection)} or {@link #withRowsToUpdate(java.util.Collection)} if you want to override the existing values.</p>\n@param rowsToUpdate The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<UpdateRowData>",
            "variableName" : "rowsToUpdate",
            "variableType" : "java.util.List<UpdateRowData>",
            "documentation" : "<p> The list of rows to update in the table. Each item in this list needs to contain the row id to update along with the map of column id to cell values for each column in that row that needs to be updated. You need to specify at least one row in this list, and for each row, you need to specify at least one column to update. </p> <p> Note that if one of the row or column ids in the request does not exist in the table, then the request fails and no updates are made to the table. </p>",
            "simpleType" : "List<UpdateRowData>",
            "variableSetterType" : "java.util.Collection<UpdateRowData>"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table where the rows are being updated.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook where the rows are being updated.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId", "rowsToUpdate" ],
      "shapeName" : "BatchUpdateTableRowsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchUpdateTableRowsRequest",
        "variableName" : "batchUpdateTableRowsRequest",
        "variableType" : "BatchUpdateTableRowsRequest",
        "documentation" : null,
        "simpleType" : "BatchUpdateTableRowsRequest",
        "variableSetterType" : "BatchUpdateTableRowsRequest"
      },
      "wrapper" : false
    },
    "BatchUpdateTableRowsResult" : {
      "c2jName" : "BatchUpdateTableRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.BatchUpdateTableRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@return The updated workbook cursor after adding the new rows at the end of the table.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failedBatchItems",
        "c2jShape" : "FailedBatchItems",
        "deprecated" : false,
        "documentation" : "<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailedBatchItems",
        "getterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n@return The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.*/",
        "getterMethodName" : "getFailedBatchItems",
        "getterModel" : {
          "returnType" : "java.util.List<FailedBatchItem>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failedBatchItems",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failedBatchItems",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FailedBatchItem",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FailedBatchItem",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FailedBatchItem",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FailedBatchItem",
          "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
          "templateType" : "java.util.List<FailedBatchItem>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FailedBatchItems",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.*/",
        "setterMethodName" : "setFailedBatchItems",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailedBatchItems" : {
          "c2jName" : "failedBatchItems",
          "c2jShape" : "FailedBatchItems",
          "deprecated" : false,
          "documentation" : "<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailedBatchItems",
          "getterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n@return The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.*/",
          "getterMethodName" : "getFailedBatchItems",
          "getterModel" : {
            "returnType" : "java.util.List<FailedBatchItem>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failedBatchItems",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failedBatchItems",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FailedBatchItem",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FailedBatchItem",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FailedBatchItem",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FailedBatchItem",
            "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
            "templateType" : "java.util.List<FailedBatchItem>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FailedBatchItems",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.*/",
          "setterMethodName" : "setFailedBatchItems",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "<p> The list of batch items in the request that could not be updated in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated. </p>",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@return The updated workbook cursor after adding the new rows at the end of the table.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated workbook cursor after adding the new rows at the end of the table.</p>\n@param workbookCursor The updated workbook cursor after adding the new rows at the end of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p>The updated workbook cursor after adding the new rows at the end of the table.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookCursor" ],
      "shapeName" : "BatchUpdateTableRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchUpdateTableRowsResult",
        "variableName" : "batchUpdateTableRowsResult",
        "variableType" : "BatchUpdateTableRowsResult",
        "documentation" : null,
        "simpleType" : "BatchUpdateTableRowsResult",
        "variableSetterType" : "BatchUpdateTableRowsResult"
      },
      "wrapper" : false
    },
    "BatchUpsertTableRowsRequest" : {
      "c2jName" : "BatchUpsertTableRowsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.BatchUpsertTableRowsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "BatchUpsertTableRows",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/rows/batchupsert",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowsToUpsert",
        "c2jShape" : "UpsertRowDataList",
        "deprecated" : false,
        "documentation" : "<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpsert The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowsToUpsert",
        "getterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n@return The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.*/",
        "getterMethodName" : "getRowsToUpsert",
        "getterModel" : {
          "returnType" : "java.util.List<UpsertRowData>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowsToUpsert",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowsToUpsert",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "UpsertRowData",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "UpsertRowData",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "UpsertRowData",
              "variableName" : "member",
              "variableType" : "UpsertRowData",
              "documentation" : "",
              "simpleType" : "UpsertRowData",
              "variableSetterType" : "UpsertRowData"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "UpsertRowData",
              "variableName" : "member",
              "variableType" : "UpsertRowData",
              "documentation" : "",
              "simpleType" : "UpsertRowData",
              "variableSetterType" : "UpsertRowData"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "UpsertRowData",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "UpsertRowData",
          "templateImplType" : "java.util.ArrayList<UpsertRowData>",
          "templateType" : "java.util.List<UpsertRowData>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowsToUpsert",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpsert The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.*/",
        "setterMethodName" : "setRowsToUpsert",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<UpsertRowData>",
          "variableName" : "rowsToUpsert",
          "variableType" : "java.util.List<UpsertRowData>",
          "documentation" : "",
          "simpleType" : "List<UpsertRowData>",
          "variableSetterType" : "java.util.Collection<UpsertRowData>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowsToUpsert(java.util.Collection)} or {@link #withRowsToUpsert(java.util.Collection)} if you want to override the existing values.</p>\n@param rowsToUpsert The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<UpsertRowData>",
          "variableName" : "rowsToUpsert",
          "variableType" : "java.util.List<UpsertRowData>",
          "documentation" : "<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>",
          "simpleType" : "List<UpsertRowData>",
          "variableSetterType" : "java.util.Collection<UpsertRowData>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowsToUpsert" : {
          "c2jName" : "rowsToUpsert",
          "c2jShape" : "UpsertRowDataList",
          "deprecated" : false,
          "documentation" : "<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpsert The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowsToUpsert",
          "getterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n@return The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.*/",
          "getterMethodName" : "getRowsToUpsert",
          "getterModel" : {
            "returnType" : "java.util.List<UpsertRowData>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowsToUpsert",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowsToUpsert",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "UpsertRowData",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "UpsertRowData",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "UpsertRowData",
                "variableName" : "member",
                "variableType" : "UpsertRowData",
                "documentation" : "",
                "simpleType" : "UpsertRowData",
                "variableSetterType" : "UpsertRowData"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "UpsertRowData",
                "variableName" : "member",
                "variableType" : "UpsertRowData",
                "documentation" : "",
                "simpleType" : "UpsertRowData",
                "variableSetterType" : "UpsertRowData"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "UpsertRowData",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "UpsertRowData",
            "templateImplType" : "java.util.ArrayList<UpsertRowData>",
            "templateType" : "java.util.List<UpsertRowData>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowsToUpsert",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n@param rowsToUpsert The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.*/",
          "setterMethodName" : "setRowsToUpsert",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<UpsertRowData>",
            "variableName" : "rowsToUpsert",
            "variableType" : "java.util.List<UpsertRowData>",
            "documentation" : "",
            "simpleType" : "List<UpsertRowData>",
            "variableSetterType" : "java.util.Collection<UpsertRowData>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowsToUpsert(java.util.Collection)} or {@link #withRowsToUpsert(java.util.Collection)} if you want to override the existing values.</p>\n@param rowsToUpsert The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<UpsertRowData>",
            "variableName" : "rowsToUpsert",
            "variableType" : "java.util.List<UpsertRowData>",
            "documentation" : "<p> The list of rows to upsert in the table. Each item in this list needs to have a batch item id to uniquely identify the element in the request, a filter expression to find the rows to update for that element and the cell values to set for each column in the upserted rows. You need to specify at least one item in this list. </p> <p> Note that if one of the filter formulas in the request fails to evaluate because of an error or one of the column ids in any of the rows does not exist in the table, then the request fails and no updates are made to the table. </p>",
            "simpleType" : "List<UpsertRowData>",
            "variableSetterType" : "java.util.Collection<UpsertRowData>"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table where the rows are being upserted.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook where the rows are being upserted.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId", "rowsToUpsert" ],
      "shapeName" : "BatchUpsertTableRowsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchUpsertTableRowsRequest",
        "variableName" : "batchUpsertTableRowsRequest",
        "variableType" : "BatchUpsertTableRowsRequest",
        "documentation" : null,
        "simpleType" : "BatchUpsertTableRowsRequest",
        "variableSetterType" : "BatchUpsertTableRowsRequest"
      },
      "wrapper" : false
    },
    "BatchUpsertTableRowsResult" : {
      "c2jName" : "BatchUpsertTableRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.BatchUpsertTableRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rows",
        "c2jShape" : "UpsertRowsResultMap",
        "deprecated" : false,
        "documentation" : "<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@param rows A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRows",
        "getterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@return A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.*/",
        "getterMethodName" : "getRows",
        "getterModel" : {
          "returnType" : "java.util.Map<String,UpsertRowsResult>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rows",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rows",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "UpsertRowsResult",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "UpsertRowsResult",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "UpsertRowsResult",
              "variableName" : "value",
              "variableType" : "UpsertRowsResult",
              "documentation" : "",
              "simpleType" : "UpsertRowsResult",
              "variableSetterType" : "UpsertRowsResult"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "UpsertRowsResult",
              "variableName" : "value",
              "variableType" : "UpsertRowsResult",
              "documentation" : "",
              "simpleType" : "UpsertRowsResult",
              "variableSetterType" : "UpsertRowsResult"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "UpsertRowsResult",
          "entryType" : "Map.Entry<String, UpsertRowsResult>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,UpsertRowsResult>",
          "templateType" : "java.util.Map<String,UpsertRowsResult>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Rows",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@param rows A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.*/",
        "setterMethodName" : "setRows",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,UpsertRowsResult>",
          "variableName" : "rows",
          "variableType" : "java.util.Map<String,UpsertRowsResult>",
          "documentation" : "",
          "simpleType" : "Map<String,UpsertRowsResult>",
          "variableSetterType" : "java.util.Map<String,UpsertRowsResult>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@param rows A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,UpsertRowsResult>",
          "variableName" : "rows",
          "variableType" : "java.util.Map<String,UpsertRowsResult>",
          "documentation" : "<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>",
          "simpleType" : "Map<String,UpsertRowsResult>",
          "variableSetterType" : "java.util.Map<String,UpsertRowsResult>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p>The updated workbook cursor after updating or appending rows in the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@param workbookCursor The updated workbook cursor after updating or appending rows in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@return The updated workbook cursor after updating or appending rows in the table.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@param workbookCursor The updated workbook cursor after updating or appending rows in the table.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@param workbookCursor The updated workbook cursor after updating or appending rows in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p>The updated workbook cursor after updating or appending rows in the table.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "failedBatchItems",
        "c2jShape" : "FailedBatchItems",
        "deprecated" : false,
        "documentation" : "<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFailedBatchItems",
        "getterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n@return The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.*/",
        "getterMethodName" : "getFailedBatchItems",
        "getterModel" : {
          "returnType" : "java.util.List<FailedBatchItem>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "failedBatchItems",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "failedBatchItems",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "FailedBatchItem",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "FailedBatchItem",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "FailedBatchItem",
              "variableName" : "member",
              "variableType" : "FailedBatchItem",
              "documentation" : "",
              "simpleType" : "FailedBatchItem",
              "variableSetterType" : "FailedBatchItem"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "FailedBatchItem",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "FailedBatchItem",
          "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
          "templateType" : "java.util.List<FailedBatchItem>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "FailedBatchItems",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.*/",
        "setterMethodName" : "setFailedBatchItems",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<FailedBatchItem>",
          "variableName" : "failedBatchItems",
          "variableType" : "java.util.List<FailedBatchItem>",
          "documentation" : "<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>",
          "simpleType" : "List<FailedBatchItem>",
          "variableSetterType" : "java.util.Collection<FailedBatchItem>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FailedBatchItems" : {
          "c2jName" : "failedBatchItems",
          "c2jShape" : "FailedBatchItems",
          "deprecated" : false,
          "documentation" : "<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFailedBatchItems",
          "getterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n@return The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.*/",
          "getterMethodName" : "getFailedBatchItems",
          "getterModel" : {
            "returnType" : "java.util.List<FailedBatchItem>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "failedBatchItems",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "failedBatchItems",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "FailedBatchItem",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "FailedBatchItem",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "FailedBatchItem",
                "variableName" : "member",
                "variableType" : "FailedBatchItem",
                "documentation" : "",
                "simpleType" : "FailedBatchItem",
                "variableSetterType" : "FailedBatchItem"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "FailedBatchItem",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "FailedBatchItem",
            "templateImplType" : "java.util.ArrayList<FailedBatchItem>",
            "templateType" : "java.util.List<FailedBatchItem>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "FailedBatchItems",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n@param failedBatchItems The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.*/",
          "setterMethodName" : "setFailedBatchItems",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setFailedBatchItems(java.util.Collection)} or {@link #withFailedBatchItems(java.util.Collection)} if you want to override the existing values.</p>\n@param failedBatchItems The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<FailedBatchItem>",
            "variableName" : "failedBatchItems",
            "variableType" : "java.util.List<FailedBatchItem>",
            "documentation" : "<p> The list of batch items in the request that could not be updated or appended in the table. Each element in this list contains one item from the request that could not be updated in the table along with the reason why that item could not be updated or appended. </p>",
            "simpleType" : "List<FailedBatchItem>",
            "variableSetterType" : "java.util.Collection<FailedBatchItem>"
          },
          "xmlNameSpaceUri" : null
        },
        "Rows" : {
          "c2jName" : "rows",
          "c2jShape" : "UpsertRowsResultMap",
          "deprecated" : false,
          "documentation" : "<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@param rows A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRows",
          "getterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@return A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.*/",
          "getterMethodName" : "getRows",
          "getterModel" : {
            "returnType" : "java.util.Map<String,UpsertRowsResult>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rows",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rows",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "UpsertRowsResult",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "UpsertRowsResult",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "UpsertRowsResult",
                "variableName" : "value",
                "variableType" : "UpsertRowsResult",
                "documentation" : "",
                "simpleType" : "UpsertRowsResult",
                "variableSetterType" : "UpsertRowsResult"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "UpsertRowsResult",
                "variableName" : "value",
                "variableType" : "UpsertRowsResult",
                "documentation" : "",
                "simpleType" : "UpsertRowsResult",
                "variableSetterType" : "UpsertRowsResult"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "UpsertRowsResult",
            "entryType" : "Map.Entry<String, UpsertRowsResult>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,UpsertRowsResult>",
            "templateType" : "java.util.Map<String,UpsertRowsResult>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Rows",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@param rows A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.*/",
          "setterMethodName" : "setRows",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,UpsertRowsResult>",
            "variableName" : "rows",
            "variableType" : "java.util.Map<String,UpsertRowsResult>",
            "documentation" : "",
            "simpleType" : "Map<String,UpsertRowsResult>",
            "variableSetterType" : "java.util.Map<String,UpsertRowsResult>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>\n@param rows A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,UpsertRowsResult>",
            "variableName" : "rows",
            "variableType" : "java.util.Map<String,UpsertRowsResult>",
            "documentation" : "<p> A map with the batch item id as the key and the result of the upsert operation as the value. The result of the upsert operation specifies whether existing rows were updated or a new row was appended, along with the list of row ids that were affected. </p>",
            "simpleType" : "Map<String,UpsertRowsResult>",
            "variableSetterType" : "java.util.Map<String,UpsertRowsResult>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p>The updated workbook cursor after updating or appending rows in the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@param workbookCursor The updated workbook cursor after updating or appending rows in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@return The updated workbook cursor after updating or appending rows in the table.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@param workbookCursor The updated workbook cursor after updating or appending rows in the table.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated workbook cursor after updating or appending rows in the table.</p>\n@param workbookCursor The updated workbook cursor after updating or appending rows in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p>The updated workbook cursor after updating or appending rows in the table.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "rows", "workbookCursor" ],
      "shapeName" : "BatchUpsertTableRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "BatchUpsertTableRowsResult",
        "variableName" : "batchUpsertTableRowsResult",
        "variableType" : "BatchUpsertTableRowsResult",
        "documentation" : null,
        "simpleType" : "BatchUpsertTableRowsResult",
        "variableSetterType" : "BatchUpsertTableRowsResult"
      },
      "wrapper" : false
    },
    "Cell" : {
      "c2jName" : "Cell",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that represents a single cell in a table.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.Cell",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "formula",
        "c2jShape" : "Formula",
        "deprecated" : false,
        "documentation" : "<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@param formula The formula contained in the cell. This field is empty if a cell does not have a formula.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFormula",
        "getterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@return The formula contained in the cell. This field is empty if a cell does not have a formula.*/",
        "getterMethodName" : "getFormula",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "formula",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "formula",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Formula",
        "sensitive" : true,
        "setterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@param formula The formula contained in the cell. This field is empty if a cell does not have a formula.*/",
        "setterMethodName" : "setFormula",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formula",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@param formula The formula contained in the cell. This field is empty if a cell does not have a formula.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formula",
          "variableType" : "String",
          "documentation" : "<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "format",
        "c2jShape" : "Format",
        "deprecated" : false,
        "documentation" : "<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "Format",
        "fluentSetterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@param format The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "fluentSetterMethodName" : "withFormat",
        "getterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@return The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@see Format*/",
        "getterMethodName" : "getFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "format",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "format",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Format",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@param format The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@see Format*/",
        "setterMethodName" : "setFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@param format The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rawValue",
        "c2jShape" : "RawValue",
        "deprecated" : false,
        "documentation" : "<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@param rawValue The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRawValue",
        "getterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@return The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.*/",
        "getterMethodName" : "getRawValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rawValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rawValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RawValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@param rawValue The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.*/",
        "setterMethodName" : "setRawValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rawValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@param rawValue The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rawValue",
          "variableType" : "String",
          "documentation" : "<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "formattedValue",
        "c2jShape" : "FormattedValue",
        "deprecated" : false,
        "documentation" : "<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@param formattedValue The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFormattedValue",
        "getterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@return The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.*/",
        "getterMethodName" : "getFormattedValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "formattedValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "formattedValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FormattedValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@param formattedValue The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.*/",
        "setterMethodName" : "setFormattedValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formattedValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@param formattedValue The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formattedValue",
          "variableType" : "String",
          "documentation" : "<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Format" : {
          "c2jName" : "format",
          "c2jShape" : "Format",
          "deprecated" : false,
          "documentation" : "<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "Format",
          "fluentSetterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@param format The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "fluentSetterMethodName" : "withFormat",
          "getterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@return The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@see Format*/",
          "getterMethodName" : "getFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "format",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "format",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Format",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@param format The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@see Format*/",
          "setterMethodName" : "setFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>\n@param format The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "<p>The format of the cell. If this field is empty, then the format is either not specified in the workbook or the format is set to AUTO.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "FormattedValue" : {
          "c2jName" : "formattedValue",
          "c2jShape" : "FormattedValue",
          "deprecated" : false,
          "documentation" : "<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@param formattedValue The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFormattedValue",
          "getterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@return The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.*/",
          "getterMethodName" : "getFormattedValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "formattedValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "formattedValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FormattedValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@param formattedValue The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.*/",
          "setterMethodName" : "setFormattedValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formattedValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>\n@param formattedValue The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formattedValue",
            "variableType" : "String",
            "documentation" : "<p> The formatted value of the cell. This is the value that you see displayed in the cell in the UI. </p> <p> Note that the formatted value of a cell is always represented as a string irrespective of the data that is stored in the cell. For example, if a cell contains a date, the formatted value of the cell is the string representation of the formatted date being shown in the cell in the UI. See details in the rawValue field below for how cells of different formats will have different raw and formatted values. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Formula" : {
          "c2jName" : "formula",
          "c2jShape" : "Formula",
          "deprecated" : false,
          "documentation" : "<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@param formula The formula contained in the cell. This field is empty if a cell does not have a formula.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFormula",
          "getterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@return The formula contained in the cell. This field is empty if a cell does not have a formula.*/",
          "getterMethodName" : "getFormula",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "formula",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "formula",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Formula",
          "sensitive" : true,
          "setterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@param formula The formula contained in the cell. This field is empty if a cell does not have a formula.*/",
          "setterMethodName" : "setFormula",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formula",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>\n@param formula The formula contained in the cell. This field is empty if a cell does not have a formula.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formula",
            "variableType" : "String",
            "documentation" : "<p> The formula contained in the cell. This field is empty if a cell does not have a formula. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RawValue" : {
          "c2jName" : "rawValue",
          "c2jShape" : "RawValue",
          "deprecated" : false,
          "documentation" : "<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@param rawValue The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRawValue",
          "getterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@return The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.*/",
          "getterMethodName" : "getRawValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rawValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rawValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RawValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@param rawValue The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.*/",
          "setterMethodName" : "setRawValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rawValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>\n@param rawValue The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rawValue",
            "variableType" : "String",
            "documentation" : "<p> The raw value of the data contained in the cell. The raw value depends on the format of the data in the cell. However the attribute in the API return value is always a string containing the raw value. </p> <p> Cells with format DATE, DATE_TIME or TIME have the raw value as a floating point number where the whole number represents the number of days since 1/1/1900 and the fractional part represents the fraction of the day since midnight. For example, a cell with date 11/3/2020 has the raw value \"44138\". A cell with the time 9:00 AM has the raw value \"0.375\" and a cell with date/time value of 11/3/2020 9:00 AM has the raw value \"44138.375\". Notice that even though the raw value is a number in all three cases, it is still represented as a string. </p> <p> Cells with format NUMBER, CURRENCY, PERCENTAGE and ACCOUNTING have the raw value of the data as the number representing the data being displayed. For example, the number 1.325 with two decimal places in the format will have it's raw value as \"1.325\" and formatted value as \"1.33\". A currency value for $10 will have the raw value as \"10\" and formatted value as \"$10.00\". A value representing 20% with two decimal places in the format will have its raw value as \"0.2\" and the formatted value as \"20.00%\". An accounting value of -$25 will have \"-25\" as the raw value and \"$ (25.00)\" as the formatted value. </p> <p> Cells with format TEXT will have the raw text as the raw value. For example, a cell with text \"John Smith\" will have \"John Smith\" as both the raw value and the formatted value. </p> <p> Cells with format CONTACT will have the name of the contact as a formatted value and the email address of the contact as the raw value. For example, a contact for John Smith will have \"John Smith\" as the formatted value and \"john.smith@example.com\" as the raw value. </p> <p> Cells with format ROWLINK (aka picklist) will have the first column of the linked row as the formatted value and the row id of the linked row as the raw value. For example, a cell containing a picklist to a table that displays task status might have \"Completed\" as the formatted value and \"row:dfcefaee-5b37-4355-8f28-40c3e4ff5dd4/ca432b2f-b8eb-431d-9fb5-cbe0342f9f03\" as the raw value. </p> <p> Cells with format AUTO or cells without any format that are auto-detected as one of the formats above will contain the raw and formatted values as mentioned above, based on the auto-detected formats. If there is no auto-detected format, the raw and formatted values will be the same as the data in the cell. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Cell",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Cell",
        "variableName" : "cell",
        "variableType" : "Cell",
        "documentation" : null,
        "simpleType" : "Cell",
        "variableSetterType" : "Cell"
      },
      "wrapper" : false
    },
    "CellInput" : {
      "c2jName" : "CellInput",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> CellInput object contains the data needed to create or update cells in a table. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.CellInput",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "fact",
        "c2jShape" : "Fact",
        "deprecated" : false,
        "documentation" : "<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@param fact Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFact",
        "getterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@return Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.*/",
        "getterMethodName" : "getFact",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "fact",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "fact",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Fact",
        "sensitive" : true,
        "setterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@param fact Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.*/",
        "setterMethodName" : "setFact",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "fact",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@param fact Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "fact",
          "variableType" : "String",
          "documentation" : "<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Fact" : {
          "c2jName" : "fact",
          "c2jShape" : "Fact",
          "deprecated" : false,
          "documentation" : "<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@param fact Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFact",
          "getterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@return Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.*/",
          "getterMethodName" : "getFact",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "fact",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "fact",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Fact",
          "sensitive" : true,
          "setterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@param fact Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.*/",
          "setterMethodName" : "setFact",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "fact",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>\n@param fact Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "fact",
            "variableType" : "String",
            "documentation" : "<p> Fact represents the data that is entered into a cell. This data can be free text or a formula. Formulas need to start with the equals (=) sign. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "CellInput",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CellInput",
        "variableName" : "cellInput",
        "variableType" : "CellInput",
        "documentation" : null,
        "simpleType" : "CellInput",
        "variableSetterType" : "CellInput"
      },
      "wrapper" : false
    },
    "ColumnMetadata" : {
      "c2jName" : "ColumnMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Metadata for column in the table.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ColumnMetadata",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "name",
        "c2jShape" : "Name",
        "deprecated" : false,
        "documentation" : "<p>The name of the column.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the column.</p>\n@param name The name of the column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withName",
        "getterDocumentation" : "/**<p>The name of the column.</p>\n@return The name of the column.*/",
        "getterMethodName" : "getName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "name",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "name",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Name",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>The name of the column.</p>\n@param name The name of the column.*/",
        "setterMethodName" : "setName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the column.</p>\n@param name The name of the column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "name",
          "variableType" : "String",
          "documentation" : "<p>The name of the column.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "format",
        "c2jShape" : "Format",
        "deprecated" : false,
        "documentation" : "<p>The format of the column.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "Format",
        "fluentSetterDocumentation" : "/**<p>The format of the column.</p>\n@param format The format of the column.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "fluentSetterMethodName" : "withFormat",
        "getterDocumentation" : "/**<p>The format of the column.</p>\n@return The format of the column.\n@see Format*/",
        "getterMethodName" : "getFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "format",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "format",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Format",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The format of the column.</p>\n@param format The format of the column.\n@see Format*/",
        "setterMethodName" : "setFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The format of the column.</p>\n@param format The format of the column.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "<p>The format of the column.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Format" : {
          "c2jName" : "format",
          "c2jShape" : "Format",
          "deprecated" : false,
          "documentation" : "<p>The format of the column.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "Format",
          "fluentSetterDocumentation" : "/**<p>The format of the column.</p>\n@param format The format of the column.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "fluentSetterMethodName" : "withFormat",
          "getterDocumentation" : "/**<p>The format of the column.</p>\n@return The format of the column.\n@see Format*/",
          "getterMethodName" : "getFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "format",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "format",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Format",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The format of the column.</p>\n@param format The format of the column.\n@see Format*/",
          "setterMethodName" : "setFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The format of the column.</p>\n@param format The format of the column.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "<p>The format of the column.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Name" : {
          "c2jName" : "name",
          "c2jShape" : "Name",
          "deprecated" : false,
          "documentation" : "<p>The name of the column.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the column.</p>\n@param name The name of the column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withName",
          "getterDocumentation" : "/**<p>The name of the column.</p>\n@return The name of the column.*/",
          "getterMethodName" : "getName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "name",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "name",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Name",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>The name of the column.</p>\n@param name The name of the column.*/",
          "setterMethodName" : "setName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the column.</p>\n@param name The name of the column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "name",
            "variableType" : "String",
            "documentation" : "<p>The name of the column.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "name", "format" ],
      "shapeName" : "ColumnMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ColumnMetadata",
        "variableName" : "columnMetadata",
        "variableType" : "ColumnMetadata",
        "documentation" : null,
        "simpleType" : "ColumnMetadata",
        "variableSetterType" : "ColumnMetadata"
      },
      "wrapper" : false
    },
    "CreateRowData" : {
      "c2jName" : "CreateRowData",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> Data needed to create a single row in a table as part of the BatchCreateTableRows request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.CreateRowData",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "batchItemId",
        "c2jShape" : "BatchItemId",
        "deprecated" : false,
        "documentation" : "<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBatchItemId",
        "getterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@return An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
        "getterMethodName" : "getBatchItemId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "batchItemId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "batchItemId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BatchItemId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
        "setterMethodName" : "setBatchItemId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "batchItemId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "batchItemId",
          "variableType" : "String",
          "documentation" : "<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cellsToCreate",
        "c2jShape" : "RowDataInput",
        "deprecated" : false,
        "documentation" : "<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToCreate A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCellsToCreate",
        "getterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@return A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
        "getterMethodName" : "getCellsToCreate",
        "getterModel" : {
          "returnType" : "java.util.Map<String,CellInput>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cellsToCreate",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cellsToCreate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "CellInput",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "CellInput",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CellInput",
              "variableName" : "value",
              "variableType" : "CellInput",
              "documentation" : "",
              "simpleType" : "CellInput",
              "variableSetterType" : "CellInput"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CellInput",
              "variableName" : "value",
              "variableType" : "CellInput",
              "documentation" : "",
              "simpleType" : "CellInput",
              "variableSetterType" : "CellInput"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "CellInput",
          "entryType" : "Map.Entry<String, CellInput>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,CellInput>",
          "templateType" : "java.util.Map<String,CellInput>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "CellsToCreate",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToCreate A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
        "setterMethodName" : "setCellsToCreate",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,CellInput>",
          "variableName" : "cellsToCreate",
          "variableType" : "java.util.Map<String,CellInput>",
          "documentation" : "",
          "simpleType" : "Map<String,CellInput>",
          "variableSetterType" : "java.util.Map<String,CellInput>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToCreate A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,CellInput>",
          "variableName" : "cellsToCreate",
          "variableType" : "java.util.Map<String,CellInput>",
          "documentation" : "<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
          "simpleType" : "Map<String,CellInput>",
          "variableSetterType" : "java.util.Map<String,CellInput>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BatchItemId" : {
          "c2jName" : "batchItemId",
          "c2jShape" : "BatchItemId",
          "deprecated" : false,
          "documentation" : "<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBatchItemId",
          "getterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@return An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
          "getterMethodName" : "getBatchItemId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "batchItemId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "batchItemId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BatchItemId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
          "setterMethodName" : "setBatchItemId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "batchItemId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "batchItemId",
            "variableType" : "String",
            "documentation" : "<p> An external identifier that represents the single row that is being created as part of the BatchCreateTableRows request. This can be any string that you can use to identify the row in the request. The BatchCreateTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CellsToCreate" : {
          "c2jName" : "cellsToCreate",
          "c2jShape" : "RowDataInput",
          "deprecated" : false,
          "documentation" : "<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToCreate A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCellsToCreate",
          "getterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@return A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
          "getterMethodName" : "getCellsToCreate",
          "getterModel" : {
            "returnType" : "java.util.Map<String,CellInput>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cellsToCreate",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cellsToCreate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "CellInput",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "CellInput",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CellInput",
                "variableName" : "value",
                "variableType" : "CellInput",
                "documentation" : "",
                "simpleType" : "CellInput",
                "variableSetterType" : "CellInput"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CellInput",
                "variableName" : "value",
                "variableType" : "CellInput",
                "documentation" : "",
                "simpleType" : "CellInput",
                "variableSetterType" : "CellInput"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "CellInput",
            "entryType" : "Map.Entry<String, CellInput>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,CellInput>",
            "templateType" : "java.util.Map<String,CellInput>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "CellsToCreate",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToCreate A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
          "setterMethodName" : "setCellsToCreate",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,CellInput>",
            "variableName" : "cellsToCreate",
            "variableType" : "java.util.Map<String,CellInput>",
            "documentation" : "",
            "simpleType" : "Map<String,CellInput>",
            "variableSetterType" : "java.util.Map<String,CellInput>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToCreate A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,CellInput>",
            "variableName" : "cellsToCreate",
            "variableType" : "java.util.Map<String,CellInput>",
            "documentation" : "<p> A map representing the cells to create in the new row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
            "simpleType" : "Map<String,CellInput>",
            "variableSetterType" : "java.util.Map<String,CellInput>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "batchItemId", "cellsToCreate" ],
      "shapeName" : "CreateRowData",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "CreateRowData",
        "variableName" : "createRowData",
        "variableType" : "CreateRowData",
        "documentation" : null,
        "simpleType" : "CreateRowData",
        "variableSetterType" : "CreateRowData"
      },
      "wrapper" : false
    },
    "DataItem" : {
      "c2jName" : "DataItem",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The data in a particular data cell defined on the screen.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.DataItem",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "overrideFormat",
        "c2jShape" : "Format",
        "deprecated" : false,
        "documentation" : "<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "Format",
        "fluentSetterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@param overrideFormat The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "fluentSetterMethodName" : "withOverrideFormat",
        "getterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@return The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@see Format*/",
        "getterMethodName" : "getOverrideFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "overrideFormat",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "overrideFormat",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "OverrideFormat",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@param overrideFormat The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@see Format*/",
        "setterMethodName" : "setOverrideFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "overrideFormat",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@param overrideFormat The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "overrideFormat",
          "variableType" : "String",
          "documentation" : "<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rawValue",
        "c2jShape" : "RawValue",
        "deprecated" : false,
        "documentation" : "<p>The raw value of the data. e.g. jsmith@example.com</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@param rawValue The raw value of the data. e.g. jsmith@example.com\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRawValue",
        "getterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@return The raw value of the data. e.g. jsmith@example.com*/",
        "getterMethodName" : "getRawValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rawValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rawValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RawValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@param rawValue The raw value of the data. e.g. jsmith@example.com*/",
        "setterMethodName" : "setRawValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rawValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@param rawValue The raw value of the data. e.g. jsmith@example.com\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rawValue",
          "variableType" : "String",
          "documentation" : "<p>The raw value of the data. e.g. jsmith@example.com</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "formattedValue",
        "c2jShape" : "FormattedValue",
        "deprecated" : false,
        "documentation" : "<p>The formatted value of the data. e.g. John Smith.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@param formattedValue The formatted value of the data. e.g. John Smith.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFormattedValue",
        "getterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@return The formatted value of the data. e.g. John Smith.*/",
        "getterMethodName" : "getFormattedValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "formattedValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "formattedValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "FormattedValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@param formattedValue The formatted value of the data. e.g. John Smith.*/",
        "setterMethodName" : "setFormattedValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formattedValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@param formattedValue The formatted value of the data. e.g. John Smith.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formattedValue",
          "variableType" : "String",
          "documentation" : "<p>The formatted value of the data. e.g. John Smith.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FormattedValue" : {
          "c2jName" : "formattedValue",
          "c2jShape" : "FormattedValue",
          "deprecated" : false,
          "documentation" : "<p>The formatted value of the data. e.g. John Smith.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@param formattedValue The formatted value of the data. e.g. John Smith.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFormattedValue",
          "getterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@return The formatted value of the data. e.g. John Smith.*/",
          "getterMethodName" : "getFormattedValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "formattedValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "formattedValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "FormattedValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@param formattedValue The formatted value of the data. e.g. John Smith.*/",
          "setterMethodName" : "setFormattedValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formattedValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The formatted value of the data. e.g. John Smith.</p>\n@param formattedValue The formatted value of the data. e.g. John Smith.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formattedValue",
            "variableType" : "String",
            "documentation" : "<p>The formatted value of the data. e.g. John Smith.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "OverrideFormat" : {
          "c2jName" : "overrideFormat",
          "c2jShape" : "Format",
          "deprecated" : false,
          "documentation" : "<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "Format",
          "fluentSetterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@param overrideFormat The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "fluentSetterMethodName" : "withOverrideFormat",
          "getterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@return The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@see Format*/",
          "getterMethodName" : "getOverrideFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "overrideFormat",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "overrideFormat",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "OverrideFormat",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@param overrideFormat The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@see Format*/",
          "setterMethodName" : "setOverrideFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "overrideFormat",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>\n@param overrideFormat The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "overrideFormat",
            "variableType" : "String",
            "documentation" : "<p> The overrideFormat is optional and is specified only if a particular row of data has a different format for the data than the default format defined on the screen or the table. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RawValue" : {
          "c2jName" : "rawValue",
          "c2jShape" : "RawValue",
          "deprecated" : false,
          "documentation" : "<p>The raw value of the data. e.g. jsmith@example.com</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@param rawValue The raw value of the data. e.g. jsmith@example.com\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRawValue",
          "getterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@return The raw value of the data. e.g. jsmith@example.com*/",
          "getterMethodName" : "getRawValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rawValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rawValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RawValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@param rawValue The raw value of the data. e.g. jsmith@example.com*/",
          "setterMethodName" : "setRawValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rawValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The raw value of the data. e.g. jsmith@example.com</p>\n@param rawValue The raw value of the data. e.g. jsmith@example.com\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rawValue",
            "variableType" : "String",
            "documentation" : "<p>The raw value of the data. e.g. jsmith@example.com</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DataItem",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DataItem",
        "variableName" : "dataItem",
        "variableType" : "DataItem",
        "documentation" : null,
        "simpleType" : "DataItem",
        "variableSetterType" : "DataItem"
      },
      "wrapper" : false
    },
    "DelimitedTextImportOptions" : {
      "c2jName" : "DelimitedTextImportOptions",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> An object that contains the options relating to parsing delimited text as part of an import request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.DelimitedTextImportOptions",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "delimiter",
        "c2jShape" : "DelimitedTextDelimiter",
        "deprecated" : false,
        "documentation" : "<p>The delimiter to use for separating columns in a single row of the input.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@param delimiter The delimiter to use for separating columns in a single row of the input.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDelimiter",
        "getterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@return The delimiter to use for separating columns in a single row of the input.*/",
        "getterMethodName" : "getDelimiter",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "delimiter",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "delimiter",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Delimiter",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@param delimiter The delimiter to use for separating columns in a single row of the input.*/",
        "setterMethodName" : "setDelimiter",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "delimiter",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@param delimiter The delimiter to use for separating columns in a single row of the input.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "delimiter",
          "variableType" : "String",
          "documentation" : "<p>The delimiter to use for separating columns in a single row of the input.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "hasHeaderRow",
        "c2jShape" : "HasHeaderRow",
        "deprecated" : false,
        "documentation" : "<p>Indicates whether the input file has a header row at the top containing the column names.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@param hasHeaderRow Indicates whether the input file has a header row at the top containing the column names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHasHeaderRow",
        "getterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@return Indicates whether the input file has a header row at the top containing the column names.*/",
        "getterMethodName" : "getHasHeaderRow",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "hasHeaderRow",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "hasHeaderRow",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "HasHeaderRow",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@param hasHeaderRow Indicates whether the input file has a header row at the top containing the column names.*/",
        "setterMethodName" : "setHasHeaderRow",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "hasHeaderRow",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@param hasHeaderRow Indicates whether the input file has a header row at the top containing the column names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "hasHeaderRow",
          "variableType" : "Boolean",
          "documentation" : "<p>Indicates whether the input file has a header row at the top containing the column names.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "ignoreEmptyRows",
        "c2jShape" : "IgnoreEmptyRows",
        "deprecated" : false,
        "documentation" : "<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@param ignoreEmptyRows A parameter to indicate whether empty rows should be ignored or be included in the import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withIgnoreEmptyRows",
        "getterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@return A parameter to indicate whether empty rows should be ignored or be included in the import.*/",
        "getterMethodName" : "getIgnoreEmptyRows",
        "getterModel" : {
          "returnType" : "Boolean",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "ignoreEmptyRows",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "ignoreEmptyRows",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Boolean",
        "marshallingType" : "BOOLEAN",
        "name" : "IgnoreEmptyRows",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@param ignoreEmptyRows A parameter to indicate whether empty rows should be ignored or be included in the import.*/",
        "setterMethodName" : "setIgnoreEmptyRows",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "ignoreEmptyRows",
          "variableType" : "Boolean",
          "documentation" : "",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@param ignoreEmptyRows A parameter to indicate whether empty rows should be ignored or be included in the import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Boolean",
          "variableName" : "ignoreEmptyRows",
          "variableType" : "Boolean",
          "documentation" : "<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>",
          "simpleType" : "Boolean",
          "variableSetterType" : "Boolean"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "dataCharacterEncoding",
        "c2jShape" : "ImportDataCharacterEncoding",
        "deprecated" : false,
        "documentation" : "<p>The encoding of the data in the input file.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ImportDataCharacterEncoding",
        "fluentSetterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@param dataCharacterEncoding The encoding of the data in the input file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportDataCharacterEncoding*/",
        "fluentSetterMethodName" : "withDataCharacterEncoding",
        "getterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@return The encoding of the data in the input file.\n@see ImportDataCharacterEncoding*/",
        "getterMethodName" : "getDataCharacterEncoding",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataCharacterEncoding",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataCharacterEncoding",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DataCharacterEncoding",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@param dataCharacterEncoding The encoding of the data in the input file.\n@see ImportDataCharacterEncoding*/",
        "setterMethodName" : "setDataCharacterEncoding",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "dataCharacterEncoding",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@param dataCharacterEncoding The encoding of the data in the input file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportDataCharacterEncoding*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "dataCharacterEncoding",
          "variableType" : "String",
          "documentation" : "<p>The encoding of the data in the input file.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DataCharacterEncoding" : {
          "c2jName" : "dataCharacterEncoding",
          "c2jShape" : "ImportDataCharacterEncoding",
          "deprecated" : false,
          "documentation" : "<p>The encoding of the data in the input file.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ImportDataCharacterEncoding",
          "fluentSetterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@param dataCharacterEncoding The encoding of the data in the input file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportDataCharacterEncoding*/",
          "fluentSetterMethodName" : "withDataCharacterEncoding",
          "getterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@return The encoding of the data in the input file.\n@see ImportDataCharacterEncoding*/",
          "getterMethodName" : "getDataCharacterEncoding",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataCharacterEncoding",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataCharacterEncoding",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DataCharacterEncoding",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@param dataCharacterEncoding The encoding of the data in the input file.\n@see ImportDataCharacterEncoding*/",
          "setterMethodName" : "setDataCharacterEncoding",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "dataCharacterEncoding",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The encoding of the data in the input file.</p>\n@param dataCharacterEncoding The encoding of the data in the input file.\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportDataCharacterEncoding*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "dataCharacterEncoding",
            "variableType" : "String",
            "documentation" : "<p>The encoding of the data in the input file.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Delimiter" : {
          "c2jName" : "delimiter",
          "c2jShape" : "DelimitedTextDelimiter",
          "deprecated" : false,
          "documentation" : "<p>The delimiter to use for separating columns in a single row of the input.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@param delimiter The delimiter to use for separating columns in a single row of the input.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDelimiter",
          "getterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@return The delimiter to use for separating columns in a single row of the input.*/",
          "getterMethodName" : "getDelimiter",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "delimiter",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "delimiter",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Delimiter",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@param delimiter The delimiter to use for separating columns in a single row of the input.*/",
          "setterMethodName" : "setDelimiter",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "delimiter",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The delimiter to use for separating columns in a single row of the input.</p>\n@param delimiter The delimiter to use for separating columns in a single row of the input.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "delimiter",
            "variableType" : "String",
            "documentation" : "<p>The delimiter to use for separating columns in a single row of the input.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "HasHeaderRow" : {
          "c2jName" : "hasHeaderRow",
          "c2jShape" : "HasHeaderRow",
          "deprecated" : false,
          "documentation" : "<p>Indicates whether the input file has a header row at the top containing the column names.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@param hasHeaderRow Indicates whether the input file has a header row at the top containing the column names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHasHeaderRow",
          "getterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@return Indicates whether the input file has a header row at the top containing the column names.*/",
          "getterMethodName" : "getHasHeaderRow",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "hasHeaderRow",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "hasHeaderRow",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "HasHeaderRow",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@param hasHeaderRow Indicates whether the input file has a header row at the top containing the column names.*/",
          "setterMethodName" : "setHasHeaderRow",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "hasHeaderRow",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Indicates whether the input file has a header row at the top containing the column names.</p>\n@param hasHeaderRow Indicates whether the input file has a header row at the top containing the column names.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "hasHeaderRow",
            "variableType" : "Boolean",
            "documentation" : "<p>Indicates whether the input file has a header row at the top containing the column names.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        },
        "IgnoreEmptyRows" : {
          "c2jName" : "ignoreEmptyRows",
          "c2jShape" : "IgnoreEmptyRows",
          "deprecated" : false,
          "documentation" : "<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@param ignoreEmptyRows A parameter to indicate whether empty rows should be ignored or be included in the import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withIgnoreEmptyRows",
          "getterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@return A parameter to indicate whether empty rows should be ignored or be included in the import.*/",
          "getterMethodName" : "getIgnoreEmptyRows",
          "getterModel" : {
            "returnType" : "Boolean",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "ignoreEmptyRows",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "ignoreEmptyRows",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Boolean",
          "marshallingType" : "BOOLEAN",
          "name" : "IgnoreEmptyRows",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@param ignoreEmptyRows A parameter to indicate whether empty rows should be ignored or be included in the import.*/",
          "setterMethodName" : "setIgnoreEmptyRows",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "ignoreEmptyRows",
            "variableType" : "Boolean",
            "documentation" : "",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>\n@param ignoreEmptyRows A parameter to indicate whether empty rows should be ignored or be included in the import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Boolean",
            "variableName" : "ignoreEmptyRows",
            "variableType" : "Boolean",
            "documentation" : "<p>A parameter to indicate whether empty rows should be ignored or be included in the import.</p>",
            "simpleType" : "Boolean",
            "variableSetterType" : "Boolean"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "delimiter" ],
      "shapeName" : "DelimitedTextImportOptions",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DelimitedTextImportOptions",
        "variableName" : "delimitedTextImportOptions",
        "variableType" : "DelimitedTextImportOptions",
        "documentation" : null,
        "simpleType" : "DelimitedTextImportOptions",
        "variableSetterType" : "DelimitedTextImportOptions"
      },
      "wrapper" : false
    },
    "DescribeTableDataImportJobRequest" : {
      "c2jName" : "DescribeTableDataImportJobRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.DescribeTableDataImportJobRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "DescribeTableDataImportJob",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/import/{jobId}",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "jobId",
        "c2jShape" : "JobId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param jobId The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withJobId",
        "getterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getJobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "jobId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "jobId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "JobId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param jobId The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setJobId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param jobId The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "JobId" : {
          "c2jName" : "jobId",
          "c2jShape" : "JobId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param jobId The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withJobId",
          "getterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getJobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "jobId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "jobId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "JobId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param jobId The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setJobId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param jobId The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the job that was returned by the StartTableDataImportJob request.</p> <p> If a job with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table into which data was imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook into which data was imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId", "jobId" ],
      "shapeName" : "DescribeTableDataImportJobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeTableDataImportJobRequest",
        "variableName" : "describeTableDataImportJobRequest",
        "variableType" : "DescribeTableDataImportJobRequest",
        "documentation" : null,
        "simpleType" : "DescribeTableDataImportJobRequest",
        "variableSetterType" : "DescribeTableDataImportJobRequest"
      },
      "wrapper" : false
    },
    "DescribeTableDataImportJobResult" : {
      "c2jName" : "DescribeTableDataImportJobResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.DescribeTableDataImportJobResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "jobStatus",
        "c2jShape" : "TableDataImportJobStatus",
        "deprecated" : false,
        "documentation" : "<p> The current status of the import job. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "TableDataImportJobStatus",
        "fluentSetterDocumentation" : "/**<p> The current status of the import job. </p>\n@param jobStatus The current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
        "fluentSetterMethodName" : "withJobStatus",
        "getterDocumentation" : "/**<p> The current status of the import job. </p>\n@return The current status of the import job.\n@see TableDataImportJobStatus*/",
        "getterMethodName" : "getJobStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "jobStatus",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "jobStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "JobStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The current status of the import job. </p>\n@param jobStatus The current status of the import job.\n@see TableDataImportJobStatus*/",
        "setterMethodName" : "setJobStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The current status of the import job. </p>\n@param jobStatus The current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobStatus",
          "variableType" : "String",
          "documentation" : "<p> The current status of the import job. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "message",
        "c2jShape" : "TableDataImportJobMessage",
        "deprecated" : false,
        "documentation" : "<p> A message providing more details about the current status of the import job. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@param message A message providing more details about the current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMessage",
        "getterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@return A message providing more details about the current status of the import job.*/",
        "getterMethodName" : "getMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "message",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "message",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Message",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@param message A message providing more details about the current status of the import job.*/",
        "setterMethodName" : "setMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@param message A message providing more details about the current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "message",
          "variableType" : "String",
          "documentation" : "<p> A message providing more details about the current status of the import job. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "jobMetadata",
        "c2jShape" : "TableDataImportJobMetadata",
        "deprecated" : false,
        "documentation" : "<p> The metadata about the job that was submitted for import. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@param jobMetadata The metadata about the job that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withJobMetadata",
        "getterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@return The metadata about the job that was submitted for import.*/",
        "getterMethodName" : "getJobMetadata",
        "getterModel" : {
          "returnType" : "TableDataImportJobMetadata",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "jobMetadata",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "jobMetadata",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "JobMetadata",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@param jobMetadata The metadata about the job that was submitted for import.*/",
        "setterMethodName" : "setJobMetadata",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TableDataImportJobMetadata",
          "variableName" : "jobMetadata",
          "variableType" : "TableDataImportJobMetadata",
          "documentation" : "",
          "simpleType" : "TableDataImportJobMetadata",
          "variableSetterType" : "TableDataImportJobMetadata"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@param jobMetadata The metadata about the job that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "TableDataImportJobMetadata",
          "variableName" : "jobMetadata",
          "variableType" : "TableDataImportJobMetadata",
          "documentation" : "<p> The metadata about the job that was submitted for import. </p>",
          "simpleType" : "TableDataImportJobMetadata",
          "variableSetterType" : "TableDataImportJobMetadata"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "JobMetadata" : {
          "c2jName" : "jobMetadata",
          "c2jShape" : "TableDataImportJobMetadata",
          "deprecated" : false,
          "documentation" : "<p> The metadata about the job that was submitted for import. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@param jobMetadata The metadata about the job that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withJobMetadata",
          "getterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@return The metadata about the job that was submitted for import.*/",
          "getterMethodName" : "getJobMetadata",
          "getterModel" : {
            "returnType" : "TableDataImportJobMetadata",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "jobMetadata",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "jobMetadata",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "JobMetadata",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@param jobMetadata The metadata about the job that was submitted for import.*/",
          "setterMethodName" : "setJobMetadata",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TableDataImportJobMetadata",
            "variableName" : "jobMetadata",
            "variableType" : "TableDataImportJobMetadata",
            "documentation" : "",
            "simpleType" : "TableDataImportJobMetadata",
            "variableSetterType" : "TableDataImportJobMetadata"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The metadata about the job that was submitted for import. </p>\n@param jobMetadata The metadata about the job that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "TableDataImportJobMetadata",
            "variableName" : "jobMetadata",
            "variableType" : "TableDataImportJobMetadata",
            "documentation" : "<p> The metadata about the job that was submitted for import. </p>",
            "simpleType" : "TableDataImportJobMetadata",
            "variableSetterType" : "TableDataImportJobMetadata"
          },
          "xmlNameSpaceUri" : null
        },
        "JobStatus" : {
          "c2jName" : "jobStatus",
          "c2jShape" : "TableDataImportJobStatus",
          "deprecated" : false,
          "documentation" : "<p> The current status of the import job. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "TableDataImportJobStatus",
          "fluentSetterDocumentation" : "/**<p> The current status of the import job. </p>\n@param jobStatus The current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
          "fluentSetterMethodName" : "withJobStatus",
          "getterDocumentation" : "/**<p> The current status of the import job. </p>\n@return The current status of the import job.\n@see TableDataImportJobStatus*/",
          "getterMethodName" : "getJobStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "jobStatus",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "jobStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "JobStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The current status of the import job. </p>\n@param jobStatus The current status of the import job.\n@see TableDataImportJobStatus*/",
          "setterMethodName" : "setJobStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The current status of the import job. </p>\n@param jobStatus The current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobStatus",
            "variableType" : "String",
            "documentation" : "<p> The current status of the import job. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Message" : {
          "c2jName" : "message",
          "c2jShape" : "TableDataImportJobMessage",
          "deprecated" : false,
          "documentation" : "<p> A message providing more details about the current status of the import job. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@param message A message providing more details about the current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMessage",
          "getterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@return A message providing more details about the current status of the import job.*/",
          "getterMethodName" : "getMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "message",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "message",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Message",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@param message A message providing more details about the current status of the import job.*/",
          "setterMethodName" : "setMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> A message providing more details about the current status of the import job. </p>\n@param message A message providing more details about the current status of the import job.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "message",
            "variableType" : "String",
            "documentation" : "<p> A message providing more details about the current status of the import job. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "jobStatus", "message", "jobMetadata" ],
      "shapeName" : "DescribeTableDataImportJobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DescribeTableDataImportJobResult",
        "variableName" : "describeTableDataImportJobResult",
        "variableType" : "DescribeTableDataImportJobResult",
        "documentation" : null,
        "simpleType" : "DescribeTableDataImportJobResult",
        "variableSetterType" : "DescribeTableDataImportJobResult"
      },
      "wrapper" : false
    },
    "DestinationOptions" : {
      "c2jName" : "DestinationOptions",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that contains the options relating to the destination of the import request.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.DestinationOptions",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "columnMap",
        "c2jShape" : "ImportColumnMap",
        "deprecated" : false,
        "documentation" : "<p>A map of the column id to the import properties for each column.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@param columnMap A map of the column id to the import properties for each column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withColumnMap",
        "getterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@return A map of the column id to the import properties for each column.*/",
        "getterMethodName" : "getColumnMap",
        "getterModel" : {
          "returnType" : "java.util.Map<String,SourceDataColumnProperties>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "columnMap",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "columnMap",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "SourceDataColumnProperties",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "SourceDataColumnProperties",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "SourceDataColumnProperties",
              "variableName" : "value",
              "variableType" : "SourceDataColumnProperties",
              "documentation" : "",
              "simpleType" : "SourceDataColumnProperties",
              "variableSetterType" : "SourceDataColumnProperties"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "SourceDataColumnProperties",
              "variableName" : "value",
              "variableType" : "SourceDataColumnProperties",
              "documentation" : "",
              "simpleType" : "SourceDataColumnProperties",
              "variableSetterType" : "SourceDataColumnProperties"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "SourceDataColumnProperties",
          "entryType" : "Map.Entry<String, SourceDataColumnProperties>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,SourceDataColumnProperties>",
          "templateType" : "java.util.Map<String,SourceDataColumnProperties>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "ColumnMap",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@param columnMap A map of the column id to the import properties for each column.*/",
        "setterMethodName" : "setColumnMap",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,SourceDataColumnProperties>",
          "variableName" : "columnMap",
          "variableType" : "java.util.Map<String,SourceDataColumnProperties>",
          "documentation" : "",
          "simpleType" : "Map<String,SourceDataColumnProperties>",
          "variableSetterType" : "java.util.Map<String,SourceDataColumnProperties>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@param columnMap A map of the column id to the import properties for each column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,SourceDataColumnProperties>",
          "variableName" : "columnMap",
          "variableType" : "java.util.Map<String,SourceDataColumnProperties>",
          "documentation" : "<p>A map of the column id to the import properties for each column.</p>",
          "simpleType" : "Map<String,SourceDataColumnProperties>",
          "variableSetterType" : "java.util.Map<String,SourceDataColumnProperties>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ColumnMap" : {
          "c2jName" : "columnMap",
          "c2jShape" : "ImportColumnMap",
          "deprecated" : false,
          "documentation" : "<p>A map of the column id to the import properties for each column.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@param columnMap A map of the column id to the import properties for each column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withColumnMap",
          "getterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@return A map of the column id to the import properties for each column.*/",
          "getterMethodName" : "getColumnMap",
          "getterModel" : {
            "returnType" : "java.util.Map<String,SourceDataColumnProperties>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "columnMap",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "columnMap",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "SourceDataColumnProperties",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "SourceDataColumnProperties",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "SourceDataColumnProperties",
                "variableName" : "value",
                "variableType" : "SourceDataColumnProperties",
                "documentation" : "",
                "simpleType" : "SourceDataColumnProperties",
                "variableSetterType" : "SourceDataColumnProperties"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "SourceDataColumnProperties",
                "variableName" : "value",
                "variableType" : "SourceDataColumnProperties",
                "documentation" : "",
                "simpleType" : "SourceDataColumnProperties",
                "variableSetterType" : "SourceDataColumnProperties"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "SourceDataColumnProperties",
            "entryType" : "Map.Entry<String, SourceDataColumnProperties>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,SourceDataColumnProperties>",
            "templateType" : "java.util.Map<String,SourceDataColumnProperties>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "ColumnMap",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@param columnMap A map of the column id to the import properties for each column.*/",
          "setterMethodName" : "setColumnMap",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,SourceDataColumnProperties>",
            "variableName" : "columnMap",
            "variableType" : "java.util.Map<String,SourceDataColumnProperties>",
            "documentation" : "",
            "simpleType" : "Map<String,SourceDataColumnProperties>",
            "variableSetterType" : "java.util.Map<String,SourceDataColumnProperties>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A map of the column id to the import properties for each column.</p>\n@param columnMap A map of the column id to the import properties for each column.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,SourceDataColumnProperties>",
            "variableName" : "columnMap",
            "variableType" : "java.util.Map<String,SourceDataColumnProperties>",
            "documentation" : "<p>A map of the column id to the import properties for each column.</p>",
            "simpleType" : "Map<String,SourceDataColumnProperties>",
            "variableSetterType" : "java.util.Map<String,SourceDataColumnProperties>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "DestinationOptions",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "DestinationOptions",
        "variableName" : "destinationOptions",
        "variableType" : "DestinationOptions",
        "documentation" : null,
        "simpleType" : "DestinationOptions",
        "variableSetterType" : "DestinationOptions"
      },
      "wrapper" : false
    },
    "FailedBatchItem" : {
      "c2jName" : "FailedBatchItem",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> A single item in a batch that failed to perform the intended action because of an error preventing it from succeeding. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.FailedBatchItem",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "id",
        "c2jShape" : "BatchItemId",
        "deprecated" : false,
        "documentation" : "<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@param id The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withId",
        "getterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@return The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.*/",
        "getterMethodName" : "getId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "id",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "id",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Id",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@param id The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.*/",
        "setterMethodName" : "setId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@param id The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "id",
          "variableType" : "String",
          "documentation" : "<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "errorMessage",
        "c2jShape" : "BatchErrorMessage",
        "deprecated" : false,
        "documentation" : "<p> The error message that indicates why the batch item failed. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@param errorMessage The error message that indicates why the batch item failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withErrorMessage",
        "getterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@return The error message that indicates why the batch item failed.*/",
        "getterMethodName" : "getErrorMessage",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "errorMessage",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "errorMessage",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ErrorMessage",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@param errorMessage The error message that indicates why the batch item failed.*/",
        "setterMethodName" : "setErrorMessage",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "errorMessage",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@param errorMessage The error message that indicates why the batch item failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "errorMessage",
          "variableType" : "String",
          "documentation" : "<p> The error message that indicates why the batch item failed. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ErrorMessage" : {
          "c2jName" : "errorMessage",
          "c2jShape" : "BatchErrorMessage",
          "deprecated" : false,
          "documentation" : "<p> The error message that indicates why the batch item failed. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@param errorMessage The error message that indicates why the batch item failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withErrorMessage",
          "getterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@return The error message that indicates why the batch item failed.*/",
          "getterMethodName" : "getErrorMessage",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "errorMessage",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "errorMessage",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ErrorMessage",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@param errorMessage The error message that indicates why the batch item failed.*/",
          "setterMethodName" : "setErrorMessage",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "errorMessage",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The error message that indicates why the batch item failed. </p>\n@param errorMessage The error message that indicates why the batch item failed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "errorMessage",
            "variableType" : "String",
            "documentation" : "<p> The error message that indicates why the batch item failed. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Id" : {
          "c2jName" : "id",
          "c2jShape" : "BatchItemId",
          "deprecated" : false,
          "documentation" : "<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@param id The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withId",
          "getterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@return The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.*/",
          "getterMethodName" : "getId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "id",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "id",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Id",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@param id The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.*/",
          "setterMethodName" : "setId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>\n@param id The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "id",
            "variableType" : "String",
            "documentation" : "<p> The id of the batch item that failed. This is the batch item id for the BatchCreateTableRows and BatchUpsertTableRows operations and the row id for the BatchUpdateTableRows and BatchDeleteTableRows operations. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "id", "errorMessage" ],
      "shapeName" : "FailedBatchItem",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "FailedBatchItem",
        "variableName" : "failedBatchItem",
        "variableType" : "FailedBatchItem",
        "documentation" : null,
        "simpleType" : "FailedBatchItem",
        "variableSetterType" : "FailedBatchItem"
      },
      "wrapper" : false
    },
    "Filter" : {
      "c2jName" : "Filter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.Filter",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "formula",
        "c2jShape" : "Formula",
        "deprecated" : false,
        "documentation" : "<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@param formula A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFormula",
        "getterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@return A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.*/",
        "getterMethodName" : "getFormula",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "formula",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "formula",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Formula",
        "sensitive" : true,
        "setterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@param formula A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.*/",
        "setterMethodName" : "setFormula",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formula",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@param formula A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "formula",
          "variableType" : "String",
          "documentation" : "<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "contextRowId",
        "c2jShape" : "RowId",
        "deprecated" : false,
        "documentation" : "<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@param contextRowId The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withContextRowId",
        "getterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@return The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.*/",
        "getterMethodName" : "getContextRowId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "contextRowId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "contextRowId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ContextRowId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@param contextRowId The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.*/",
        "setterMethodName" : "setContextRowId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contextRowId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@param contextRowId The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "contextRowId",
          "variableType" : "String",
          "documentation" : "<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ContextRowId" : {
          "c2jName" : "contextRowId",
          "c2jShape" : "RowId",
          "deprecated" : false,
          "documentation" : "<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@param contextRowId The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withContextRowId",
          "getterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@return The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.*/",
          "getterMethodName" : "getContextRowId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "contextRowId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "contextRowId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ContextRowId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@param contextRowId The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.*/",
          "setterMethodName" : "setContextRowId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contextRowId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>\n@param contextRowId The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "contextRowId",
            "variableType" : "String",
            "documentation" : "<p> The optional contextRowId attribute can be used to specify the row id of the context row if the filter formula contains unqualified references to table columns and needs a context row to evaluate them successfully. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Formula" : {
          "c2jName" : "formula",
          "c2jShape" : "Formula",
          "deprecated" : false,
          "documentation" : "<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@param formula A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFormula",
          "getterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@return A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.*/",
          "getterMethodName" : "getFormula",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "formula",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "formula",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Formula",
          "sensitive" : true,
          "setterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@param formula A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.*/",
          "setterMethodName" : "setFormula",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formula",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>\n@param formula A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "formula",
            "variableType" : "String",
            "documentation" : "<p> A formula representing a filter function that returns zero or more matching rows from a table. Valid formulas in this field return a list of rows from a table. The most common ways of writing a formula to return a list of rows are to use the FindRow() or Filter() functions. Any other formula that returns zero or more rows is also acceptable. For example, you can use a formula that points to a cell that contains a filter function. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "formula" ],
      "shapeName" : "Filter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Filter",
        "variableName" : "filter",
        "variableType" : "Filter",
        "documentation" : null,
        "simpleType" : "Filter",
        "variableSetterType" : "Filter"
      },
      "wrapper" : false
    },
    "Format" : {
      "c2jName" : "Format",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "AUTO",
        "value" : "AUTO"
      }, {
        "name" : "NUMBER",
        "value" : "NUMBER"
      }, {
        "name" : "CURRENCY",
        "value" : "CURRENCY"
      }, {
        "name" : "DATE",
        "value" : "DATE"
      }, {
        "name" : "TIME",
        "value" : "TIME"
      }, {
        "name" : "DATE_TIME",
        "value" : "DATE_TIME"
      }, {
        "name" : "PERCENTAGE",
        "value" : "PERCENTAGE"
      }, {
        "name" : "TEXT",
        "value" : "TEXT"
      }, {
        "name" : "ACCOUNTING",
        "value" : "ACCOUNTING"
      }, {
        "name" : "CONTACT",
        "value" : "CONTACT"
      }, {
        "name" : "ROWLINK",
        "value" : "ROWLINK"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.enum.Format",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Format",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Format",
        "variableName" : "format",
        "variableType" : "Format",
        "documentation" : null,
        "simpleType" : "Format",
        "variableSetterType" : "Format"
      },
      "wrapper" : false
    },
    "GetScreenDataRequest" : {
      "c2jName" : "GetScreenDataRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.GetScreenDataRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "GetScreenData",
        "locationName" : null,
        "requestUri" : "/screendata",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook that contains the screen.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@param workbookId The ID of the workbook that contains the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@return The ID of the workbook that contains the screen.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@param workbookId The ID of the workbook that contains the screen.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@param workbookId The ID of the workbook that contains the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook that contains the screen.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "appId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the app that contains the screem.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@param appId The ID of the app that contains the screem.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAppId",
        "getterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@return The ID of the app that contains the screem.*/",
        "getterMethodName" : "getAppId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "appId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "appId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AppId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@param appId The ID of the app that contains the screem.*/",
        "setterMethodName" : "setAppId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "appId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@param appId The ID of the app that contains the screem.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "appId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the app that contains the screem.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "screenId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the screen.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the screen.</p>\n@param screenId The ID of the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withScreenId",
        "getterDocumentation" : "/**<p>The ID of the screen.</p>\n@return The ID of the screen.*/",
        "getterMethodName" : "getScreenId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "screenId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "screenId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ScreenId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the screen.</p>\n@param screenId The ID of the screen.*/",
        "setterMethodName" : "setScreenId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "screenId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the screen.</p>\n@param screenId The ID of the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "screenId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the screen.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "variables",
        "c2jShape" : "VariableValueMap",
        "deprecated" : false,
        "documentation" : "<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@param variables Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVariables",
        "getterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@return Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.*/",
        "getterMethodName" : "getVariables",
        "getterModel" : {
          "returnType" : "java.util.Map<String,VariableValue>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "variables",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "variables",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "VariableValue",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "VariableValue",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : true,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "VariableValue",
              "variableName" : "value",
              "variableType" : "VariableValue",
              "documentation" : "",
              "simpleType" : "VariableValue",
              "variableSetterType" : "VariableValue"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "VariableValue",
              "variableName" : "value",
              "variableType" : "VariableValue",
              "documentation" : "",
              "simpleType" : "VariableValue",
              "variableSetterType" : "VariableValue"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "VariableValue",
          "entryType" : "Map.Entry<String, VariableValue>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,VariableValue>",
          "templateType" : "java.util.Map<String,VariableValue>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Variables",
        "sensitive" : true,
        "setterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@param variables Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.*/",
        "setterMethodName" : "setVariables",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,VariableValue>",
          "variableName" : "variables",
          "variableType" : "java.util.Map<String,VariableValue>",
          "documentation" : "",
          "simpleType" : "Map<String,VariableValue>",
          "variableSetterType" : "java.util.Map<String,VariableValue>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@param variables Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,VariableValue>",
          "variableName" : "variables",
          "variableType" : "java.util.Map<String,VariableValue>",
          "documentation" : "<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>",
          "simpleType" : "Map<String,VariableValue>",
          "variableSetterType" : "java.util.Map<String,VariableValue>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@param maxResults The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@return The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@param maxResults The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@param maxResults The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AppId" : {
          "c2jName" : "appId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the app that contains the screem.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@param appId The ID of the app that contains the screem.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAppId",
          "getterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@return The ID of the app that contains the screem.*/",
          "getterMethodName" : "getAppId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "appId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "appId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AppId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@param appId The ID of the app that contains the screem.*/",
          "setterMethodName" : "setAppId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "appId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the app that contains the screem.</p>\n@param appId The ID of the app that contains the screem.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "appId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the app that contains the screem.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@param maxResults The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@return The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@param maxResults The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>\n@param maxResults The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p> The number of results to be returned on a single page. Specify a number between 1 and 100. The maximum value is 100. </p> <p> This parameter is optional. If you don't specify this parameter, the default page size is 100. </p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ScreenId" : {
          "c2jName" : "screenId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the screen.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the screen.</p>\n@param screenId The ID of the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withScreenId",
          "getterDocumentation" : "/**<p>The ID of the screen.</p>\n@return The ID of the screen.*/",
          "getterMethodName" : "getScreenId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "screenId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "screenId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ScreenId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the screen.</p>\n@param screenId The ID of the screen.*/",
          "setterMethodName" : "setScreenId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "screenId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the screen.</p>\n@param screenId The ID of the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "screenId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the screen.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Variables" : {
          "c2jName" : "variables",
          "c2jShape" : "VariableValueMap",
          "deprecated" : false,
          "documentation" : "<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@param variables Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVariables",
          "getterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@return Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.*/",
          "getterMethodName" : "getVariables",
          "getterModel" : {
            "returnType" : "java.util.Map<String,VariableValue>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "variables",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "variables",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "VariableValue",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "VariableValue",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : true,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "VariableValue",
                "variableName" : "value",
                "variableType" : "VariableValue",
                "documentation" : "",
                "simpleType" : "VariableValue",
                "variableSetterType" : "VariableValue"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "VariableValue",
                "variableName" : "value",
                "variableType" : "VariableValue",
                "documentation" : "",
                "simpleType" : "VariableValue",
                "variableSetterType" : "VariableValue"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "VariableValue",
            "entryType" : "Map.Entry<String, VariableValue>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,VariableValue>",
            "templateType" : "java.util.Map<String,VariableValue>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Variables",
          "sensitive" : true,
          "setterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@param variables Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.*/",
          "setterMethodName" : "setVariables",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,VariableValue>",
            "variableName" : "variables",
            "variableType" : "java.util.Map<String,VariableValue>",
            "documentation" : "",
            "simpleType" : "Map<String,VariableValue>",
            "variableSetterType" : "java.util.Map<String,VariableValue>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>\n@param variables Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,VariableValue>",
            "variableName" : "variables",
            "variableType" : "java.util.Map<String,VariableValue>",
            "documentation" : "<p> Variables are optional and are needed only if the screen requires them to render correctly. Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. </p>",
            "simpleType" : "Map<String,VariableValue>",
            "variableSetterType" : "java.util.Map<String,VariableValue>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook that contains the screen.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@param workbookId The ID of the workbook that contains the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@return The ID of the workbook that contains the screen.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@param workbookId The ID of the workbook that contains the screen.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen.</p>\n@param workbookId The ID of the workbook that contains the screen.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook that contains the screen.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "appId", "screenId" ],
      "shapeName" : "GetScreenDataRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetScreenDataRequest",
        "variableName" : "getScreenDataRequest",
        "variableType" : "GetScreenDataRequest",
        "documentation" : null,
        "simpleType" : "GetScreenDataRequest",
        "variableSetterType" : "GetScreenDataRequest"
      },
      "wrapper" : false
    },
    "GetScreenDataResult" : {
      "c2jName" : "GetScreenDataResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.GetScreenDataResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "results",
        "c2jShape" : "ResultSetMap",
        "deprecated" : false,
        "documentation" : "<p>A map of all the rows on the screen keyed by block name.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@param results A map of all the rows on the screen keyed by block name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withResults",
        "getterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@return A map of all the rows on the screen keyed by block name.*/",
        "getterMethodName" : "getResults",
        "getterModel" : {
          "returnType" : "java.util.Map<String,ResultSet>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "results",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "results",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "ResultSet",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "ResultSet",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResultSet",
              "variableName" : "value",
              "variableType" : "ResultSet",
              "documentation" : "",
              "simpleType" : "ResultSet",
              "variableSetterType" : "ResultSet"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResultSet",
              "variableName" : "value",
              "variableType" : "ResultSet",
              "documentation" : "",
              "simpleType" : "ResultSet",
              "variableSetterType" : "ResultSet"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "ResultSet",
          "entryType" : "Map.Entry<String, ResultSet>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,ResultSet>",
          "templateType" : "java.util.Map<String,ResultSet>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Results",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@param results A map of all the rows on the screen keyed by block name.*/",
        "setterMethodName" : "setResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,ResultSet>",
          "variableName" : "results",
          "variableType" : "java.util.Map<String,ResultSet>",
          "documentation" : "",
          "simpleType" : "Map<String,ResultSet>",
          "variableSetterType" : "java.util.Map<String,ResultSet>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@param results A map of all the rows on the screen keyed by block name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,ResultSet>",
          "variableName" : "results",
          "variableType" : "java.util.Map<String,ResultSet>",
          "documentation" : "<p>A map of all the rows on the screen keyed by block name.</p>",
          "simpleType" : "Map<String,ResultSet>",
          "variableSetterType" : "java.util.Map<String,ResultSet>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the query has been loaded. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Results" : {
          "c2jName" : "results",
          "c2jShape" : "ResultSetMap",
          "deprecated" : false,
          "documentation" : "<p>A map of all the rows on the screen keyed by block name.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@param results A map of all the rows on the screen keyed by block name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withResults",
          "getterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@return A map of all the rows on the screen keyed by block name.*/",
          "getterMethodName" : "getResults",
          "getterModel" : {
            "returnType" : "java.util.Map<String,ResultSet>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "results",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "results",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "ResultSet",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "ResultSet",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResultSet",
                "variableName" : "value",
                "variableType" : "ResultSet",
                "documentation" : "",
                "simpleType" : "ResultSet",
                "variableSetterType" : "ResultSet"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResultSet",
                "variableName" : "value",
                "variableType" : "ResultSet",
                "documentation" : "",
                "simpleType" : "ResultSet",
                "variableSetterType" : "ResultSet"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "ResultSet",
            "entryType" : "Map.Entry<String, ResultSet>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,ResultSet>",
            "templateType" : "java.util.Map<String,ResultSet>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Results",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@param results A map of all the rows on the screen keyed by block name.*/",
          "setterMethodName" : "setResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,ResultSet>",
            "variableName" : "results",
            "variableType" : "java.util.Map<String,ResultSet>",
            "documentation" : "",
            "simpleType" : "Map<String,ResultSet>",
            "variableSetterType" : "java.util.Map<String,ResultSet>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A map of all the rows on the screen keyed by block name.</p>\n@param results A map of all the rows on the screen keyed by block name.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,ResultSet>",
            "variableName" : "results",
            "variableType" : "java.util.Map<String,ResultSet>",
            "documentation" : "<p>A map of all the rows on the screen keyed by block name.</p>",
            "simpleType" : "Map<String,ResultSet>",
            "variableSetterType" : "java.util.Map<String,ResultSet>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this workbook is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "results", "workbookCursor" ],
      "shapeName" : "GetScreenDataResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "GetScreenDataResult",
        "variableName" : "getScreenDataResult",
        "variableType" : "GetScreenDataResult",
        "documentation" : null,
        "simpleType" : "GetScreenDataResult",
        "variableSetterType" : "GetScreenDataResult"
      },
      "wrapper" : false
    },
    "ImportDataCharacterEncoding" : {
      "c2jName" : "ImportDataCharacterEncoding",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "UTF8",
        "value" : "UTF-8"
      }, {
        "name" : "USASCII",
        "value" : "US-ASCII"
      }, {
        "name" : "ISO88591",
        "value" : "ISO-8859-1"
      }, {
        "name" : "UTF16BE",
        "value" : "UTF-16BE"
      }, {
        "name" : "UTF16LE",
        "value" : "UTF-16LE"
      }, {
        "name" : "UTF16",
        "value" : "UTF-16"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.enum.ImportDataCharacterEncoding",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImportDataCharacterEncoding",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportDataCharacterEncoding",
        "variableName" : "importDataCharacterEncoding",
        "variableType" : "ImportDataCharacterEncoding",
        "documentation" : null,
        "simpleType" : "ImportDataCharacterEncoding",
        "variableSetterType" : "ImportDataCharacterEncoding"
      },
      "wrapper" : false
    },
    "ImportDataSource" : {
      "c2jName" : "ImportDataSource",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that has details about the source of the data that was submitted for import.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ImportDataSource",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "dataSourceConfig",
        "c2jShape" : "ImportDataSourceConfig",
        "deprecated" : false,
        "documentation" : "<p>The configuration parameters for the data source of the import</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@param dataSourceConfig The configuration parameters for the data source of the import\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDataSourceConfig",
        "getterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@return The configuration parameters for the data source of the import*/",
        "getterMethodName" : "getDataSourceConfig",
        "getterModel" : {
          "returnType" : "ImportDataSourceConfig",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataSourceConfig",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataSourceConfig",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DataSourceConfig",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@param dataSourceConfig The configuration parameters for the data source of the import*/",
        "setterMethodName" : "setDataSourceConfig",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportDataSourceConfig",
          "variableName" : "dataSourceConfig",
          "variableType" : "ImportDataSourceConfig",
          "documentation" : "",
          "simpleType" : "ImportDataSourceConfig",
          "variableSetterType" : "ImportDataSourceConfig"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@param dataSourceConfig The configuration parameters for the data source of the import\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportDataSourceConfig",
          "variableName" : "dataSourceConfig",
          "variableType" : "ImportDataSourceConfig",
          "documentation" : "<p>The configuration parameters for the data source of the import</p>",
          "simpleType" : "ImportDataSourceConfig",
          "variableSetterType" : "ImportDataSourceConfig"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DataSourceConfig" : {
          "c2jName" : "dataSourceConfig",
          "c2jShape" : "ImportDataSourceConfig",
          "deprecated" : false,
          "documentation" : "<p>The configuration parameters for the data source of the import</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@param dataSourceConfig The configuration parameters for the data source of the import\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDataSourceConfig",
          "getterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@return The configuration parameters for the data source of the import*/",
          "getterMethodName" : "getDataSourceConfig",
          "getterModel" : {
            "returnType" : "ImportDataSourceConfig",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataSourceConfig",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataSourceConfig",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DataSourceConfig",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@param dataSourceConfig The configuration parameters for the data source of the import*/",
          "setterMethodName" : "setDataSourceConfig",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportDataSourceConfig",
            "variableName" : "dataSourceConfig",
            "variableType" : "ImportDataSourceConfig",
            "documentation" : "",
            "simpleType" : "ImportDataSourceConfig",
            "variableSetterType" : "ImportDataSourceConfig"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The configuration parameters for the data source of the import</p>\n@param dataSourceConfig The configuration parameters for the data source of the import\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportDataSourceConfig",
            "variableName" : "dataSourceConfig",
            "variableType" : "ImportDataSourceConfig",
            "documentation" : "<p>The configuration parameters for the data source of the import</p>",
            "simpleType" : "ImportDataSourceConfig",
            "variableSetterType" : "ImportDataSourceConfig"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "dataSourceConfig" ],
      "shapeName" : "ImportDataSource",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportDataSource",
        "variableName" : "importDataSource",
        "variableType" : "ImportDataSource",
        "documentation" : null,
        "simpleType" : "ImportDataSource",
        "variableSetterType" : "ImportDataSource"
      },
      "wrapper" : false
    },
    "ImportDataSourceConfig" : {
      "c2jName" : "ImportDataSourceConfig",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> An object that contains the configuration parameters for the data source of an import request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ImportDataSourceConfig",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "dataSourceUrl",
        "c2jShape" : "SecureURL",
        "deprecated" : false,
        "documentation" : "<p> The URL from which source data will be downloaded for the import request. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@param dataSourceUrl The URL from which source data will be downloaded for the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDataSourceUrl",
        "getterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@return The URL from which source data will be downloaded for the import request.*/",
        "getterMethodName" : "getDataSourceUrl",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataSourceUrl",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataSourceUrl",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DataSourceUrl",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@param dataSourceUrl The URL from which source data will be downloaded for the import request.*/",
        "setterMethodName" : "setDataSourceUrl",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "dataSourceUrl",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@param dataSourceUrl The URL from which source data will be downloaded for the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "dataSourceUrl",
          "variableType" : "String",
          "documentation" : "<p> The URL from which source data will be downloaded for the import request. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DataSourceUrl" : {
          "c2jName" : "dataSourceUrl",
          "c2jShape" : "SecureURL",
          "deprecated" : false,
          "documentation" : "<p> The URL from which source data will be downloaded for the import request. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@param dataSourceUrl The URL from which source data will be downloaded for the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDataSourceUrl",
          "getterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@return The URL from which source data will be downloaded for the import request.*/",
          "getterMethodName" : "getDataSourceUrl",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataSourceUrl",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataSourceUrl",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DataSourceUrl",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@param dataSourceUrl The URL from which source data will be downloaded for the import request.*/",
          "setterMethodName" : "setDataSourceUrl",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "dataSourceUrl",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The URL from which source data will be downloaded for the import request. </p>\n@param dataSourceUrl The URL from which source data will be downloaded for the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "dataSourceUrl",
            "variableType" : "String",
            "documentation" : "<p> The URL from which source data will be downloaded for the import request. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImportDataSourceConfig",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportDataSourceConfig",
        "variableName" : "importDataSourceConfig",
        "variableType" : "ImportDataSourceConfig",
        "documentation" : null,
        "simpleType" : "ImportDataSourceConfig",
        "variableSetterType" : "ImportDataSourceConfig"
      },
      "wrapper" : false
    },
    "ImportJobSubmitter" : {
      "c2jName" : "ImportJobSubmitter",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that contains the attributes of the submitter of the import job.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ImportJobSubmitter",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "email",
        "c2jShape" : "Email",
        "deprecated" : false,
        "documentation" : "<p>The email id of the submitter of the import job, if available.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@param email The email id of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withEmail",
        "getterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@return The email id of the submitter of the import job, if available.*/",
        "getterMethodName" : "getEmail",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "email",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "email",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Email",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@param email The email id of the submitter of the import job, if available.*/",
        "setterMethodName" : "setEmail",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@param email The email id of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "email",
          "variableType" : "String",
          "documentation" : "<p>The email id of the submitter of the import job, if available.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "userArn",
        "c2jShape" : "AwsUserArn",
        "deprecated" : false,
        "documentation" : "<p>The AWS user ARN of the submitter of the import job, if available.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@param userArn The AWS user ARN of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withUserArn",
        "getterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@return The AWS user ARN of the submitter of the import job, if available.*/",
        "getterMethodName" : "getUserArn",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "userArn",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "userArn",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UserArn",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@param userArn The AWS user ARN of the submitter of the import job, if available.*/",
        "setterMethodName" : "setUserArn",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userArn",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@param userArn The AWS user ARN of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "userArn",
          "variableType" : "String",
          "documentation" : "<p>The AWS user ARN of the submitter of the import job, if available.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Email" : {
          "c2jName" : "email",
          "c2jShape" : "Email",
          "deprecated" : false,
          "documentation" : "<p>The email id of the submitter of the import job, if available.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@param email The email id of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withEmail",
          "getterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@return The email id of the submitter of the import job, if available.*/",
          "getterMethodName" : "getEmail",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "email",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "email",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Email",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@param email The email id of the submitter of the import job, if available.*/",
          "setterMethodName" : "setEmail",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The email id of the submitter of the import job, if available.</p>\n@param email The email id of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "email",
            "variableType" : "String",
            "documentation" : "<p>The email id of the submitter of the import job, if available.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "UserArn" : {
          "c2jName" : "userArn",
          "c2jShape" : "AwsUserArn",
          "deprecated" : false,
          "documentation" : "<p>The AWS user ARN of the submitter of the import job, if available.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@param userArn The AWS user ARN of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withUserArn",
          "getterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@return The AWS user ARN of the submitter of the import job, if available.*/",
          "getterMethodName" : "getUserArn",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "userArn",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "userArn",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UserArn",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@param userArn The AWS user ARN of the submitter of the import job, if available.*/",
          "setterMethodName" : "setUserArn",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userArn",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The AWS user ARN of the submitter of the import job, if available.</p>\n@param userArn The AWS user ARN of the submitter of the import job, if available.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "userArn",
            "variableType" : "String",
            "documentation" : "<p>The AWS user ARN of the submitter of the import job, if available.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImportJobSubmitter",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportJobSubmitter",
        "variableName" : "importJobSubmitter",
        "variableType" : "ImportJobSubmitter",
        "documentation" : null,
        "simpleType" : "ImportJobSubmitter",
        "variableSetterType" : "ImportJobSubmitter"
      },
      "wrapper" : false
    },
    "ImportOptions" : {
      "c2jName" : "ImportOptions",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that contains the options specified by the sumitter of the import request.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ImportOptions",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "destinationOptions",
        "c2jShape" : "DestinationOptions",
        "deprecated" : false,
        "documentation" : "<p>Options relating to the destination of the import request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@param destinationOptions Options relating to the destination of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationOptions",
        "getterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@return Options relating to the destination of the import request.*/",
        "getterMethodName" : "getDestinationOptions",
        "getterModel" : {
          "returnType" : "DestinationOptions",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "destinationOptions",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "destinationOptions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DestinationOptions",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@param destinationOptions Options relating to the destination of the import request.*/",
        "setterMethodName" : "setDestinationOptions",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DestinationOptions",
          "variableName" : "destinationOptions",
          "variableType" : "DestinationOptions",
          "documentation" : "",
          "simpleType" : "DestinationOptions",
          "variableSetterType" : "DestinationOptions"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@param destinationOptions Options relating to the destination of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DestinationOptions",
          "variableName" : "destinationOptions",
          "variableType" : "DestinationOptions",
          "documentation" : "<p>Options relating to the destination of the import request.</p>",
          "simpleType" : "DestinationOptions",
          "variableSetterType" : "DestinationOptions"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "delimitedTextOptions",
        "c2jShape" : "DelimitedTextImportOptions",
        "deprecated" : false,
        "documentation" : "<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@param delimitedTextOptions Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDelimitedTextOptions",
        "getterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@return Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.*/",
        "getterMethodName" : "getDelimitedTextOptions",
        "getterModel" : {
          "returnType" : "DelimitedTextImportOptions",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "delimitedTextOptions",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "delimitedTextOptions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DelimitedTextOptions",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@param delimitedTextOptions Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.*/",
        "setterMethodName" : "setDelimitedTextOptions",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DelimitedTextImportOptions",
          "variableName" : "delimitedTextOptions",
          "variableType" : "DelimitedTextImportOptions",
          "documentation" : "",
          "simpleType" : "DelimitedTextImportOptions",
          "variableSetterType" : "DelimitedTextImportOptions"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@param delimitedTextOptions Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "DelimitedTextImportOptions",
          "variableName" : "delimitedTextOptions",
          "variableType" : "DelimitedTextImportOptions",
          "documentation" : "<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>",
          "simpleType" : "DelimitedTextImportOptions",
          "variableSetterType" : "DelimitedTextImportOptions"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DelimitedTextOptions" : {
          "c2jName" : "delimitedTextOptions",
          "c2jShape" : "DelimitedTextImportOptions",
          "deprecated" : false,
          "documentation" : "<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@param delimitedTextOptions Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDelimitedTextOptions",
          "getterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@return Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.*/",
          "getterMethodName" : "getDelimitedTextOptions",
          "getterModel" : {
            "returnType" : "DelimitedTextImportOptions",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "delimitedTextOptions",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "delimitedTextOptions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DelimitedTextOptions",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@param delimitedTextOptions Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.*/",
          "setterMethodName" : "setDelimitedTextOptions",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DelimitedTextImportOptions",
            "variableName" : "delimitedTextOptions",
            "variableType" : "DelimitedTextImportOptions",
            "documentation" : "",
            "simpleType" : "DelimitedTextImportOptions",
            "variableSetterType" : "DelimitedTextImportOptions"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>\n@param delimitedTextOptions Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DelimitedTextImportOptions",
            "variableName" : "delimitedTextOptions",
            "variableType" : "DelimitedTextImportOptions",
            "documentation" : "<p>Options relating to parsing delimited text. Required if dataFormat is DELIMITED_TEXT.</p>",
            "simpleType" : "DelimitedTextImportOptions",
            "variableSetterType" : "DelimitedTextImportOptions"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationOptions" : {
          "c2jName" : "destinationOptions",
          "c2jShape" : "DestinationOptions",
          "deprecated" : false,
          "documentation" : "<p>Options relating to the destination of the import request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@param destinationOptions Options relating to the destination of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationOptions",
          "getterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@return Options relating to the destination of the import request.*/",
          "getterMethodName" : "getDestinationOptions",
          "getterModel" : {
            "returnType" : "DestinationOptions",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "destinationOptions",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "destinationOptions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DestinationOptions",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@param destinationOptions Options relating to the destination of the import request.*/",
          "setterMethodName" : "setDestinationOptions",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DestinationOptions",
            "variableName" : "destinationOptions",
            "variableType" : "DestinationOptions",
            "documentation" : "",
            "simpleType" : "DestinationOptions",
            "variableSetterType" : "DestinationOptions"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Options relating to the destination of the import request.</p>\n@param destinationOptions Options relating to the destination of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "DestinationOptions",
            "variableName" : "destinationOptions",
            "variableType" : "DestinationOptions",
            "documentation" : "<p>Options relating to the destination of the import request.</p>",
            "simpleType" : "DestinationOptions",
            "variableSetterType" : "DestinationOptions"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImportOptions",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportOptions",
        "variableName" : "importOptions",
        "variableType" : "ImportOptions",
        "documentation" : null,
        "simpleType" : "ImportOptions",
        "variableSetterType" : "ImportOptions"
      },
      "wrapper" : false
    },
    "ImportSourceDataFormat" : {
      "c2jName" : "ImportSourceDataFormat",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "DELIMITED_TEXT",
        "value" : "DELIMITED_TEXT"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.enum.ImportSourceDataFormat",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ImportSourceDataFormat",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ImportSourceDataFormat",
        "variableName" : "importSourceDataFormat",
        "variableType" : "ImportSourceDataFormat",
        "documentation" : null,
        "simpleType" : "ImportSourceDataFormat",
        "variableSetterType" : "ImportSourceDataFormat"
      },
      "wrapper" : false
    },
    "InternalServerException" : {
      "c2jName" : "InternalServerException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>There were unexpected errors from the server.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "InternalServerException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.InternalServerException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "InternalServerException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InternalServerException",
        "variableName" : "internalServerException",
        "variableType" : "InternalServerException",
        "documentation" : null,
        "simpleType" : "InternalServerException",
        "variableSetterType" : "InternalServerException"
      },
      "wrapper" : false
    },
    "InvokeScreenAutomationRequest" : {
      "c2jName" : "InvokeScreenAutomationRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.InvokeScreenAutomationRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "InvokeScreenAutomation",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/apps/{appId}/screens/{screenId}/automations/{automationId}",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook that contains the screen automation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@param workbookId The ID of the workbook that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@return The ID of the workbook that contains the screen automation.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@param workbookId The ID of the workbook that contains the screen automation.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@param workbookId The ID of the workbook that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook that contains the screen automation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "appId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the app that contains the screen automation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@param appId The ID of the app that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withAppId",
        "getterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@return The ID of the app that contains the screen automation.*/",
        "getterMethodName" : "getAppId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "appId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "appId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "AppId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@param appId The ID of the app that contains the screen automation.*/",
        "setterMethodName" : "setAppId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "appId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@param appId The ID of the app that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "appId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the app that contains the screen automation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "screenId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the screen that contains the screen automation.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@param screenId The ID of the screen that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withScreenId",
        "getterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@return The ID of the screen that contains the screen automation.*/",
        "getterMethodName" : "getScreenId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "screenId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "screenId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ScreenId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@param screenId The ID of the screen that contains the screen automation.*/",
        "setterMethodName" : "setScreenId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "screenId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@param screenId The ID of the screen that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "screenId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the screen that contains the screen automation.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "screenAutomationId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the automation action to be performed.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@param screenAutomationId The ID of the automation action to be performed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withScreenAutomationId",
        "getterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@return The ID of the automation action to be performed.*/",
        "getterMethodName" : "getScreenAutomationId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "automationId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "automationId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ScreenAutomationId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@param screenAutomationId The ID of the automation action to be performed.*/",
        "setterMethodName" : "setScreenAutomationId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "screenAutomationId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@param screenAutomationId The ID of the automation action to be performed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "screenAutomationId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the automation action to be performed.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "variables",
        "c2jShape" : "VariableValueMap",
        "deprecated" : false,
        "documentation" : "<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@param variables Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withVariables",
        "getterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@return Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.*/",
        "getterMethodName" : "getVariables",
        "getterModel" : {
          "returnType" : "java.util.Map<String,VariableValue>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "variables",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "variables",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "VariableValue",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "VariableValue",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : true,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "VariableValue",
              "variableName" : "value",
              "variableType" : "VariableValue",
              "documentation" : "",
              "simpleType" : "VariableValue",
              "variableSetterType" : "VariableValue"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "VariableValue",
              "variableName" : "value",
              "variableType" : "VariableValue",
              "documentation" : "",
              "simpleType" : "VariableValue",
              "variableSetterType" : "VariableValue"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "VariableValue",
          "entryType" : "Map.Entry<String, VariableValue>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,VariableValue>",
          "templateType" : "java.util.Map<String,VariableValue>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "Variables",
        "sensitive" : true,
        "setterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@param variables Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.*/",
        "setterMethodName" : "setVariables",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,VariableValue>",
          "variableName" : "variables",
          "variableType" : "java.util.Map<String,VariableValue>",
          "documentation" : "",
          "simpleType" : "Map<String,VariableValue>",
          "variableSetterType" : "java.util.Map<String,VariableValue>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@param variables Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,VariableValue>",
          "variableName" : "variables",
          "variableType" : "java.util.Map<String,VariableValue>",
          "documentation" : "<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>",
          "simpleType" : "Map<String,VariableValue>",
          "variableSetterType" : "java.util.Map<String,VariableValue>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowId",
        "c2jShape" : "RowId",
        "deprecated" : false,
        "documentation" : "<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@param rowId The row ID for the automation if the automation is defined inside a block with source or list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowId",
        "getterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@return The row ID for the automation if the automation is defined inside a block with source or list.*/",
        "getterMethodName" : "getRowId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RowId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@param rowId The row ID for the automation if the automation is defined inside a block with source or list.*/",
        "setterMethodName" : "setRowId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@param rowId The row ID for the automation if the automation is defined inside a block with source or list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "AppId" : {
          "c2jName" : "appId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the app that contains the screen automation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@param appId The ID of the app that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withAppId",
          "getterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@return The ID of the app that contains the screen automation.*/",
          "getterMethodName" : "getAppId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "appId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "appId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "AppId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@param appId The ID of the app that contains the screen automation.*/",
          "setterMethodName" : "setAppId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "appId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the app that contains the screen automation.</p>\n@param appId The ID of the app that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "appId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the app that contains the screen automation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p> The request token for performing the automation action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will return the response of the previous call rather than performing the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowId" : {
          "c2jName" : "rowId",
          "c2jShape" : "RowId",
          "deprecated" : false,
          "documentation" : "<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@param rowId The row ID for the automation if the automation is defined inside a block with source or list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowId",
          "getterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@return The row ID for the automation if the automation is defined inside a block with source or list.*/",
          "getterMethodName" : "getRowId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RowId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@param rowId The row ID for the automation if the automation is defined inside a block with source or list.*/",
          "setterMethodName" : "setRowId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>\n@param rowId The row ID for the automation if the automation is defined inside a block with source or list.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "<p> The row ID for the automation if the automation is defined inside a block with source or list. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ScreenAutomationId" : {
          "c2jName" : "screenAutomationId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the automation action to be performed.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@param screenAutomationId The ID of the automation action to be performed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withScreenAutomationId",
          "getterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@return The ID of the automation action to be performed.*/",
          "getterMethodName" : "getScreenAutomationId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "automationId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "automationId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ScreenAutomationId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@param screenAutomationId The ID of the automation action to be performed.*/",
          "setterMethodName" : "setScreenAutomationId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "screenAutomationId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the automation action to be performed.</p>\n@param screenAutomationId The ID of the automation action to be performed.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "screenAutomationId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the automation action to be performed.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ScreenId" : {
          "c2jName" : "screenId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the screen that contains the screen automation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@param screenId The ID of the screen that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withScreenId",
          "getterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@return The ID of the screen that contains the screen automation.*/",
          "getterMethodName" : "getScreenId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "screenId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "screenId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ScreenId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@param screenId The ID of the screen that contains the screen automation.*/",
          "setterMethodName" : "setScreenId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "screenId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the screen that contains the screen automation.</p>\n@param screenId The ID of the screen that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "screenId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the screen that contains the screen automation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Variables" : {
          "c2jName" : "variables",
          "c2jShape" : "VariableValueMap",
          "deprecated" : false,
          "documentation" : "<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@param variables Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withVariables",
          "getterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@return Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.*/",
          "getterMethodName" : "getVariables",
          "getterModel" : {
            "returnType" : "java.util.Map<String,VariableValue>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "variables",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "variables",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "VariableValue",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "VariableValue",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : true,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "VariableValue",
                "variableName" : "value",
                "variableType" : "VariableValue",
                "documentation" : "",
                "simpleType" : "VariableValue",
                "variableSetterType" : "VariableValue"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "VariableValue",
                "variableName" : "value",
                "variableType" : "VariableValue",
                "documentation" : "",
                "simpleType" : "VariableValue",
                "variableSetterType" : "VariableValue"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "VariableValue",
            "entryType" : "Map.Entry<String, VariableValue>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,VariableValue>",
            "templateType" : "java.util.Map<String,VariableValue>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "Variables",
          "sensitive" : true,
          "setterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@param variables Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.*/",
          "setterMethodName" : "setVariables",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,VariableValue>",
            "variableName" : "variables",
            "variableType" : "java.util.Map<String,VariableValue>",
            "documentation" : "",
            "simpleType" : "Map<String,VariableValue>",
            "variableSetterType" : "java.util.Map<String,VariableValue>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>\n@param variables Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,VariableValue>",
            "variableName" : "variables",
            "variableType" : "java.util.Map<String,VariableValue>",
            "documentation" : "<p> Variables are specified as a map where the key is the name of the variable as defined on the screen. The value is an object which currently has only one property, rawValue, which holds the value of the variable to be passed to the screen. Any variables defined in a screen are required to be passed in the call. </p>",
            "simpleType" : "Map<String,VariableValue>",
            "variableSetterType" : "java.util.Map<String,VariableValue>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook that contains the screen automation.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@param workbookId The ID of the workbook that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@return The ID of the workbook that contains the screen automation.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@param workbookId The ID of the workbook that contains the screen automation.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the screen automation.</p>\n@param workbookId The ID of the workbook that contains the screen automation.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook that contains the screen automation.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "appId", "screenId", "screenAutomationId" ],
      "shapeName" : "InvokeScreenAutomationRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvokeScreenAutomationRequest",
        "variableName" : "invokeScreenAutomationRequest",
        "variableType" : "InvokeScreenAutomationRequest",
        "documentation" : null,
        "simpleType" : "InvokeScreenAutomationRequest",
        "variableSetterType" : "InvokeScreenAutomationRequest"
      },
      "wrapper" : false
    },
    "InvokeScreenAutomationResult" : {
      "c2jName" : "InvokeScreenAutomationResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.InvokeScreenAutomationResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p>The updated workbook cursor after performing the automation action.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@param workbookCursor The updated workbook cursor after performing the automation action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@return The updated workbook cursor after performing the automation action.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@param workbookCursor The updated workbook cursor after performing the automation action.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@param workbookCursor The updated workbook cursor after performing the automation action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p>The updated workbook cursor after performing the automation action.</p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p>The updated workbook cursor after performing the automation action.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@param workbookCursor The updated workbook cursor after performing the automation action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@return The updated workbook cursor after performing the automation action.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@param workbookCursor The updated workbook cursor after performing the automation action.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The updated workbook cursor after performing the automation action.</p>\n@param workbookCursor The updated workbook cursor after performing the automation action.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p>The updated workbook cursor after performing the automation action.</p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookCursor" ],
      "shapeName" : "InvokeScreenAutomationResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "InvokeScreenAutomationResult",
        "variableName" : "invokeScreenAutomationResult",
        "variableType" : "InvokeScreenAutomationResult",
        "documentation" : null,
        "simpleType" : "InvokeScreenAutomationResult",
        "variableSetterType" : "InvokeScreenAutomationResult"
      },
      "wrapper" : false
    },
    "ListTableColumnsRequest" : {
      "c2jName" : "ListTableColumnsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.ListTableColumnsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTableColumns",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/columns",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "nextToken",
          "queryString" : true,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "nextToken",
            "queryString" : true,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table whose columns are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook that contains the table whose columns are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId" ],
      "shapeName" : "ListTableColumnsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTableColumnsRequest",
        "variableName" : "listTableColumnsRequest",
        "variableType" : "ListTableColumnsRequest",
        "documentation" : null,
        "simpleType" : "ListTableColumnsRequest",
        "variableSetterType" : "ListTableColumnsRequest"
      },
      "wrapper" : false
    },
    "ListTableColumnsResult" : {
      "c2jName" : "ListTableColumnsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.ListTableColumnsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tableColumns",
        "c2jShape" : "TableColumns",
        "deprecated" : false,
        "documentation" : "<p> The list of columns in the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of columns in the table. </p>\n@param tableColumns The list of columns in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableColumns",
        "getterDocumentation" : "/**<p> The list of columns in the table. </p>\n@return The list of columns in the table.*/",
        "getterMethodName" : "getTableColumns",
        "getterModel" : {
          "returnType" : "java.util.List<TableColumn>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableColumns",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableColumns",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TableColumn",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TableColumn",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TableColumn",
              "variableName" : "member",
              "variableType" : "TableColumn",
              "documentation" : "",
              "simpleType" : "TableColumn",
              "variableSetterType" : "TableColumn"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TableColumn",
              "variableName" : "member",
              "variableType" : "TableColumn",
              "documentation" : "",
              "simpleType" : "TableColumn",
              "variableSetterType" : "TableColumn"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TableColumn",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TableColumn",
          "templateImplType" : "java.util.ArrayList<TableColumn>",
          "templateType" : "java.util.List<TableColumn>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "TableColumns",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of columns in the table. </p>\n@param tableColumns The list of columns in the table.*/",
        "setterMethodName" : "setTableColumns",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TableColumn>",
          "variableName" : "tableColumns",
          "variableType" : "java.util.List<TableColumn>",
          "documentation" : "",
          "simpleType" : "List<TableColumn>",
          "variableSetterType" : "java.util.Collection<TableColumn>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of columns in the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTableColumns(java.util.Collection)} or {@link #withTableColumns(java.util.Collection)} if you want to override the existing values.</p>\n@param tableColumns The list of columns in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TableColumn>",
          "variableName" : "tableColumns",
          "variableType" : "java.util.List<TableColumn>",
          "documentation" : "<p> The list of columns in the table. </p>",
          "simpleType" : "List<TableColumn>",
          "variableSetterType" : "java.util.Collection<TableColumn>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableColumns" : {
          "c2jName" : "tableColumns",
          "c2jShape" : "TableColumns",
          "deprecated" : false,
          "documentation" : "<p> The list of columns in the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of columns in the table. </p>\n@param tableColumns The list of columns in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableColumns",
          "getterDocumentation" : "/**<p> The list of columns in the table. </p>\n@return The list of columns in the table.*/",
          "getterMethodName" : "getTableColumns",
          "getterModel" : {
            "returnType" : "java.util.List<TableColumn>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableColumns",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableColumns",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TableColumn",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TableColumn",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TableColumn",
                "variableName" : "member",
                "variableType" : "TableColumn",
                "documentation" : "",
                "simpleType" : "TableColumn",
                "variableSetterType" : "TableColumn"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TableColumn",
                "variableName" : "member",
                "variableType" : "TableColumn",
                "documentation" : "",
                "simpleType" : "TableColumn",
                "variableSetterType" : "TableColumn"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TableColumn",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TableColumn",
            "templateImplType" : "java.util.ArrayList<TableColumn>",
            "templateType" : "java.util.List<TableColumn>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "TableColumns",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of columns in the table. </p>\n@param tableColumns The list of columns in the table.*/",
          "setterMethodName" : "setTableColumns",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TableColumn>",
            "variableName" : "tableColumns",
            "variableType" : "java.util.List<TableColumn>",
            "documentation" : "",
            "simpleType" : "List<TableColumn>",
            "variableSetterType" : "java.util.Collection<TableColumn>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of columns in the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTableColumns(java.util.Collection)} or {@link #withTableColumns(java.util.Collection)} if you want to override the existing values.</p>\n@param tableColumns The list of columns in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TableColumn>",
            "variableName" : "tableColumns",
            "variableType" : "java.util.List<TableColumn>",
            "documentation" : "<p> The list of columns in the table. </p>",
            "simpleType" : "List<TableColumn>",
            "variableSetterType" : "java.util.Collection<TableColumn>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "tableColumns" ],
      "shapeName" : "ListTableColumnsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTableColumnsResult",
        "variableName" : "listTableColumnsResult",
        "variableType" : "ListTableColumnsResult",
        "documentation" : null,
        "simpleType" : "ListTableColumnsResult",
        "variableSetterType" : "ListTableColumnsResult"
      },
      "wrapper" : false
    },
    "ListTableRowsRequest" : {
      "c2jName" : "ListTableRowsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.ListTableRowsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTableRows",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/rows/list",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowIds",
        "c2jShape" : "RowIdList",
        "deprecated" : false,
        "documentation" : "<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n@param rowIds This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowIds",
        "getterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n@return This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.*/",
        "getterMethodName" : "getRowIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RowId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n@param rowIds This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.*/",
        "setterMethodName" : "setRowIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIds(java.util.Collection)} or {@link #withRowIds(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIds This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@return The maximum number of rows to return in each page of the results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@return The maximum number of rows to return in each page of the results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowIds" : {
          "c2jName" : "rowIds",
          "c2jShape" : "RowIdList",
          "deprecated" : false,
          "documentation" : "<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n@param rowIds This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowIds",
          "getterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n@return This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.*/",
          "getterMethodName" : "getRowIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RowId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n@param rowIds This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.*/",
          "setterMethodName" : "setRowIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIds(java.util.Collection)} or {@link #withRowIds(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIds This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p> This parameter is optional. If one or more row ids are specified in this list, then only the specified row ids are returned in the result. If no row ids are specified here, then all the rows in the table are returned. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table whose rows are being retrieved.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook that contains the table whose rows are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId" ],
      "shapeName" : "ListTableRowsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTableRowsRequest",
        "variableName" : "listTableRowsRequest",
        "variableType" : "ListTableRowsRequest",
        "documentation" : null,
        "simpleType" : "ListTableRowsRequest",
        "variableSetterType" : "ListTableRowsRequest"
      },
      "wrapper" : false
    },
    "ListTableRowsResult" : {
      "c2jName" : "ListTableRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.ListTableRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "columnIds",
        "c2jShape" : "ResourceIds",
        "deprecated" : false,
        "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withColumnIds",
        "getterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@return The list of columns in the table whose row data is returned in the result.*/",
        "getterMethodName" : "getColumnIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "columnIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "columnIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ColumnIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.*/",
        "setterMethodName" : "setColumnIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "columnIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setColumnIds(java.util.Collection)} or {@link #withColumnIds(java.util.Collection)} if you want to override the existing values.</p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "columnIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rows",
        "c2jShape" : "TableRows",
        "deprecated" : false,
        "documentation" : "<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n@param rows The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRows",
        "getterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n@return The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.*/",
        "getterMethodName" : "getRows",
        "getterModel" : {
          "returnType" : "java.util.List<TableRow>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rows",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rows",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TableRow",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TableRow",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TableRow",
              "variableName" : "member",
              "variableType" : "TableRow",
              "documentation" : "",
              "simpleType" : "TableRow",
              "variableSetterType" : "TableRow"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TableRow",
              "variableName" : "member",
              "variableType" : "TableRow",
              "documentation" : "",
              "simpleType" : "TableRow",
              "variableSetterType" : "TableRow"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TableRow",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TableRow",
          "templateImplType" : "java.util.ArrayList<TableRow>",
          "templateType" : "java.util.List<TableRow>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Rows",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n@param rows The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.*/",
        "setterMethodName" : "setRows",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TableRow>",
          "variableName" : "rows",
          "variableType" : "java.util.List<TableRow>",
          "documentation" : "",
          "simpleType" : "List<TableRow>",
          "variableSetterType" : "java.util.Collection<TableRow>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRows(java.util.Collection)} or {@link #withRows(java.util.Collection)} if you want to override the existing values.</p>\n@param rows The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TableRow>",
          "variableName" : "rows",
          "variableType" : "java.util.List<TableRow>",
          "documentation" : "<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>",
          "simpleType" : "List<TableRow>",
          "variableSetterType" : "java.util.Collection<TableRow>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rowIdsNotFound",
        "c2jShape" : "RowIdList",
        "deprecated" : false,
        "documentation" : "<p> The list of row ids included in the request that were not found in the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n@param rowIdsNotFound The list of row ids included in the request that were not found in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowIdsNotFound",
        "getterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n@return The list of row ids included in the request that were not found in the table.*/",
        "getterMethodName" : "getRowIdsNotFound",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowIdsNotFound",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowIdsNotFound",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RowId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowIdsNotFound",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n@param rowIdsNotFound The list of row ids included in the request that were not found in the table.*/",
        "setterMethodName" : "setRowIdsNotFound",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIdsNotFound",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIdsNotFound(java.util.Collection)} or {@link #withRowIdsNotFound(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIdsNotFound The list of row ids included in the request that were not found in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIdsNotFound",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p> The list of row ids included in the request that were not found in the table. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ColumnIds" : {
          "c2jName" : "columnIds",
          "c2jShape" : "ResourceIds",
          "deprecated" : false,
          "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withColumnIds",
          "getterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@return The list of columns in the table whose row data is returned in the result.*/",
          "getterMethodName" : "getColumnIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "columnIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "columnIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ColumnIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.*/",
          "setterMethodName" : "setColumnIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "columnIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setColumnIds(java.util.Collection)} or {@link #withColumnIds(java.util.Collection)} if you want to override the existing values.</p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "columnIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "RowIdsNotFound" : {
          "c2jName" : "rowIdsNotFound",
          "c2jShape" : "RowIdList",
          "deprecated" : false,
          "documentation" : "<p> The list of row ids included in the request that were not found in the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n@param rowIdsNotFound The list of row ids included in the request that were not found in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowIdsNotFound",
          "getterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n@return The list of row ids included in the request that were not found in the table.*/",
          "getterMethodName" : "getRowIdsNotFound",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowIdsNotFound",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowIdsNotFound",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RowId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowIdsNotFound",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n@param rowIdsNotFound The list of row ids included in the request that were not found in the table.*/",
          "setterMethodName" : "setRowIdsNotFound",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIdsNotFound",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of row ids included in the request that were not found in the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIdsNotFound(java.util.Collection)} or {@link #withRowIdsNotFound(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIdsNotFound The list of row ids included in the request that were not found in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIdsNotFound",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p> The list of row ids included in the request that were not found in the table. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "Rows" : {
          "c2jName" : "rows",
          "c2jShape" : "TableRows",
          "deprecated" : false,
          "documentation" : "<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n@param rows The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRows",
          "getterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n@return The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.*/",
          "getterMethodName" : "getRows",
          "getterModel" : {
            "returnType" : "java.util.List<TableRow>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rows",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rows",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TableRow",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TableRow",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TableRow",
                "variableName" : "member",
                "variableType" : "TableRow",
                "documentation" : "",
                "simpleType" : "TableRow",
                "variableSetterType" : "TableRow"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TableRow",
                "variableName" : "member",
                "variableType" : "TableRow",
                "documentation" : "",
                "simpleType" : "TableRow",
                "variableSetterType" : "TableRow"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TableRow",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TableRow",
            "templateImplType" : "java.util.ArrayList<TableRow>",
            "templateType" : "java.util.List<TableRow>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Rows",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n@param rows The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.*/",
          "setterMethodName" : "setRows",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TableRow>",
            "variableName" : "rows",
            "variableType" : "java.util.List<TableRow>",
            "documentation" : "",
            "simpleType" : "List<TableRow>",
            "variableSetterType" : "java.util.Collection<TableRow>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRows(java.util.Collection)} or {@link #withRows(java.util.Collection)} if you want to override the existing values.</p>\n@param rows The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TableRow>",
            "variableName" : "rows",
            "variableType" : "java.util.List<TableRow>",
            "documentation" : "<p> The list of rows in the table. Note that this result is paginated, so this list contains a maximum of 100 rows. </p>",
            "simpleType" : "List<TableRow>",
            "variableSetterType" : "java.util.Collection<TableRow>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "columnIds", "rows", "workbookCursor" ],
      "shapeName" : "ListTableRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTableRowsResult",
        "variableName" : "listTableRowsResult",
        "variableType" : "ListTableRowsResult",
        "documentation" : null,
        "simpleType" : "ListTableRowsResult",
        "variableSetterType" : "ListTableRowsResult"
      },
      "wrapper" : false
    },
    "ListTablesRequest" : {
      "c2jName" : "ListTablesRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.ListTablesRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "ListTables",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables",
        "target" : null,
        "verb" : "GET",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of tables to return in each page of the results.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@param maxResults The maximum number of tables to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@return The maximum number of tables to return in each page of the results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "maxResults",
          "queryString" : true,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@param maxResults The maximum number of tables to return in each page of the results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@param maxResults The maximum number of tables to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of tables to return in each page of the results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "querystring",
          "marshallLocation" : "QUERY_PARAM",
          "marshallLocationName" : "nextToken",
          "queryString" : true,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of tables to return in each page of the results.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@param maxResults The maximum number of tables to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@return The maximum number of tables to return in each page of the results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "maxResults",
            "queryString" : true,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@param maxResults The maximum number of tables to return in each page of the results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of tables to return in each page of the results.</p>\n@param maxResults The maximum number of tables to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of tables to return in each page of the results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "querystring",
            "marshallLocation" : "QUERY_PARAM",
            "marshallLocationName" : "nextToken",
            "queryString" : true,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook whose tables are being retrieved.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId" ],
      "shapeName" : "ListTablesRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTablesRequest",
        "variableName" : "listTablesRequest",
        "variableType" : "ListTablesRequest",
        "documentation" : null,
        "simpleType" : "ListTablesRequest",
        "variableSetterType" : "ListTablesRequest"
      },
      "wrapper" : false
    },
    "ListTablesResult" : {
      "c2jName" : "ListTablesResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.ListTablesResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tables",
        "c2jShape" : "Tables",
        "deprecated" : false,
        "documentation" : "<p> The list of tables in the workbook. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n@param tables The list of tables in the workbook.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTables",
        "getterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n@return The list of tables in the workbook.*/",
        "getterMethodName" : "getTables",
        "getterModel" : {
          "returnType" : "java.util.List<Table>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tables",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tables",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Table",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Table",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Table",
              "variableName" : "member",
              "variableType" : "Table",
              "documentation" : "",
              "simpleType" : "Table",
              "variableSetterType" : "Table"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Table",
              "variableName" : "member",
              "variableType" : "Table",
              "documentation" : "",
              "simpleType" : "Table",
              "variableSetterType" : "Table"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Table",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Table",
          "templateImplType" : "java.util.ArrayList<Table>",
          "templateType" : "java.util.List<Table>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Tables",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n@param tables The list of tables in the workbook.*/",
        "setterMethodName" : "setTables",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Table>",
          "variableName" : "tables",
          "variableType" : "java.util.List<Table>",
          "documentation" : "",
          "simpleType" : "List<Table>",
          "variableSetterType" : "java.util.Collection<Table>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTables(java.util.Collection)} or {@link #withTables(java.util.Collection)} if you want to override the existing values.</p>\n@param tables The list of tables in the workbook.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Table>",
          "variableName" : "tables",
          "variableType" : "java.util.List<Table>",
          "documentation" : "<p> The list of tables in the workbook. </p>",
          "simpleType" : "List<Table>",
          "variableSetterType" : "java.util.Collection<Table>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Tables" : {
          "c2jName" : "tables",
          "c2jShape" : "Tables",
          "deprecated" : false,
          "documentation" : "<p> The list of tables in the workbook. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n@param tables The list of tables in the workbook.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTables",
          "getterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n@return The list of tables in the workbook.*/",
          "getterMethodName" : "getTables",
          "getterModel" : {
            "returnType" : "java.util.List<Table>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tables",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tables",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Table",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Table",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Table",
                "variableName" : "member",
                "variableType" : "Table",
                "documentation" : "",
                "simpleType" : "Table",
                "variableSetterType" : "Table"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Table",
                "variableName" : "member",
                "variableType" : "Table",
                "documentation" : "",
                "simpleType" : "Table",
                "variableSetterType" : "Table"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Table",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Table",
            "templateImplType" : "java.util.ArrayList<Table>",
            "templateType" : "java.util.List<Table>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Tables",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n@param tables The list of tables in the workbook.*/",
          "setterMethodName" : "setTables",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Table>",
            "variableName" : "tables",
            "variableType" : "java.util.List<Table>",
            "documentation" : "",
            "simpleType" : "List<Table>",
            "variableSetterType" : "java.util.Collection<Table>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of tables in the workbook. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setTables(java.util.Collection)} or {@link #withTables(java.util.Collection)} if you want to override the existing values.</p>\n@param tables The list of tables in the workbook.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Table>",
            "variableName" : "tables",
            "variableType" : "java.util.List<Table>",
            "documentation" : "<p> The list of tables in the workbook. </p>",
            "simpleType" : "List<Table>",
            "variableSetterType" : "java.util.Collection<Table>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "tables" ],
      "shapeName" : "ListTablesResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ListTablesResult",
        "variableName" : "listTablesResult",
        "variableType" : "ListTablesResult",
        "documentation" : null,
        "simpleType" : "ListTablesResult",
        "variableSetterType" : "ListTablesResult"
      },
      "wrapper" : false
    },
    "QueryTableRowsRequest" : {
      "c2jName" : "QueryTableRowsRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.QueryTableRowsRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "QueryTableRows",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/rows/query",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filterFormula",
        "c2jShape" : "Filter",
        "deprecated" : false,
        "documentation" : "<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@param filterFormula An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilterFormula",
        "getterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@return An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.*/",
        "getterMethodName" : "getFilterFormula",
        "getterModel" : {
          "returnType" : "Filter",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filterFormula",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filterFormula",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "FilterFormula",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@param filterFormula An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.*/",
        "setterMethodName" : "setFilterFormula",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Filter",
          "variableName" : "filterFormula",
          "variableType" : "Filter",
          "documentation" : "",
          "simpleType" : "Filter",
          "variableSetterType" : "Filter"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@param filterFormula An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Filter",
          "variableName" : "filterFormula",
          "variableType" : "Filter",
          "documentation" : "<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>",
          "simpleType" : "Filter",
          "variableSetterType" : "Filter"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "maxResults",
        "c2jShape" : "MaxResults",
        "deprecated" : false,
        "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withMaxResults",
        "getterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@return The maximum number of rows to return in each page of the results.*/",
        "getterMethodName" : "getMaxResults",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "maxResults",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "maxResults",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "MaxResults",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.*/",
        "setterMethodName" : "setMaxResults",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "maxResults",
          "variableType" : "Integer",
          "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "FilterFormula" : {
          "c2jName" : "filterFormula",
          "c2jShape" : "Filter",
          "deprecated" : false,
          "documentation" : "<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@param filterFormula An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilterFormula",
          "getterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@return An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.*/",
          "getterMethodName" : "getFilterFormula",
          "getterModel" : {
            "returnType" : "Filter",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filterFormula",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filterFormula",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "FilterFormula",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@param filterFormula An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.*/",
          "setterMethodName" : "setFilterFormula",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Filter",
            "variableName" : "filterFormula",
            "variableType" : "Filter",
            "documentation" : "",
            "simpleType" : "Filter",
            "variableSetterType" : "Filter"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>\n@param filterFormula An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Filter",
            "variableName" : "filterFormula",
            "variableType" : "Filter",
            "documentation" : "<p>An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate.</p>",
            "simpleType" : "Filter",
            "variableSetterType" : "Filter"
          },
          "xmlNameSpaceUri" : null
        },
        "MaxResults" : {
          "c2jName" : "maxResults",
          "c2jShape" : "MaxResults",
          "deprecated" : false,
          "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withMaxResults",
          "getterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@return The maximum number of rows to return in each page of the results.*/",
          "getterMethodName" : "getMaxResults",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "maxResults",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "maxResults",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "MaxResults",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.*/",
          "setterMethodName" : "setMaxResults",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The maximum number of rows to return in each page of the results.</p>\n@param maxResults The maximum number of rows to return in each page of the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "maxResults",
            "variableType" : "Integer",
            "documentation" : "<p>The maximum number of rows to return in each page of the results.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@return This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>\n@param nextToken This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> This parameter is optional. If a nextToken is not specified, the API returns the first page of data. </p> <p> Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param tableId The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table whose rows are being queried.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook whose table rows are being queried.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "tableId", "filterFormula" ],
      "shapeName" : "QueryTableRowsRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "QueryTableRowsRequest",
        "variableName" : "queryTableRowsRequest",
        "variableType" : "QueryTableRowsRequest",
        "documentation" : null,
        "simpleType" : "QueryTableRowsRequest",
        "variableSetterType" : "QueryTableRowsRequest"
      },
      "wrapper" : false
    },
    "QueryTableRowsResult" : {
      "c2jName" : "QueryTableRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.QueryTableRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "columnIds",
        "c2jShape" : "ResourceIds",
        "deprecated" : false,
        "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withColumnIds",
        "getterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@return The list of columns in the table whose row data is returned in the result.*/",
        "getterMethodName" : "getColumnIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "columnIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "columnIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResourceId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "ColumnIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.*/",
        "setterMethodName" : "setColumnIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "columnIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setColumnIds(java.util.Collection)} or {@link #withColumnIds(java.util.Collection)} if you want to override the existing values.</p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "columnIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rows",
        "c2jShape" : "TableRows",
        "deprecated" : false,
        "documentation" : "<p> The list of rows in the table that match the query filter. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n@param rows The list of rows in the table that match the query filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRows",
        "getterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n@return The list of rows in the table that match the query filter.*/",
        "getterMethodName" : "getRows",
        "getterModel" : {
          "returnType" : "java.util.List<TableRow>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rows",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rows",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "TableRow",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "TableRow",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TableRow",
              "variableName" : "member",
              "variableType" : "TableRow",
              "documentation" : "",
              "simpleType" : "TableRow",
              "variableSetterType" : "TableRow"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "TableRow",
              "variableName" : "member",
              "variableType" : "TableRow",
              "documentation" : "",
              "simpleType" : "TableRow",
              "variableSetterType" : "TableRow"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "TableRow",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "TableRow",
          "templateImplType" : "java.util.ArrayList<TableRow>",
          "templateType" : "java.util.List<TableRow>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Rows",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n@param rows The list of rows in the table that match the query filter.*/",
        "setterMethodName" : "setRows",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TableRow>",
          "variableName" : "rows",
          "variableType" : "java.util.List<TableRow>",
          "documentation" : "",
          "simpleType" : "List<TableRow>",
          "variableSetterType" : "java.util.Collection<TableRow>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRows(java.util.Collection)} or {@link #withRows(java.util.Collection)} if you want to override the existing values.</p>\n@param rows The list of rows in the table that match the query filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<TableRow>",
          "variableName" : "rows",
          "variableType" : "java.util.List<TableRow>",
          "documentation" : "<p> The list of rows in the table that match the query filter. </p>",
          "simpleType" : "List<TableRow>",
          "variableSetterType" : "java.util.Collection<TableRow>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "nextToken",
        "c2jShape" : "PaginationToken",
        "deprecated" : false,
        "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withNextToken",
        "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "getterMethodName" : "getNextToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "nextToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "nextToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "NextToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
        "setterMethodName" : "setNextToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "nextToken",
          "variableType" : "String",
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "workbookCursor",
        "c2jShape" : "WorkbookCursor",
        "deprecated" : false,
        "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookCursor",
        "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "getterMethodName" : "getWorkbookCursor",
        "getterModel" : {
          "returnType" : "Long",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "workbookCursor",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookCursor",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Long",
        "marshallingType" : "LONG",
        "name" : "WorkbookCursor",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
        "setterMethodName" : "setWorkbookCursor",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Long",
          "variableName" : "workbookCursor",
          "variableType" : "Long",
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "simpleType" : "Long",
          "variableSetterType" : "Long"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ColumnIds" : {
          "c2jName" : "columnIds",
          "c2jShape" : "ResourceIds",
          "deprecated" : false,
          "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withColumnIds",
          "getterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@return The list of columns in the table whose row data is returned in the result.*/",
          "getterMethodName" : "getColumnIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "columnIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "columnIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResourceId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "ColumnIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n@param columnIds The list of columns in the table whose row data is returned in the result.*/",
          "setterMethodName" : "setColumnIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "columnIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of columns in the table whose row data is returned in the result. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setColumnIds(java.util.Collection)} or {@link #withColumnIds(java.util.Collection)} if you want to override the existing values.</p>\n@param columnIds The list of columns in the table whose row data is returned in the result.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "columnIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p> The list of columns in the table whose row data is returned in the result. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "NextToken" : {
          "c2jName" : "nextToken",
          "c2jShape" : "PaginationToken",
          "deprecated" : false,
          "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withNextToken",
          "getterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@return Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "getterMethodName" : "getNextToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "nextToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "nextToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "NextToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.*/",
          "setterMethodName" : "setNextToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>\n@param nextToken Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "nextToken",
            "variableType" : "String",
            "documentation" : "<p> Provides the pagination token to load the next page if there are more results matching the request. If a pagination token is not present in the response, it means that all data matching the request has been loaded. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "Rows" : {
          "c2jName" : "rows",
          "c2jShape" : "TableRows",
          "deprecated" : false,
          "documentation" : "<p> The list of rows in the table that match the query filter. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n@param rows The list of rows in the table that match the query filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRows",
          "getterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n@return The list of rows in the table that match the query filter.*/",
          "getterMethodName" : "getRows",
          "getterModel" : {
            "returnType" : "java.util.List<TableRow>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rows",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rows",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "TableRow",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "TableRow",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TableRow",
                "variableName" : "member",
                "variableType" : "TableRow",
                "documentation" : "",
                "simpleType" : "TableRow",
                "variableSetterType" : "TableRow"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "TableRow",
                "variableName" : "member",
                "variableType" : "TableRow",
                "documentation" : "",
                "simpleType" : "TableRow",
                "variableSetterType" : "TableRow"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "TableRow",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "TableRow",
            "templateImplType" : "java.util.ArrayList<TableRow>",
            "templateType" : "java.util.List<TableRow>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Rows",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n@param rows The list of rows in the table that match the query filter.*/",
          "setterMethodName" : "setRows",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TableRow>",
            "variableName" : "rows",
            "variableType" : "java.util.List<TableRow>",
            "documentation" : "",
            "simpleType" : "List<TableRow>",
            "variableSetterType" : "java.util.Collection<TableRow>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of rows in the table that match the query filter. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRows(java.util.Collection)} or {@link #withRows(java.util.Collection)} if you want to override the existing values.</p>\n@param rows The list of rows in the table that match the query filter.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<TableRow>",
            "variableName" : "rows",
            "variableType" : "java.util.List<TableRow>",
            "documentation" : "<p> The list of rows in the table that match the query filter. </p>",
            "simpleType" : "List<TableRow>",
            "variableSetterType" : "java.util.Collection<TableRow>"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookCursor" : {
          "c2jName" : "workbookCursor",
          "c2jShape" : "WorkbookCursor",
          "deprecated" : false,
          "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookCursor",
          "getterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@return Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "getterMethodName" : "getWorkbookCursor",
          "getterModel" : {
            "returnType" : "Long",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "workbookCursor",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookCursor",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Long",
          "marshallingType" : "LONG",
          "name" : "WorkbookCursor",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.*/",
          "setterMethodName" : "setWorkbookCursor",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>\n@param workbookCursor Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Long",
            "variableName" : "workbookCursor",
            "variableType" : "Long",
            "documentation" : "<p> Indicates the cursor of the workbook at which the data returned by this request is read. Workbook cursor keeps increasing with every update and the increments are not sequential. </p>",
            "simpleType" : "Long",
            "variableSetterType" : "Long"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "columnIds", "rows", "workbookCursor" ],
      "shapeName" : "QueryTableRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "QueryTableRowsResult",
        "variableName" : "queryTableRowsResult",
        "variableType" : "QueryTableRowsResult",
        "documentation" : null,
        "simpleType" : "QueryTableRowsResult",
        "variableSetterType" : "QueryTableRowsResult"
      },
      "wrapper" : false
    },
    "RequestTimeoutException" : {
      "c2jName" : "RequestTimeoutException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The request timed out.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "RequestTimeoutException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.RequestTimeoutException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "RequestTimeoutException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "RequestTimeoutException",
        "variableName" : "requestTimeoutException",
        "variableType" : "RequestTimeoutException",
        "documentation" : null,
        "simpleType" : "RequestTimeoutException",
        "variableSetterType" : "RequestTimeoutException"
      },
      "wrapper" : false
    },
    "ResourceNotFoundException" : {
      "c2jName" : "ResourceNotFoundException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A Workbook, Table, App, Screen or Screen Automation was not found with the given ID.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ResourceNotFoundException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.ResourceNotFoundException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ResourceNotFoundException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResourceNotFoundException",
        "variableName" : "resourceNotFoundException",
        "variableType" : "ResourceNotFoundException",
        "documentation" : null,
        "simpleType" : "ResourceNotFoundException",
        "variableSetterType" : "ResourceNotFoundException"
      },
      "wrapper" : false
    },
    "ResultRow" : {
      "c2jName" : "ResultRow",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>A single row in the ResultSet.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ResultRow",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rowId",
        "c2jShape" : "RowId",
        "deprecated" : false,
        "documentation" : "<p>The ID for a particular row.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID for a particular row.</p>\n@param rowId The ID for a particular row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowId",
        "getterDocumentation" : "/**<p>The ID for a particular row.</p>\n@return The ID for a particular row.*/",
        "getterMethodName" : "getRowId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RowId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID for a particular row.</p>\n@param rowId The ID for a particular row.*/",
        "setterMethodName" : "setRowId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID for a particular row.</p>\n@param rowId The ID for a particular row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "<p>The ID for a particular row.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "dataItems",
        "c2jShape" : "DataItems",
        "deprecated" : false,
        "documentation" : "<p>List of all the data cells in a row.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n@param dataItems List of all the data cells in a row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDataItems",
        "getterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n@return List of all the data cells in a row.*/",
        "getterMethodName" : "getDataItems",
        "getterModel" : {
          "returnType" : "java.util.List<DataItem>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataItems",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataItems",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "DataItem",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "DataItem",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : true,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "DataItem",
              "variableName" : "member",
              "variableType" : "DataItem",
              "documentation" : "",
              "simpleType" : "DataItem",
              "variableSetterType" : "DataItem"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "DataItem",
              "variableName" : "member",
              "variableType" : "DataItem",
              "documentation" : "",
              "simpleType" : "DataItem",
              "variableSetterType" : "DataItem"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "DataItem",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "DataItem",
          "templateImplType" : "java.util.ArrayList<DataItem>",
          "templateType" : "java.util.List<DataItem>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "DataItems",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n@param dataItems List of all the data cells in a row.*/",
        "setterMethodName" : "setDataItems",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<DataItem>",
          "variableName" : "dataItems",
          "variableType" : "java.util.List<DataItem>",
          "documentation" : "",
          "simpleType" : "List<DataItem>",
          "variableSetterType" : "java.util.Collection<DataItem>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDataItems(java.util.Collection)} or {@link #withDataItems(java.util.Collection)} if you want to override the existing values.</p>\n@param dataItems List of all the data cells in a row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<DataItem>",
          "variableName" : "dataItems",
          "variableType" : "java.util.List<DataItem>",
          "documentation" : "<p>List of all the data cells in a row.</p>",
          "simpleType" : "List<DataItem>",
          "variableSetterType" : "java.util.Collection<DataItem>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DataItems" : {
          "c2jName" : "dataItems",
          "c2jShape" : "DataItems",
          "deprecated" : false,
          "documentation" : "<p>List of all the data cells in a row.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n@param dataItems List of all the data cells in a row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDataItems",
          "getterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n@return List of all the data cells in a row.*/",
          "getterMethodName" : "getDataItems",
          "getterModel" : {
            "returnType" : "java.util.List<DataItem>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataItems",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataItems",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "DataItem",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "DataItem",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : true,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "DataItem",
                "variableName" : "member",
                "variableType" : "DataItem",
                "documentation" : "",
                "simpleType" : "DataItem",
                "variableSetterType" : "DataItem"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "DataItem",
                "variableName" : "member",
                "variableType" : "DataItem",
                "documentation" : "",
                "simpleType" : "DataItem",
                "variableSetterType" : "DataItem"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "DataItem",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "DataItem",
            "templateImplType" : "java.util.ArrayList<DataItem>",
            "templateType" : "java.util.List<DataItem>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "DataItems",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n@param dataItems List of all the data cells in a row.*/",
          "setterMethodName" : "setDataItems",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<DataItem>",
            "variableName" : "dataItems",
            "variableType" : "java.util.List<DataItem>",
            "documentation" : "",
            "simpleType" : "List<DataItem>",
            "variableSetterType" : "java.util.Collection<DataItem>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>List of all the data cells in a row.</p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setDataItems(java.util.Collection)} or {@link #withDataItems(java.util.Collection)} if you want to override the existing values.</p>\n@param dataItems List of all the data cells in a row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<DataItem>",
            "variableName" : "dataItems",
            "variableType" : "java.util.List<DataItem>",
            "documentation" : "<p>List of all the data cells in a row.</p>",
            "simpleType" : "List<DataItem>",
            "variableSetterType" : "java.util.Collection<DataItem>"
          },
          "xmlNameSpaceUri" : null
        },
        "RowId" : {
          "c2jName" : "rowId",
          "c2jShape" : "RowId",
          "deprecated" : false,
          "documentation" : "<p>The ID for a particular row.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID for a particular row.</p>\n@param rowId The ID for a particular row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowId",
          "getterDocumentation" : "/**<p>The ID for a particular row.</p>\n@return The ID for a particular row.*/",
          "getterMethodName" : "getRowId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RowId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID for a particular row.</p>\n@param rowId The ID for a particular row.*/",
          "setterMethodName" : "setRowId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID for a particular row.</p>\n@param rowId The ID for a particular row.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "<p>The ID for a particular row.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "dataItems" ],
      "shapeName" : "ResultRow",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResultRow",
        "variableName" : "resultRow",
        "variableType" : "ResultRow",
        "documentation" : null,
        "simpleType" : "ResultRow",
        "variableSetterType" : "ResultRow"
      },
      "wrapper" : false
    },
    "ResultSet" : {
      "c2jName" : "ResultSet",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> ResultSet contains the results of the request for a single block or list defined on the screen. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.ResultSet",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "headers",
        "c2jShape" : "ResultHeader",
        "deprecated" : false,
        "documentation" : "<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n@param headers List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withHeaders",
        "getterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n@return List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.*/",
        "getterMethodName" : "getHeaders",
        "getterModel" : {
          "returnType" : "java.util.List<ColumnMetadata>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "headers",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "headers",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ColumnMetadata",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ColumnMetadata",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ColumnMetadata",
              "variableName" : "member",
              "variableType" : "ColumnMetadata",
              "documentation" : "",
              "simpleType" : "ColumnMetadata",
              "variableSetterType" : "ColumnMetadata"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ColumnMetadata",
              "variableName" : "member",
              "variableType" : "ColumnMetadata",
              "documentation" : "",
              "simpleType" : "ColumnMetadata",
              "variableSetterType" : "ColumnMetadata"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ColumnMetadata",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ColumnMetadata",
          "templateImplType" : "java.util.ArrayList<ColumnMetadata>",
          "templateType" : "java.util.List<ColumnMetadata>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Headers",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n@param headers List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.*/",
        "setterMethodName" : "setHeaders",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ColumnMetadata>",
          "variableName" : "headers",
          "variableType" : "java.util.List<ColumnMetadata>",
          "documentation" : "",
          "simpleType" : "List<ColumnMetadata>",
          "variableSetterType" : "java.util.Collection<ColumnMetadata>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setHeaders(java.util.Collection)} or {@link #withHeaders(java.util.Collection)} if you want to override the existing values.</p>\n@param headers List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ColumnMetadata>",
          "variableName" : "headers",
          "variableType" : "java.util.List<ColumnMetadata>",
          "documentation" : "<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>",
          "simpleType" : "List<ColumnMetadata>",
          "variableSetterType" : "java.util.Collection<ColumnMetadata>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "rows",
        "c2jShape" : "ResultRows",
        "deprecated" : false,
        "documentation" : "<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n@param rows List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRows",
        "getterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n@return List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.*/",
        "getterMethodName" : "getRows",
        "getterModel" : {
          "returnType" : "java.util.List<ResultRow>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rows",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rows",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "ResultRow",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "ResultRow",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResultRow",
              "variableName" : "member",
              "variableType" : "ResultRow",
              "documentation" : "",
              "simpleType" : "ResultRow",
              "variableSetterType" : "ResultRow"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "ResultRow",
              "variableName" : "member",
              "variableType" : "ResultRow",
              "documentation" : "",
              "simpleType" : "ResultRow",
              "variableSetterType" : "ResultRow"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "ResultRow",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "ResultRow",
          "templateImplType" : "java.util.ArrayList<ResultRow>",
          "templateType" : "java.util.List<ResultRow>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Rows",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n@param rows List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.*/",
        "setterMethodName" : "setRows",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResultRow>",
          "variableName" : "rows",
          "variableType" : "java.util.List<ResultRow>",
          "documentation" : "",
          "simpleType" : "List<ResultRow>",
          "variableSetterType" : "java.util.Collection<ResultRow>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRows(java.util.Collection)} or {@link #withRows(java.util.Collection)} if you want to override the existing values.</p>\n@param rows List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<ResultRow>",
          "variableName" : "rows",
          "variableType" : "java.util.List<ResultRow>",
          "documentation" : "<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>",
          "simpleType" : "List<ResultRow>",
          "variableSetterType" : "java.util.Collection<ResultRow>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Headers" : {
          "c2jName" : "headers",
          "c2jShape" : "ResultHeader",
          "deprecated" : false,
          "documentation" : "<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n@param headers List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withHeaders",
          "getterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n@return List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.*/",
          "getterMethodName" : "getHeaders",
          "getterModel" : {
            "returnType" : "java.util.List<ColumnMetadata>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "headers",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "headers",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ColumnMetadata",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ColumnMetadata",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ColumnMetadata",
                "variableName" : "member",
                "variableType" : "ColumnMetadata",
                "documentation" : "",
                "simpleType" : "ColumnMetadata",
                "variableSetterType" : "ColumnMetadata"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ColumnMetadata",
                "variableName" : "member",
                "variableType" : "ColumnMetadata",
                "documentation" : "",
                "simpleType" : "ColumnMetadata",
                "variableSetterType" : "ColumnMetadata"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ColumnMetadata",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ColumnMetadata",
            "templateImplType" : "java.util.ArrayList<ColumnMetadata>",
            "templateType" : "java.util.List<ColumnMetadata>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Headers",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n@param headers List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.*/",
          "setterMethodName" : "setHeaders",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ColumnMetadata>",
            "variableName" : "headers",
            "variableType" : "java.util.List<ColumnMetadata>",
            "documentation" : "",
            "simpleType" : "List<ColumnMetadata>",
            "variableSetterType" : "java.util.Collection<ColumnMetadata>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setHeaders(java.util.Collection)} or {@link #withHeaders(java.util.Collection)} if you want to override the existing values.</p>\n@param headers List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ColumnMetadata>",
            "variableName" : "headers",
            "variableType" : "java.util.List<ColumnMetadata>",
            "documentation" : "<p> List of headers for all the data cells in the block. The header identifies the name and default format of the data cell. Data cells appear in the same order in all rows as defined in the header. The names and formats are not repeated in the rows. If a particular row does not have a value for a data cell, a blank value is used. </p> <p> For example, a task list that displays the task name, due date and assigned person might have headers [ { \"name\": \"Task Name\"}, {\"name\": \"Due Date\", \"format\": \"DATE\"}, {\"name\": \"Assigned\", \"format\": \"CONTACT\"} ]. Every row in the result will have the task name as the first item, due date as the second item and assigned person as the third item. If a particular task does not have a due date, that row will still have a blank value in the second element and the assigned person will still be in the third element. </p>",
            "simpleType" : "List<ColumnMetadata>",
            "variableSetterType" : "java.util.Collection<ColumnMetadata>"
          },
          "xmlNameSpaceUri" : null
        },
        "Rows" : {
          "c2jName" : "rows",
          "c2jShape" : "ResultRows",
          "deprecated" : false,
          "documentation" : "<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n@param rows List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRows",
          "getterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n@return List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.*/",
          "getterMethodName" : "getRows",
          "getterModel" : {
            "returnType" : "java.util.List<ResultRow>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rows",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rows",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "ResultRow",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "ResultRow",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResultRow",
                "variableName" : "member",
                "variableType" : "ResultRow",
                "documentation" : "",
                "simpleType" : "ResultRow",
                "variableSetterType" : "ResultRow"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "ResultRow",
                "variableName" : "member",
                "variableType" : "ResultRow",
                "documentation" : "",
                "simpleType" : "ResultRow",
                "variableSetterType" : "ResultRow"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "ResultRow",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "ResultRow",
            "templateImplType" : "java.util.ArrayList<ResultRow>",
            "templateType" : "java.util.List<ResultRow>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Rows",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n@param rows List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.*/",
          "setterMethodName" : "setRows",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResultRow>",
            "variableName" : "rows",
            "variableType" : "java.util.List<ResultRow>",
            "documentation" : "",
            "simpleType" : "List<ResultRow>",
            "variableSetterType" : "java.util.Collection<ResultRow>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRows(java.util.Collection)} or {@link #withRows(java.util.Collection)} if you want to override the existing values.</p>\n@param rows List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<ResultRow>",
            "variableName" : "rows",
            "variableType" : "java.util.List<ResultRow>",
            "documentation" : "<p> List of rows returned by the request. Each row has a row Id and a list of data cells in that row. The data cells will be present in the same order as they are defined in the header. </p>",
            "simpleType" : "List<ResultRow>",
            "variableSetterType" : "java.util.Collection<ResultRow>"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "headers", "rows" ],
      "shapeName" : "ResultSet",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ResultSet",
        "variableName" : "resultSet",
        "variableType" : "ResultSet",
        "documentation" : null,
        "simpleType" : "ResultSet",
        "variableSetterType" : "ResultSet"
      },
      "wrapper" : false
    },
    "ServiceQuotaExceededException" : {
      "c2jName" : "ServiceQuotaExceededException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> The request caused service quota to be breached. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ServiceQuotaExceededException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.ServiceQuotaExceededException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "ServiceQuotaExceededException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServiceQuotaExceededException",
        "variableName" : "serviceQuotaExceededException",
        "variableType" : "ServiceQuotaExceededException",
        "documentation" : null,
        "simpleType" : "ServiceQuotaExceededException",
        "variableSetterType" : "ServiceQuotaExceededException"
      },
      "wrapper" : false
    },
    "ServiceUnavailableException" : {
      "c2jName" : "ServiceUnavailableException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Remote service is unreachable.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ServiceUnavailableException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.ServiceUnavailableException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ServiceUnavailableException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ServiceUnavailableException",
        "variableName" : "serviceUnavailableException",
        "variableType" : "ServiceUnavailableException",
        "documentation" : null,
        "simpleType" : "ServiceUnavailableException",
        "variableSetterType" : "ServiceUnavailableException"
      },
      "wrapper" : false
    },
    "SourceDataColumnProperties" : {
      "c2jName" : "SourceDataColumnProperties",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that contains the properties for importing data to a specific column in a table.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.SourceDataColumnProperties",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "columnIndex",
        "c2jShape" : "SourceDataColumnIndex",
        "deprecated" : false,
        "documentation" : "<p>The index of the column in the input file.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@param columnIndex The index of the column in the input file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withColumnIndex",
        "getterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@return The index of the column in the input file.*/",
        "getterMethodName" : "getColumnIndex",
        "getterModel" : {
          "returnType" : "Integer",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "columnIndex",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "columnIndex",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "Integer",
        "marshallingType" : "INTEGER",
        "name" : "ColumnIndex",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@param columnIndex The index of the column in the input file.*/",
        "setterMethodName" : "setColumnIndex",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "columnIndex",
          "variableType" : "Integer",
          "documentation" : "",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@param columnIndex The index of the column in the input file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Integer",
          "variableName" : "columnIndex",
          "variableType" : "Integer",
          "documentation" : "<p>The index of the column in the input file.</p>",
          "simpleType" : "Integer",
          "variableSetterType" : "Integer"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ColumnIndex" : {
          "c2jName" : "columnIndex",
          "c2jShape" : "SourceDataColumnIndex",
          "deprecated" : false,
          "documentation" : "<p>The index of the column in the input file.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@param columnIndex The index of the column in the input file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withColumnIndex",
          "getterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@return The index of the column in the input file.*/",
          "getterMethodName" : "getColumnIndex",
          "getterModel" : {
            "returnType" : "Integer",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "columnIndex",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "columnIndex",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "Integer",
          "marshallingType" : "INTEGER",
          "name" : "ColumnIndex",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@param columnIndex The index of the column in the input file.*/",
          "setterMethodName" : "setColumnIndex",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "columnIndex",
            "variableType" : "Integer",
            "documentation" : "",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The index of the column in the input file.</p>\n@param columnIndex The index of the column in the input file.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Integer",
            "variableName" : "columnIndex",
            "variableType" : "Integer",
            "documentation" : "<p>The index of the column in the input file.</p>",
            "simpleType" : "Integer",
            "variableSetterType" : "Integer"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "SourceDataColumnProperties",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "SourceDataColumnProperties",
        "variableName" : "sourceDataColumnProperties",
        "variableType" : "SourceDataColumnProperties",
        "documentation" : null,
        "simpleType" : "SourceDataColumnProperties",
        "variableSetterType" : "SourceDataColumnProperties"
      },
      "wrapper" : false
    },
    "StartTableDataImportJobRequest" : {
      "c2jName" : "StartTableDataImportJobRequest",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.request.StartTableDataImportJobRequest",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : {
        "action" : "StartTableDataImportJob",
        "locationName" : null,
        "requestUri" : "/workbooks/{workbookId}/tables/{tableId}/import",
        "target" : null,
        "verb" : "POST",
        "xmlNameSpaceUri" : null
      },
      "members" : [ {
        "c2jName" : "workbookId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withWorkbookId",
        "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getWorkbookId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "workbookId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "workbookId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "WorkbookId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setWorkbookId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "workbookId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "dataSource",
        "c2jShape" : "ImportDataSource",
        "deprecated" : false,
        "documentation" : "<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@param dataSource The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDataSource",
        "getterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@return The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.*/",
        "getterMethodName" : "getDataSource",
        "getterModel" : {
          "returnType" : "ImportDataSource",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataSource",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataSource",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DataSource",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@param dataSource The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.*/",
        "setterMethodName" : "setDataSource",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportDataSource",
          "variableName" : "dataSource",
          "variableType" : "ImportDataSource",
          "documentation" : "",
          "simpleType" : "ImportDataSource",
          "variableSetterType" : "ImportDataSource"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@param dataSource The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportDataSource",
          "variableName" : "dataSource",
          "variableType" : "ImportDataSource",
          "documentation" : "<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>",
          "simpleType" : "ImportDataSource",
          "variableSetterType" : "ImportDataSource"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "dataFormat",
        "c2jShape" : "ImportSourceDataFormat",
        "deprecated" : false,
        "documentation" : "<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "ImportSourceDataFormat",
        "fluentSetterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@param dataFormat The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportSourceDataFormat*/",
        "fluentSetterMethodName" : "withDataFormat",
        "getterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@return The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@see ImportSourceDataFormat*/",
        "getterMethodName" : "getDataFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataFormat",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataFormat",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DataFormat",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@param dataFormat The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@see ImportSourceDataFormat*/",
        "setterMethodName" : "setDataFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "dataFormat",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@param dataFormat The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportSourceDataFormat*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "dataFormat",
          "variableType" : "String",
          "documentation" : "<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "destinationTableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param destinationTableId The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDestinationTableId",
        "getterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "getterMethodName" : "getDestinationTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : "uri",
          "marshallLocation" : "PATH",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : true
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "DestinationTableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param destinationTableId The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
        "setterMethodName" : "setDestinationTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "destinationTableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param destinationTableId The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "destinationTableId",
          "variableType" : "String",
          "documentation" : "<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "importOptions",
        "c2jShape" : "ImportOptions",
        "deprecated" : false,
        "documentation" : "<p> The options for customizing this import request. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@param importOptions The options for customizing this import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImportOptions",
        "getterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@return The options for customizing this import request.*/",
        "getterMethodName" : "getImportOptions",
        "getterModel" : {
          "returnType" : "ImportOptions",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "importOptions",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "importOptions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ImportOptions",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@param importOptions The options for customizing this import request.*/",
        "setterMethodName" : "setImportOptions",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportOptions",
          "variableName" : "importOptions",
          "variableType" : "ImportOptions",
          "documentation" : "",
          "simpleType" : "ImportOptions",
          "variableSetterType" : "ImportOptions"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@param importOptions The options for customizing this import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportOptions",
          "variableName" : "importOptions",
          "variableType" : "ImportOptions",
          "documentation" : "<p> The options for customizing this import request. </p>",
          "simpleType" : "ImportOptions",
          "variableSetterType" : "ImportOptions"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "clientRequestToken",
        "c2jShape" : "ClientRequestToken",
        "deprecated" : false,
        "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withClientRequestToken",
        "getterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "getterMethodName" : "getClientRequestToken",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "clientRequestToken",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "clientRequestToken",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "ClientRequestToken",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
        "setterMethodName" : "setClientRequestToken",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "clientRequestToken",
          "variableType" : "String",
          "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "ClientRequestToken" : {
          "c2jName" : "clientRequestToken",
          "c2jShape" : "ClientRequestToken",
          "deprecated" : false,
          "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withClientRequestToken",
          "getterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@return The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "getterMethodName" : "getClientRequestToken",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "clientRequestToken",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "clientRequestToken",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "ClientRequestToken",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.*/",
          "setterMethodName" : "setClientRequestToken",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>\n@param clientRequestToken The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "clientRequestToken",
            "variableType" : "String",
            "documentation" : "<p> The request token for performing the update action. Request tokens help to identify duplicate requests. If a call times out or fails due to a transient error like a failed network connection, you can retry the call with the same request token. The service ensures that if the first call using that request token is successfully performed, the second call will not perform the action again. </p> <p> Note that request tokens are valid only for a few minutes. You cannot use request tokens to dedupe requests spanning hours or days. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DataFormat" : {
          "c2jName" : "dataFormat",
          "c2jShape" : "ImportSourceDataFormat",
          "deprecated" : false,
          "documentation" : "<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "ImportSourceDataFormat",
          "fluentSetterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@param dataFormat The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportSourceDataFormat*/",
          "fluentSetterMethodName" : "withDataFormat",
          "getterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@return The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@see ImportSourceDataFormat*/",
          "getterMethodName" : "getDataFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataFormat",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataFormat",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DataFormat",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@param dataFormat The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@see ImportSourceDataFormat*/",
          "setterMethodName" : "setDataFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "dataFormat",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>\n@param dataFormat The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\".\n@return Returns a reference to this object so that method calls can be chained together.\n@see ImportSourceDataFormat*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "dataFormat",
            "variableType" : "String",
            "documentation" : "<p> The format of the data that is being imported. Currently the only option supported is \"DELIMITED_TEXT\". </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "DataSource" : {
          "c2jName" : "dataSource",
          "c2jShape" : "ImportDataSource",
          "deprecated" : false,
          "documentation" : "<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@param dataSource The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDataSource",
          "getterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@return The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.*/",
          "getterMethodName" : "getDataSource",
          "getterModel" : {
            "returnType" : "ImportDataSource",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataSource",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataSource",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DataSource",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@param dataSource The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.*/",
          "setterMethodName" : "setDataSource",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportDataSource",
            "variableName" : "dataSource",
            "variableType" : "ImportDataSource",
            "documentation" : "",
            "simpleType" : "ImportDataSource",
            "variableSetterType" : "ImportDataSource"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>\n@param dataSource The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportDataSource",
            "variableName" : "dataSource",
            "variableType" : "ImportDataSource",
            "documentation" : "<p> The source of the data that is being imported. The size of source must be no larger than 100 MB. Source must have no more than 100,000 cells and no more than 1,000 rows. </p>",
            "simpleType" : "ImportDataSource",
            "variableSetterType" : "ImportDataSource"
          },
          "xmlNameSpaceUri" : null
        },
        "DestinationTableId" : {
          "c2jName" : "destinationTableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param destinationTableId The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDestinationTableId",
          "getterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getDestinationTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "DestinationTableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param destinationTableId The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setDestinationTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "destinationTableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param destinationTableId The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "destinationTableId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the table where the rows are being imported.</p> <p> If a table with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "ImportOptions" : {
          "c2jName" : "importOptions",
          "c2jShape" : "ImportOptions",
          "deprecated" : false,
          "documentation" : "<p> The options for customizing this import request. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@param importOptions The options for customizing this import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImportOptions",
          "getterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@return The options for customizing this import request.*/",
          "getterMethodName" : "getImportOptions",
          "getterModel" : {
            "returnType" : "ImportOptions",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "importOptions",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "importOptions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ImportOptions",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@param importOptions The options for customizing this import request.*/",
          "setterMethodName" : "setImportOptions",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportOptions",
            "variableName" : "importOptions",
            "variableType" : "ImportOptions",
            "documentation" : "",
            "simpleType" : "ImportOptions",
            "variableSetterType" : "ImportOptions"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The options for customizing this import request. </p>\n@param importOptions The options for customizing this import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportOptions",
            "variableName" : "importOptions",
            "variableType" : "ImportOptions",
            "documentation" : "<p> The options for customizing this import request. </p>",
            "simpleType" : "ImportOptions",
            "variableSetterType" : "ImportOptions"
          },
          "xmlNameSpaceUri" : null
        },
        "WorkbookId" : {
          "c2jName" : "workbookId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withWorkbookId",
          "getterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@return The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "getterMethodName" : "getWorkbookId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : "uri",
            "marshallLocation" : "PATH",
            "marshallLocationName" : "workbookId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "workbookId",
            "uri" : true
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "WorkbookId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.*/",
          "setterMethodName" : "setWorkbookId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>\n@param workbookId The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "workbookId",
            "variableType" : "String",
            "documentation" : "<p>The ID of the workbook where the rows are being imported.</p> <p> If a workbook with the specified id could not be found, this API throws ResourceNotFoundException. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.request",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "workbookId", "dataSource", "dataFormat", "destinationTableId", "importOptions", "clientRequestToken" ],
      "shapeName" : "StartTableDataImportJobRequest",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartTableDataImportJobRequest",
        "variableName" : "startTableDataImportJobRequest",
        "variableType" : "StartTableDataImportJobRequest",
        "documentation" : null,
        "simpleType" : "StartTableDataImportJobRequest",
        "variableSetterType" : "StartTableDataImportJobRequest"
      },
      "wrapper" : false
    },
    "StartTableDataImportJobResult" : {
      "c2jName" : "StartTableDataImportJobResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.response.StartTableDataImportJobResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "jobId",
        "c2jShape" : "JobId",
        "deprecated" : false,
        "documentation" : "<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@param jobId The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withJobId",
        "getterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@return The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.*/",
        "getterMethodName" : "getJobId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "jobId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "jobId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "JobId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@param jobId The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.*/",
        "setterMethodName" : "setJobId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@param jobId The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobId",
          "variableType" : "String",
          "documentation" : "<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "jobStatus",
        "c2jShape" : "TableDataImportJobStatus",
        "deprecated" : false,
        "documentation" : "<p> The status of the import job immediately after submitting the request. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "TableDataImportJobStatus",
        "fluentSetterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@param jobStatus The status of the import job immediately after submitting the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
        "fluentSetterMethodName" : "withJobStatus",
        "getterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@return The status of the import job immediately after submitting the request.\n@see TableDataImportJobStatus*/",
        "getterMethodName" : "getJobStatus",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "jobStatus",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "jobStatus",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "JobStatus",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@param jobStatus The status of the import job immediately after submitting the request.\n@see TableDataImportJobStatus*/",
        "setterMethodName" : "setJobStatus",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobStatus",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@param jobStatus The status of the import job immediately after submitting the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "jobStatus",
          "variableType" : "String",
          "documentation" : "<p> The status of the import job immediately after submitting the request. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "JobId" : {
          "c2jName" : "jobId",
          "c2jShape" : "JobId",
          "deprecated" : false,
          "documentation" : "<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@param jobId The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withJobId",
          "getterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@return The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.*/",
          "getterMethodName" : "getJobId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "jobId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "jobId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "JobId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@param jobId The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.*/",
          "setterMethodName" : "setJobId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>\n@param jobId The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobId",
            "variableType" : "String",
            "documentation" : "<p> The id that is assigned to this import job. Future requests to find out the status of this import job need to send this id in the appropriate parameter in the request. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "JobStatus" : {
          "c2jName" : "jobStatus",
          "c2jShape" : "TableDataImportJobStatus",
          "deprecated" : false,
          "documentation" : "<p> The status of the import job immediately after submitting the request. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "TableDataImportJobStatus",
          "fluentSetterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@param jobStatus The status of the import job immediately after submitting the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
          "fluentSetterMethodName" : "withJobStatus",
          "getterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@return The status of the import job immediately after submitting the request.\n@see TableDataImportJobStatus*/",
          "getterMethodName" : "getJobStatus",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "jobStatus",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "jobStatus",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "JobStatus",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@param jobStatus The status of the import job immediately after submitting the request.\n@see TableDataImportJobStatus*/",
          "setterMethodName" : "setJobStatus",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobStatus",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The status of the import job immediately after submitting the request. </p>\n@param jobStatus The status of the import job immediately after submitting the request.\n@return Returns a reference to this object so that method calls can be chained together.\n@see TableDataImportJobStatus*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "jobStatus",
            "variableType" : "String",
            "documentation" : "<p> The status of the import job immediately after submitting the request. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.response",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "jobId", "jobStatus" ],
      "shapeName" : "StartTableDataImportJobResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "StartTableDataImportJobResult",
        "variableName" : "startTableDataImportJobResult",
        "variableType" : "StartTableDataImportJobResult",
        "documentation" : null,
        "simpleType" : "StartTableDataImportJobResult",
        "variableSetterType" : "StartTableDataImportJobResult"
      },
      "wrapper" : false
    },
    "Table" : {
      "c2jName" : "Table",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object representing the properties of a table in a workbook.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.Table",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tableId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The id of the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The id of the table.</p>\n@param tableId The id of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableId",
        "getterDocumentation" : "/**<p>The id of the table.</p>\n@return The id of the table.*/",
        "getterMethodName" : "getTableId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The id of the table.</p>\n@param tableId The id of the table.*/",
        "setterMethodName" : "setTableId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The id of the table.</p>\n@param tableId The id of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableId",
          "variableType" : "String",
          "documentation" : "<p>The id of the table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableName",
        "c2jShape" : "TableName",
        "deprecated" : false,
        "documentation" : "<p>The name of the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the table.</p>\n@param tableName The name of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableName",
        "getterDocumentation" : "/**<p>The name of the table.</p>\n@return The name of the table.*/",
        "getterMethodName" : "getTableName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableName",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the table.</p>\n@param tableName The name of the table.*/",
        "setterMethodName" : "setTableName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the table.</p>\n@param tableName The name of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableName",
          "variableType" : "String",
          "documentation" : "<p>The name of the table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "TableId" : {
          "c2jName" : "tableId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The id of the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The id of the table.</p>\n@param tableId The id of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableId",
          "getterDocumentation" : "/**<p>The id of the table.</p>\n@return The id of the table.*/",
          "getterMethodName" : "getTableId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The id of the table.</p>\n@param tableId The id of the table.*/",
          "setterMethodName" : "setTableId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The id of the table.</p>\n@param tableId The id of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableId",
            "variableType" : "String",
            "documentation" : "<p>The id of the table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableName" : {
          "c2jName" : "tableName",
          "c2jShape" : "TableName",
          "deprecated" : false,
          "documentation" : "<p>The name of the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the table.</p>\n@param tableName The name of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableName",
          "getterDocumentation" : "/**<p>The name of the table.</p>\n@return The name of the table.*/",
          "getterMethodName" : "getTableName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableName",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the table.</p>\n@param tableName The name of the table.*/",
          "setterMethodName" : "setTableName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the table.</p>\n@param tableName The name of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableName",
            "variableType" : "String",
            "documentation" : "<p>The name of the table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "Table",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "Table",
        "variableName" : "table",
        "variableType" : "Table",
        "documentation" : null,
        "simpleType" : "Table",
        "variableSetterType" : "Table"
      },
      "wrapper" : false
    },
    "TableColumn" : {
      "c2jName" : "TableColumn",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that contains attributes about a single column in a table</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.TableColumn",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "tableColumnId",
        "c2jShape" : "ResourceId",
        "deprecated" : false,
        "documentation" : "<p>The id of the column in the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The id of the column in the table.</p>\n@param tableColumnId The id of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableColumnId",
        "getterDocumentation" : "/**<p>The id of the column in the table.</p>\n@return The id of the column in the table.*/",
        "getterMethodName" : "getTableColumnId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableColumnId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableColumnId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableColumnId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The id of the column in the table.</p>\n@param tableColumnId The id of the column in the table.*/",
        "setterMethodName" : "setTableColumnId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableColumnId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The id of the column in the table.</p>\n@param tableColumnId The id of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableColumnId",
          "variableType" : "String",
          "documentation" : "<p>The id of the column in the table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "tableColumnName",
        "c2jShape" : "TableColumnName",
        "deprecated" : false,
        "documentation" : "<p>The name of the column in the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The name of the column in the table.</p>\n@param tableColumnName The name of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withTableColumnName",
        "getterDocumentation" : "/**<p>The name of the column in the table.</p>\n@return The name of the column in the table.*/",
        "getterMethodName" : "getTableColumnName",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "tableColumnName",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "tableColumnName",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "TableColumnName",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The name of the column in the table.</p>\n@param tableColumnName The name of the column in the table.*/",
        "setterMethodName" : "setTableColumnName",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableColumnName",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The name of the column in the table.</p>\n@param tableColumnName The name of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "tableColumnName",
          "variableType" : "String",
          "documentation" : "<p>The name of the column in the table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "format",
        "c2jShape" : "Format",
        "deprecated" : false,
        "documentation" : "<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "Format",
        "fluentSetterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@param format The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "fluentSetterMethodName" : "withFormat",
        "getterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@return The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@see Format*/",
        "getterMethodName" : "getFormat",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "format",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "format",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "Format",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@param format The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@see Format*/",
        "setterMethodName" : "setFormat",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@param format The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "format",
          "variableType" : "String",
          "documentation" : "<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Format" : {
          "c2jName" : "format",
          "c2jShape" : "Format",
          "deprecated" : false,
          "documentation" : "<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "Format",
          "fluentSetterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@param format The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "fluentSetterMethodName" : "withFormat",
          "getterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@return The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@see Format*/",
          "getterMethodName" : "getFormat",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "format",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "format",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "Format",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@param format The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@see Format*/",
          "setterMethodName" : "setFormat",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>\n@param format The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'.\n@return Returns a reference to this object so that method calls can be chained together.\n@see Format*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "format",
            "variableType" : "String",
            "documentation" : "<p> The column level format that is applied in the table. An empty value in this field means that the column format is the default value 'AUTO'. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableColumnId" : {
          "c2jName" : "tableColumnId",
          "c2jShape" : "ResourceId",
          "deprecated" : false,
          "documentation" : "<p>The id of the column in the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The id of the column in the table.</p>\n@param tableColumnId The id of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableColumnId",
          "getterDocumentation" : "/**<p>The id of the column in the table.</p>\n@return The id of the column in the table.*/",
          "getterMethodName" : "getTableColumnId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableColumnId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableColumnId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableColumnId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The id of the column in the table.</p>\n@param tableColumnId The id of the column in the table.*/",
          "setterMethodName" : "setTableColumnId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableColumnId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The id of the column in the table.</p>\n@param tableColumnId The id of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableColumnId",
            "variableType" : "String",
            "documentation" : "<p>The id of the column in the table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "TableColumnName" : {
          "c2jName" : "tableColumnName",
          "c2jShape" : "TableColumnName",
          "deprecated" : false,
          "documentation" : "<p>The name of the column in the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The name of the column in the table.</p>\n@param tableColumnName The name of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withTableColumnName",
          "getterDocumentation" : "/**<p>The name of the column in the table.</p>\n@return The name of the column in the table.*/",
          "getterMethodName" : "getTableColumnName",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "tableColumnName",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "tableColumnName",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "TableColumnName",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The name of the column in the table.</p>\n@param tableColumnName The name of the column in the table.*/",
          "setterMethodName" : "setTableColumnName",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableColumnName",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The name of the column in the table.</p>\n@param tableColumnName The name of the column in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "tableColumnName",
            "variableType" : "String",
            "documentation" : "<p>The name of the column in the table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TableColumn",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TableColumn",
        "variableName" : "tableColumn",
        "variableType" : "TableColumn",
        "documentation" : null,
        "simpleType" : "TableColumn",
        "variableSetterType" : "TableColumn"
      },
      "wrapper" : false
    },
    "TableDataImportJobMetadata" : {
      "c2jName" : "TableDataImportJobMetadata",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The metadata associated with the table data import job that was submitted.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.TableDataImportJobMetadata",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "submitter",
        "c2jShape" : "ImportJobSubmitter",
        "deprecated" : false,
        "documentation" : "<p>Details about the submitter of the import request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@param submitter Details about the submitter of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubmitter",
        "getterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@return Details about the submitter of the import request.*/",
        "getterMethodName" : "getSubmitter",
        "getterModel" : {
          "returnType" : "ImportJobSubmitter",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "submitter",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "submitter",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Submitter",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@param submitter Details about the submitter of the import request.*/",
        "setterMethodName" : "setSubmitter",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportJobSubmitter",
          "variableName" : "submitter",
          "variableType" : "ImportJobSubmitter",
          "documentation" : "",
          "simpleType" : "ImportJobSubmitter",
          "variableSetterType" : "ImportJobSubmitter"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@param submitter Details about the submitter of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportJobSubmitter",
          "variableName" : "submitter",
          "variableType" : "ImportJobSubmitter",
          "documentation" : "<p>Details about the submitter of the import request.</p>",
          "simpleType" : "ImportJobSubmitter",
          "variableSetterType" : "ImportJobSubmitter"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "submitTime",
        "c2jShape" : "TimestampInMillis",
        "deprecated" : false,
        "documentation" : "<p>The timestamp when the job was submitted for import.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@param submitTime The timestamp when the job was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withSubmitTime",
        "getterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@return The timestamp when the job was submitted for import.*/",
        "getterMethodName" : "getSubmitTime",
        "getterModel" : {
          "returnType" : "java.util.Date",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "submitTime",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "submitTime",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "java.util.Date",
        "marshallingType" : "DATE",
        "name" : "SubmitTime",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@param submitTime The timestamp when the job was submitted for import.*/",
        "setterMethodName" : "setSubmitTime",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "submitTime",
          "variableType" : "java.util.Date",
          "documentation" : "",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@param submitTime The timestamp when the job was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : "unixTimestamp",
          "variableDeclarationType" : "java.util.Date",
          "variableName" : "submitTime",
          "variableType" : "java.util.Date",
          "documentation" : "<p>The timestamp when the job was submitted for import.</p>",
          "simpleType" : "Date",
          "variableSetterType" : "java.util.Date"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "importOptions",
        "c2jShape" : "ImportOptions",
        "deprecated" : false,
        "documentation" : "<p>The options that was specified at the time of submitting the import request.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@param importOptions The options that was specified at the time of submitting the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withImportOptions",
        "getterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@return The options that was specified at the time of submitting the import request.*/",
        "getterMethodName" : "getImportOptions",
        "getterModel" : {
          "returnType" : "ImportOptions",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "importOptions",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "importOptions",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "ImportOptions",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@param importOptions The options that was specified at the time of submitting the import request.*/",
        "setterMethodName" : "setImportOptions",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportOptions",
          "variableName" : "importOptions",
          "variableType" : "ImportOptions",
          "documentation" : "",
          "simpleType" : "ImportOptions",
          "variableSetterType" : "ImportOptions"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@param importOptions The options that was specified at the time of submitting the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportOptions",
          "variableName" : "importOptions",
          "variableType" : "ImportOptions",
          "documentation" : "<p>The options that was specified at the time of submitting the import request.</p>",
          "simpleType" : "ImportOptions",
          "variableSetterType" : "ImportOptions"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "dataSource",
        "c2jShape" : "ImportDataSource",
        "deprecated" : false,
        "documentation" : "<p>The source of the data that was submitted for import.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@param dataSource The source of the data that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withDataSource",
        "getterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@return The source of the data that was submitted for import.*/",
        "getterMethodName" : "getDataSource",
        "getterModel" : {
          "returnType" : "ImportDataSource",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "dataSource",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "dataSource",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "DataSource",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@param dataSource The source of the data that was submitted for import.*/",
        "setterMethodName" : "setDataSource",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportDataSource",
          "variableName" : "dataSource",
          "variableType" : "ImportDataSource",
          "documentation" : "",
          "simpleType" : "ImportDataSource",
          "variableSetterType" : "ImportDataSource"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@param dataSource The source of the data that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "ImportDataSource",
          "variableName" : "dataSource",
          "variableType" : "ImportDataSource",
          "documentation" : "<p>The source of the data that was submitted for import.</p>",
          "simpleType" : "ImportDataSource",
          "variableSetterType" : "ImportDataSource"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "DataSource" : {
          "c2jName" : "dataSource",
          "c2jShape" : "ImportDataSource",
          "deprecated" : false,
          "documentation" : "<p>The source of the data that was submitted for import.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@param dataSource The source of the data that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withDataSource",
          "getterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@return The source of the data that was submitted for import.*/",
          "getterMethodName" : "getDataSource",
          "getterModel" : {
            "returnType" : "ImportDataSource",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "dataSource",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "dataSource",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "DataSource",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@param dataSource The source of the data that was submitted for import.*/",
          "setterMethodName" : "setDataSource",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportDataSource",
            "variableName" : "dataSource",
            "variableType" : "ImportDataSource",
            "documentation" : "",
            "simpleType" : "ImportDataSource",
            "variableSetterType" : "ImportDataSource"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The source of the data that was submitted for import.</p>\n@param dataSource The source of the data that was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportDataSource",
            "variableName" : "dataSource",
            "variableType" : "ImportDataSource",
            "documentation" : "<p>The source of the data that was submitted for import.</p>",
            "simpleType" : "ImportDataSource",
            "variableSetterType" : "ImportDataSource"
          },
          "xmlNameSpaceUri" : null
        },
        "ImportOptions" : {
          "c2jName" : "importOptions",
          "c2jShape" : "ImportOptions",
          "deprecated" : false,
          "documentation" : "<p>The options that was specified at the time of submitting the import request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@param importOptions The options that was specified at the time of submitting the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withImportOptions",
          "getterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@return The options that was specified at the time of submitting the import request.*/",
          "getterMethodName" : "getImportOptions",
          "getterModel" : {
            "returnType" : "ImportOptions",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "importOptions",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "importOptions",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "ImportOptions",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@param importOptions The options that was specified at the time of submitting the import request.*/",
          "setterMethodName" : "setImportOptions",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportOptions",
            "variableName" : "importOptions",
            "variableType" : "ImportOptions",
            "documentation" : "",
            "simpleType" : "ImportOptions",
            "variableSetterType" : "ImportOptions"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The options that was specified at the time of submitting the import request.</p>\n@param importOptions The options that was specified at the time of submitting the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportOptions",
            "variableName" : "importOptions",
            "variableType" : "ImportOptions",
            "documentation" : "<p>The options that was specified at the time of submitting the import request.</p>",
            "simpleType" : "ImportOptions",
            "variableSetterType" : "ImportOptions"
          },
          "xmlNameSpaceUri" : null
        },
        "SubmitTime" : {
          "c2jName" : "submitTime",
          "c2jShape" : "TimestampInMillis",
          "deprecated" : false,
          "documentation" : "<p>The timestamp when the job was submitted for import.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@param submitTime The timestamp when the job was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubmitTime",
          "getterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@return The timestamp when the job was submitted for import.*/",
          "getterMethodName" : "getSubmitTime",
          "getterModel" : {
            "returnType" : "java.util.Date",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "submitTime",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "submitTime",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "java.util.Date",
          "marshallingType" : "DATE",
          "name" : "SubmitTime",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@param submitTime The timestamp when the job was submitted for import.*/",
          "setterMethodName" : "setSubmitTime",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "submitTime",
            "variableType" : "java.util.Date",
            "documentation" : "",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The timestamp when the job was submitted for import.</p>\n@param submitTime The timestamp when the job was submitted for import.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : "unixTimestamp",
            "variableDeclarationType" : "java.util.Date",
            "variableName" : "submitTime",
            "variableType" : "java.util.Date",
            "documentation" : "<p>The timestamp when the job was submitted for import.</p>",
            "simpleType" : "Date",
            "variableSetterType" : "java.util.Date"
          },
          "xmlNameSpaceUri" : null
        },
        "Submitter" : {
          "c2jName" : "submitter",
          "c2jShape" : "ImportJobSubmitter",
          "deprecated" : false,
          "documentation" : "<p>Details about the submitter of the import request.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@param submitter Details about the submitter of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withSubmitter",
          "getterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@return Details about the submitter of the import request.*/",
          "getterMethodName" : "getSubmitter",
          "getterModel" : {
            "returnType" : "ImportJobSubmitter",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "submitter",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "submitter",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Submitter",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@param submitter Details about the submitter of the import request.*/",
          "setterMethodName" : "setSubmitter",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportJobSubmitter",
            "variableName" : "submitter",
            "variableType" : "ImportJobSubmitter",
            "documentation" : "",
            "simpleType" : "ImportJobSubmitter",
            "variableSetterType" : "ImportJobSubmitter"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Details about the submitter of the import request.</p>\n@param submitter Details about the submitter of the import request.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "ImportJobSubmitter",
            "variableName" : "submitter",
            "variableType" : "ImportJobSubmitter",
            "documentation" : "<p>Details about the submitter of the import request.</p>",
            "simpleType" : "ImportJobSubmitter",
            "variableSetterType" : "ImportJobSubmitter"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "submitter", "submitTime", "importOptions", "dataSource" ],
      "shapeName" : "TableDataImportJobMetadata",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TableDataImportJobMetadata",
        "variableName" : "tableDataImportJobMetadata",
        "variableType" : "TableDataImportJobMetadata",
        "documentation" : null,
        "simpleType" : "TableDataImportJobMetadata",
        "variableSetterType" : "TableDataImportJobMetadata"
      },
      "wrapper" : false
    },
    "TableDataImportJobStatus" : {
      "c2jName" : "TableDataImportJobStatus",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "SUBMITTED",
        "value" : "SUBMITTED"
      }, {
        "name" : "IN_PROGRESS",
        "value" : "IN_PROGRESS"
      }, {
        "name" : "COMPLETED",
        "value" : "COMPLETED"
      }, {
        "name" : "FAILED",
        "value" : "FAILED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.enum.TableDataImportJobStatus",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "TableDataImportJobStatus",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TableDataImportJobStatus",
        "variableName" : "tableDataImportJobStatus",
        "variableType" : "TableDataImportJobStatus",
        "documentation" : null,
        "simpleType" : "TableDataImportJobStatus",
        "variableSetterType" : "TableDataImportJobStatus"
      },
      "wrapper" : false
    },
    "TableRow" : {
      "c2jName" : "TableRow",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>An object that contains attributes about a single row in a table</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.TableRow",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rowId",
        "c2jShape" : "RowId",
        "deprecated" : false,
        "documentation" : "<p>The id of the row in the table.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>The id of the row in the table.</p>\n@param rowId The id of the row in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowId",
        "getterDocumentation" : "/**<p>The id of the row in the table.</p>\n@return The id of the row in the table.*/",
        "getterMethodName" : "getRowId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RowId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>The id of the row in the table.</p>\n@param rowId The id of the row in the table.*/",
        "setterMethodName" : "setRowId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>The id of the row in the table.</p>\n@param rowId The id of the row in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "<p>The id of the row in the table.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cells",
        "c2jShape" : "Cells",
        "deprecated" : false,
        "documentation" : "<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n@param cells A list of cells in the table row. The cells appear in the same order as the columns of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCells",
        "getterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n@return A list of cells in the table row. The cells appear in the same order as the columns of the table.*/",
        "getterMethodName" : "getCells",
        "getterModel" : {
          "returnType" : "java.util.List<Cell>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cells",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cells",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "Cell",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "Cell",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Member",
            "sensitive" : true,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Cell",
              "variableName" : "member",
              "variableType" : "Cell",
              "documentation" : "",
              "simpleType" : "Cell",
              "variableSetterType" : "Cell"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "Cell",
              "variableName" : "member",
              "variableType" : "Cell",
              "documentation" : "",
              "simpleType" : "Cell",
              "variableSetterType" : "Cell"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "Cell",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : false,
          "simpleType" : "Cell",
          "templateImplType" : "java.util.ArrayList<Cell>",
          "templateType" : "java.util.List<Cell>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "Cells",
        "sensitive" : true,
        "setterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n@param cells A list of cells in the table row. The cells appear in the same order as the columns of the table.*/",
        "setterMethodName" : "setCells",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Cell>",
          "variableName" : "cells",
          "variableType" : "java.util.List<Cell>",
          "documentation" : "",
          "simpleType" : "List<Cell>",
          "variableSetterType" : "java.util.Collection<Cell>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCells(java.util.Collection)} or {@link #withCells(java.util.Collection)} if you want to override the existing values.</p>\n@param cells A list of cells in the table row. The cells appear in the same order as the columns of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<Cell>",
          "variableName" : "cells",
          "variableType" : "java.util.List<Cell>",
          "documentation" : "<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>",
          "simpleType" : "List<Cell>",
          "variableSetterType" : "java.util.Collection<Cell>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "Cells" : {
          "c2jName" : "cells",
          "c2jShape" : "Cells",
          "deprecated" : false,
          "documentation" : "<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n@param cells A list of cells in the table row. The cells appear in the same order as the columns of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCells",
          "getterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n@return A list of cells in the table row. The cells appear in the same order as the columns of the table.*/",
          "getterMethodName" : "getCells",
          "getterModel" : {
            "returnType" : "java.util.List<Cell>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cells",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cells",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "Cell",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "Cell",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Member",
              "sensitive" : true,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Cell",
                "variableName" : "member",
                "variableType" : "Cell",
                "documentation" : "",
                "simpleType" : "Cell",
                "variableSetterType" : "Cell"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "Cell",
                "variableName" : "member",
                "variableType" : "Cell",
                "documentation" : "",
                "simpleType" : "Cell",
                "variableSetterType" : "Cell"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "Cell",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : false,
            "simpleType" : "Cell",
            "templateImplType" : "java.util.ArrayList<Cell>",
            "templateType" : "java.util.List<Cell>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "Cells",
          "sensitive" : true,
          "setterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n@param cells A list of cells in the table row. The cells appear in the same order as the columns of the table.*/",
          "setterMethodName" : "setCells",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Cell>",
            "variableName" : "cells",
            "variableType" : "java.util.List<Cell>",
            "documentation" : "",
            "simpleType" : "List<Cell>",
            "variableSetterType" : "java.util.Collection<Cell>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setCells(java.util.Collection)} or {@link #withCells(java.util.Collection)} if you want to override the existing values.</p>\n@param cells A list of cells in the table row. The cells appear in the same order as the columns of the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<Cell>",
            "variableName" : "cells",
            "variableType" : "java.util.List<Cell>",
            "documentation" : "<p>A list of cells in the table row. The cells appear in the same order as the columns of the table. </p>",
            "simpleType" : "List<Cell>",
            "variableSetterType" : "java.util.Collection<Cell>"
          },
          "xmlNameSpaceUri" : null
        },
        "RowId" : {
          "c2jName" : "rowId",
          "c2jShape" : "RowId",
          "deprecated" : false,
          "documentation" : "<p>The id of the row in the table.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>The id of the row in the table.</p>\n@param rowId The id of the row in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowId",
          "getterDocumentation" : "/**<p>The id of the row in the table.</p>\n@return The id of the row in the table.*/",
          "getterMethodName" : "getRowId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RowId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>The id of the row in the table.</p>\n@param rowId The id of the row in the table.*/",
          "setterMethodName" : "setRowId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>The id of the row in the table.</p>\n@param rowId The id of the row in the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "<p>The id of the row in the table.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "rowId", "cells" ],
      "shapeName" : "TableRow",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "TableRow",
        "variableName" : "tableRow",
        "variableType" : "TableRow",
        "documentation" : null,
        "simpleType" : "TableRow",
        "variableSetterType" : "TableRow"
      },
      "wrapper" : false
    },
    "ThrottlingException" : {
      "c2jName" : "ThrottlingException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>Tps(transactions per second) rate reached.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ThrottlingException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.ThrottlingException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "ThrottlingException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ThrottlingException",
        "variableName" : "throttlingException",
        "variableType" : "ThrottlingException",
        "documentation" : null,
        "simpleType" : "ThrottlingException",
        "variableSetterType" : "ThrottlingException"
      },
      "wrapper" : false
    },
    "UpdateRowData" : {
      "c2jName" : "UpdateRowData",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> Data needed to create a single row in a table as part of the BatchCreateTableRows request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.UpdateRowData",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rowId",
        "c2jShape" : "RowId",
        "deprecated" : false,
        "documentation" : "<p> The id of the row that needs to be updated. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@param rowId The id of the row that needs to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowId",
        "getterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@return The id of the row that needs to be updated.*/",
        "getterMethodName" : "getRowId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RowId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@param rowId The id of the row that needs to be updated.*/",
        "setterMethodName" : "setRowId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@param rowId The id of the row that needs to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rowId",
          "variableType" : "String",
          "documentation" : "<p> The id of the row that needs to be updated. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cellsToUpdate",
        "c2jShape" : "RowDataInput",
        "deprecated" : false,
        "documentation" : "<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCellsToUpdate",
        "getterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@return A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
        "getterMethodName" : "getCellsToUpdate",
        "getterModel" : {
          "returnType" : "java.util.Map<String,CellInput>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cellsToUpdate",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cellsToUpdate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "CellInput",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "CellInput",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CellInput",
              "variableName" : "value",
              "variableType" : "CellInput",
              "documentation" : "",
              "simpleType" : "CellInput",
              "variableSetterType" : "CellInput"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CellInput",
              "variableName" : "value",
              "variableType" : "CellInput",
              "documentation" : "",
              "simpleType" : "CellInput",
              "variableSetterType" : "CellInput"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "CellInput",
          "entryType" : "Map.Entry<String, CellInput>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,CellInput>",
          "templateType" : "java.util.Map<String,CellInput>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "CellsToUpdate",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
        "setterMethodName" : "setCellsToUpdate",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,CellInput>",
          "variableName" : "cellsToUpdate",
          "variableType" : "java.util.Map<String,CellInput>",
          "documentation" : "",
          "simpleType" : "Map<String,CellInput>",
          "variableSetterType" : "java.util.Map<String,CellInput>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,CellInput>",
          "variableName" : "cellsToUpdate",
          "variableType" : "java.util.Map<String,CellInput>",
          "documentation" : "<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
          "simpleType" : "Map<String,CellInput>",
          "variableSetterType" : "java.util.Map<String,CellInput>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "CellsToUpdate" : {
          "c2jName" : "cellsToUpdate",
          "c2jShape" : "RowDataInput",
          "deprecated" : false,
          "documentation" : "<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCellsToUpdate",
          "getterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@return A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
          "getterMethodName" : "getCellsToUpdate",
          "getterModel" : {
            "returnType" : "java.util.Map<String,CellInput>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cellsToUpdate",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cellsToUpdate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "CellInput",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "CellInput",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CellInput",
                "variableName" : "value",
                "variableType" : "CellInput",
                "documentation" : "",
                "simpleType" : "CellInput",
                "variableSetterType" : "CellInput"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CellInput",
                "variableName" : "value",
                "variableType" : "CellInput",
                "documentation" : "",
                "simpleType" : "CellInput",
                "variableSetterType" : "CellInput"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "CellInput",
            "entryType" : "Map.Entry<String, CellInput>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,CellInput>",
            "templateType" : "java.util.Map<String,CellInput>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "CellsToUpdate",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
          "setterMethodName" : "setCellsToUpdate",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,CellInput>",
            "variableName" : "cellsToUpdate",
            "variableType" : "java.util.Map<String,CellInput>",
            "documentation" : "",
            "simpleType" : "Map<String,CellInput>",
            "variableSetterType" : "java.util.Map<String,CellInput>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,CellInput>",
            "variableName" : "cellsToUpdate",
            "variableType" : "java.util.Map<String,CellInput>",
            "documentation" : "<p> A map representing the cells to update in the given row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
            "simpleType" : "Map<String,CellInput>",
            "variableSetterType" : "java.util.Map<String,CellInput>"
          },
          "xmlNameSpaceUri" : null
        },
        "RowId" : {
          "c2jName" : "rowId",
          "c2jShape" : "RowId",
          "deprecated" : false,
          "documentation" : "<p> The id of the row that needs to be updated. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@param rowId The id of the row that needs to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowId",
          "getterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@return The id of the row that needs to be updated.*/",
          "getterMethodName" : "getRowId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RowId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@param rowId The id of the row that needs to be updated.*/",
          "setterMethodName" : "setRowId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The id of the row that needs to be updated. </p>\n@param rowId The id of the row that needs to be updated.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rowId",
            "variableType" : "String",
            "documentation" : "<p> The id of the row that needs to be updated. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "rowId", "cellsToUpdate" ],
      "shapeName" : "UpdateRowData",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpdateRowData",
        "variableName" : "updateRowData",
        "variableType" : "UpdateRowData",
        "documentation" : null,
        "simpleType" : "UpdateRowData",
        "variableSetterType" : "UpdateRowData"
      },
      "wrapper" : false
    },
    "UpsertAction" : {
      "c2jName" : "UpsertAction",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "",
      "endpointDiscoveryMembers" : null,
      "enums" : [ {
        "name" : "UPDATED",
        "value" : "UPDATED"
      }, {
        "name" : "APPENDED",
        "value" : "APPENDED"
      } ],
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.enum.UpsertAction",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : null,
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.enum",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : null,
      "shapeName" : "UpsertAction",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpsertAction",
        "variableName" : "upsertAction",
        "variableType" : "UpsertAction",
        "documentation" : null,
        "simpleType" : "UpsertAction",
        "variableSetterType" : "UpsertAction"
      },
      "wrapper" : false
    },
    "UpsertRowData" : {
      "c2jName" : "UpsertRowData",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> Data needed to upsert rows in a table as part of a single item in the BatchUpsertTableRows request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.UpsertRowData",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "batchItemId",
        "c2jShape" : "BatchItemId",
        "deprecated" : false,
        "documentation" : "<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withBatchItemId",
        "getterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@return An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
        "getterMethodName" : "getBatchItemId",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "batchItemId",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "batchItemId",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "BatchItemId",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
        "setterMethodName" : "setBatchItemId",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "batchItemId",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "batchItemId",
          "variableType" : "String",
          "documentation" : "<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "filter",
        "c2jShape" : "Filter",
        "deprecated" : false,
        "documentation" : "<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@param filter The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withFilter",
        "getterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@return The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.*/",
        "getterMethodName" : "getFilter",
        "getterModel" : {
          "returnType" : "Filter",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "filter",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "filter",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "StructuredPojo",
        "marshallingType" : "STRUCTURED",
        "name" : "Filter",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@param filter The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.*/",
        "setterMethodName" : "setFilter",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Filter",
          "variableName" : "filter",
          "variableType" : "Filter",
          "documentation" : "",
          "simpleType" : "Filter",
          "variableSetterType" : "Filter"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@param filter The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "Filter",
          "variableName" : "filter",
          "variableType" : "Filter",
          "documentation" : "<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>",
          "simpleType" : "Filter",
          "variableSetterType" : "Filter"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "cellsToUpdate",
        "c2jShape" : "RowDataInput",
        "deprecated" : false,
        "documentation" : "<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withCellsToUpdate",
        "getterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@return A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
        "getterMethodName" : "getCellsToUpdate",
        "getterModel" : {
          "returnType" : "java.util.Map<String,CellInput>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "cellsToUpdate",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "cellsToUpdate",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : true,
        "mapModel" : {
          "implType" : "java.util.HashMap",
          "interfaceType" : "java.util.Map",
          "keyLocationName" : "key",
          "keyModel" : null,
          "keyType" : "String",
          "valueLocationName" : "value",
          "valueModel" : {
            "c2jName" : "value",
            "c2jShape" : "CellInput",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withValue",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getValue",
            "getterModel" : {
              "returnType" : "CellInput",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "value",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "value",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "StructuredPojo",
            "marshallingType" : "STRUCTURED",
            "name" : "Value",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param value */",
            "setterMethodName" : "setValue",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CellInput",
              "variableName" : "value",
              "variableType" : "CellInput",
              "documentation" : "",
              "simpleType" : "CellInput",
              "variableSetterType" : "CellInput"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : false,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "CellInput",
              "variableName" : "value",
              "variableType" : "CellInput",
              "documentation" : "",
              "simpleType" : "CellInput",
              "variableSetterType" : "CellInput"
            },
            "xmlNameSpaceUri" : null
          },
          "valueType" : "CellInput",
          "entryType" : "Map.Entry<String, CellInput>",
          "keySimple" : true,
          "templateImplType" : "java.util.HashMap<String,CellInput>",
          "templateType" : "java.util.Map<String,CellInput>",
          "valueList" : false,
          "valueSimple" : false
        },
        "marshallingTargetClass" : "Map",
        "marshallingType" : "MAP",
        "name" : "CellsToUpdate",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
        "setterMethodName" : "setCellsToUpdate",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,CellInput>",
          "variableName" : "cellsToUpdate",
          "variableType" : "java.util.Map<String,CellInput>",
          "documentation" : "",
          "simpleType" : "Map<String,CellInput>",
          "variableSetterType" : "java.util.Map<String,CellInput>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.Map<String,CellInput>",
          "variableName" : "cellsToUpdate",
          "variableType" : "java.util.Map<String,CellInput>",
          "documentation" : "<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
          "simpleType" : "Map<String,CellInput>",
          "variableSetterType" : "java.util.Map<String,CellInput>"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "BatchItemId" : {
          "c2jName" : "batchItemId",
          "c2jShape" : "BatchItemId",
          "deprecated" : false,
          "documentation" : "<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withBatchItemId",
          "getterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@return An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
          "getterMethodName" : "getBatchItemId",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "batchItemId",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "batchItemId",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "BatchItemId",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.*/",
          "setterMethodName" : "setBatchItemId",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "batchItemId",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>\n@param batchItemId An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "batchItemId",
            "variableType" : "String",
            "documentation" : "<p> An external identifier that represents a single item in the request that is being upserted as part of the BatchUpsertTableRows request. This can be any string that you can use to identify the item in the request. The BatchUpsertTableRows API puts the batch item id in the results to allow you to link data in the request to data in the results. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        },
        "CellsToUpdate" : {
          "c2jName" : "cellsToUpdate",
          "c2jShape" : "RowDataInput",
          "deprecated" : false,
          "documentation" : "<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withCellsToUpdate",
          "getterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@return A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
          "getterMethodName" : "getCellsToUpdate",
          "getterModel" : {
            "returnType" : "java.util.Map<String,CellInput>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "cellsToUpdate",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "cellsToUpdate",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : true,
          "mapModel" : {
            "implType" : "java.util.HashMap",
            "interfaceType" : "java.util.Map",
            "keyLocationName" : "key",
            "keyModel" : null,
            "keyType" : "String",
            "valueLocationName" : "value",
            "valueModel" : {
              "c2jName" : "value",
              "c2jShape" : "CellInput",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withValue",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getValue",
              "getterModel" : {
                "returnType" : "CellInput",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "value",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "value",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "StructuredPojo",
              "marshallingType" : "STRUCTURED",
              "name" : "Value",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param value */",
              "setterMethodName" : "setValue",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CellInput",
                "variableName" : "value",
                "variableType" : "CellInput",
                "documentation" : "",
                "simpleType" : "CellInput",
                "variableSetterType" : "CellInput"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : false,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param value \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "CellInput",
                "variableName" : "value",
                "variableType" : "CellInput",
                "documentation" : "",
                "simpleType" : "CellInput",
                "variableSetterType" : "CellInput"
              },
              "xmlNameSpaceUri" : null
            },
            "valueType" : "CellInput",
            "entryType" : "Map.Entry<String, CellInput>",
            "keySimple" : true,
            "templateImplType" : "java.util.HashMap<String,CellInput>",
            "templateType" : "java.util.Map<String,CellInput>",
            "valueList" : false,
            "valueSimple" : false
          },
          "marshallingTargetClass" : "Map",
          "marshallingType" : "MAP",
          "name" : "CellsToUpdate",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.*/",
          "setterMethodName" : "setCellsToUpdate",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,CellInput>",
            "variableName" : "cellsToUpdate",
            "variableType" : "java.util.Map<String,CellInput>",
            "documentation" : "",
            "simpleType" : "Map<String,CellInput>",
            "variableSetterType" : "java.util.Map<String,CellInput>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>\n@param cellsToUpdate A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.Map<String,CellInput>",
            "variableName" : "cellsToUpdate",
            "variableType" : "java.util.Map<String,CellInput>",
            "documentation" : "<p> A map representing the cells to update for the matching rows or an appended row. The key is the column id of the cell and the value is the CellInput object that represents the data to set in that cell. </p>",
            "simpleType" : "Map<String,CellInput>",
            "variableSetterType" : "java.util.Map<String,CellInput>"
          },
          "xmlNameSpaceUri" : null
        },
        "Filter" : {
          "c2jName" : "filter",
          "c2jShape" : "Filter",
          "deprecated" : false,
          "documentation" : "<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@param filter The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withFilter",
          "getterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@return The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.*/",
          "getterMethodName" : "getFilter",
          "getterModel" : {
            "returnType" : "Filter",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "filter",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "filter",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "StructuredPojo",
          "marshallingType" : "STRUCTURED",
          "name" : "Filter",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@param filter The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.*/",
          "setterMethodName" : "setFilter",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Filter",
            "variableName" : "filter",
            "variableType" : "Filter",
            "documentation" : "",
            "simpleType" : "Filter",
            "variableSetterType" : "Filter"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>\n@param filter The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "Filter",
            "variableName" : "filter",
            "variableType" : "Filter",
            "documentation" : "<p> The filter formula to use to find existing matching rows to update. The formula needs to return zero or more rows. If the formula returns 0 rows, then a new row will be appended in the target table. If the formula returns one or more rows, then the returned rows will be updated. </p> <p> Note that the filter formula needs to return rows from the target table for the upsert operation to succeed. If the filter formula has a syntax error or it doesn't evaluate to zero or more rows in the target table for any one item in the input list, then the entire BatchUpsertTableRows request fails and no updates are made to the table. </p>",
            "simpleType" : "Filter",
            "variableSetterType" : "Filter"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "batchItemId", "filter", "cellsToUpdate" ],
      "shapeName" : "UpsertRowData",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpsertRowData",
        "variableName" : "upsertRowData",
        "variableType" : "UpsertRowData",
        "documentation" : null,
        "simpleType" : "UpsertRowData",
        "variableSetterType" : "UpsertRowData"
      },
      "wrapper" : false
    },
    "UpsertRowsResult" : {
      "c2jName" : "UpsertRowsResult",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> An object that represents the result of a single upsert row request. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.UpsertRowsResult",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rowIds",
        "c2jShape" : "RowIdList",
        "deprecated" : false,
        "documentation" : "<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n@param rowIds The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRowIds",
        "getterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n@return The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.*/",
        "getterMethodName" : "getRowIds",
        "getterModel" : {
          "returnType" : "java.util.List<String>",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rowIds",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rowIds",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : true,
        "listModel" : {
          "implType" : "java.util.ArrayList",
          "interfaceType" : "java.util.List",
          "listMemberModel" : {
            "c2jName" : "member",
            "c2jShape" : "RowId",
            "deprecated" : false,
            "documentation" : "",
            "endpointDiscoveryId" : false,
            "enumType" : null,
            "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "fluentSetterMethodName" : "withMember",
            "getterDocumentation" : "/**\n@return */",
            "getterMethodName" : "getMember",
            "getterModel" : {
              "returnType" : "String",
              "documentation" : null
            },
            "http" : {
              "additionalMarshallingPath" : null,
              "additionalUnmarshallingPath" : null,
              "flattened" : false,
              "greedy" : false,
              "header" : false,
              "isPayload" : false,
              "isStreaming" : false,
              "location" : null,
              "marshallLocation" : "PAYLOAD",
              "marshallLocationName" : "member",
              "queryString" : false,
              "requiresLength" : false,
              "statusCode" : false,
              "unmarshallLocationName" : "member",
              "uri" : false
            },
            "idempotencyToken" : false,
            "isBinary" : false,
            "jsonValue" : false,
            "list" : false,
            "listModel" : null,
            "map" : false,
            "mapModel" : null,
            "marshallingTargetClass" : "String",
            "marshallingType" : "STRING",
            "name" : "Member",
            "sensitive" : false,
            "setterDocumentation" : "/**\n@param member */",
            "setterMethodName" : "setMember",
            "setterModel" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "shouldEmitLegacyEnumSetter" : false,
            "shouldFullyQualify" : false,
            "simple" : true,
            "unmarshallingType" : null,
            "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
            "variable" : {
              "timestampFormat" : null,
              "variableDeclarationType" : "String",
              "variableName" : "member",
              "variableType" : "String",
              "documentation" : "",
              "simpleType" : "String",
              "variableSetterType" : "String"
            },
            "xmlNameSpaceUri" : null
          },
          "memberLocationName" : null,
          "memberType" : "String",
          "map" : false,
          "marshallNonAutoConstructedEmptyLists" : false,
          "memberAdditionalMarshallingPath" : null,
          "memberAdditionalUnmarshallingPath" : null,
          "sendEmptyQueryString" : false,
          "simple" : true,
          "simpleType" : "String",
          "templateImplType" : "java.util.ArrayList<String>",
          "templateType" : "java.util.List<String>"
        },
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "List",
        "marshallingType" : "LIST",
        "name" : "RowIds",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n@param rowIds The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.*/",
        "setterMethodName" : "setRowIds",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : false,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIds(java.util.Collection)} or {@link #withRowIds(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIds The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "java.util.List<String>",
          "variableName" : "rowIds",
          "variableType" : "java.util.List<String>",
          "documentation" : "<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>",
          "simpleType" : "List<String>",
          "variableSetterType" : "java.util.Collection<String>"
        },
        "xmlNameSpaceUri" : null
      }, {
        "c2jName" : "upsertAction",
        "c2jShape" : "UpsertAction",
        "deprecated" : false,
        "documentation" : "<p> The result of the upsert action. </p>",
        "endpointDiscoveryId" : false,
        "enumType" : "UpsertAction",
        "fluentSetterDocumentation" : "/**<p> The result of the upsert action. </p>\n@param upsertAction The result of the upsert action.\n@return Returns a reference to this object so that method calls can be chained together.\n@see UpsertAction*/",
        "fluentSetterMethodName" : "withUpsertAction",
        "getterDocumentation" : "/**<p> The result of the upsert action. </p>\n@return The result of the upsert action.\n@see UpsertAction*/",
        "getterMethodName" : "getUpsertAction",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "upsertAction",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "upsertAction",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "UpsertAction",
        "sensitive" : false,
        "setterDocumentation" : "/**<p> The result of the upsert action. </p>\n@param upsertAction The result of the upsert action.\n@see UpsertAction*/",
        "setterMethodName" : "setUpsertAction",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "upsertAction",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p> The result of the upsert action. </p>\n@param upsertAction The result of the upsert action.\n@return Returns a reference to this object so that method calls can be chained together.\n@see UpsertAction*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "upsertAction",
          "variableType" : "String",
          "documentation" : "<p> The result of the upsert action. </p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RowIds" : {
          "c2jName" : "rowIds",
          "c2jShape" : "RowIdList",
          "deprecated" : false,
          "documentation" : "<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n@param rowIds The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRowIds",
          "getterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n@return The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.*/",
          "getterMethodName" : "getRowIds",
          "getterModel" : {
            "returnType" : "java.util.List<String>",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rowIds",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rowIds",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : true,
          "listModel" : {
            "implType" : "java.util.ArrayList",
            "interfaceType" : "java.util.List",
            "listMemberModel" : {
              "c2jName" : "member",
              "c2jShape" : "RowId",
              "deprecated" : false,
              "documentation" : "",
              "endpointDiscoveryId" : false,
              "enumType" : null,
              "fluentSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "fluentSetterMethodName" : "withMember",
              "getterDocumentation" : "/**\n@return */",
              "getterMethodName" : "getMember",
              "getterModel" : {
                "returnType" : "String",
                "documentation" : null
              },
              "http" : {
                "additionalMarshallingPath" : null,
                "additionalUnmarshallingPath" : null,
                "flattened" : false,
                "greedy" : false,
                "header" : false,
                "isPayload" : false,
                "isStreaming" : false,
                "location" : null,
                "marshallLocation" : "PAYLOAD",
                "marshallLocationName" : "member",
                "queryString" : false,
                "requiresLength" : false,
                "statusCode" : false,
                "unmarshallLocationName" : "member",
                "uri" : false
              },
              "idempotencyToken" : false,
              "isBinary" : false,
              "jsonValue" : false,
              "list" : false,
              "listModel" : null,
              "map" : false,
              "mapModel" : null,
              "marshallingTargetClass" : "String",
              "marshallingType" : "STRING",
              "name" : "Member",
              "sensitive" : false,
              "setterDocumentation" : "/**\n@param member */",
              "setterMethodName" : "setMember",
              "setterModel" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "shouldEmitLegacyEnumSetter" : false,
              "shouldFullyQualify" : false,
              "simple" : true,
              "unmarshallingType" : null,
              "varargSetterDocumentation" : "/**\n@param member \n@return Returns a reference to this object so that method calls can be chained together.*/",
              "variable" : {
                "timestampFormat" : null,
                "variableDeclarationType" : "String",
                "variableName" : "member",
                "variableType" : "String",
                "documentation" : "",
                "simpleType" : "String",
                "variableSetterType" : "String"
              },
              "xmlNameSpaceUri" : null
            },
            "memberLocationName" : null,
            "memberType" : "String",
            "map" : false,
            "marshallNonAutoConstructedEmptyLists" : false,
            "memberAdditionalMarshallingPath" : null,
            "memberAdditionalUnmarshallingPath" : null,
            "sendEmptyQueryString" : false,
            "simple" : true,
            "simpleType" : "String",
            "templateImplType" : "java.util.ArrayList<String>",
            "templateType" : "java.util.List<String>"
          },
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "List",
          "marshallingType" : "LIST",
          "name" : "RowIds",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n@param rowIds The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.*/",
          "setterMethodName" : "setRowIds",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : false,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>\n<p><b>NOTE:</b> This method appends the values to the existing list (if any). Use {@link #setRowIds(java.util.Collection)} or {@link #withRowIds(java.util.Collection)} if you want to override the existing values.</p>\n@param rowIds The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "java.util.List<String>",
            "variableName" : "rowIds",
            "variableType" : "java.util.List<String>",
            "documentation" : "<p> The list of row ids that were changed as part of an upsert row operation. If the upsert resulted in an update, this list could potentially contain multiple rows that matched the filter and hence got updated. If the upsert resulted in an append, this list would only have the single row that was appended. </p>",
            "simpleType" : "List<String>",
            "variableSetterType" : "java.util.Collection<String>"
          },
          "xmlNameSpaceUri" : null
        },
        "UpsertAction" : {
          "c2jName" : "upsertAction",
          "c2jShape" : "UpsertAction",
          "deprecated" : false,
          "documentation" : "<p> The result of the upsert action. </p>",
          "endpointDiscoveryId" : false,
          "enumType" : "UpsertAction",
          "fluentSetterDocumentation" : "/**<p> The result of the upsert action. </p>\n@param upsertAction The result of the upsert action.\n@return Returns a reference to this object so that method calls can be chained together.\n@see UpsertAction*/",
          "fluentSetterMethodName" : "withUpsertAction",
          "getterDocumentation" : "/**<p> The result of the upsert action. </p>\n@return The result of the upsert action.\n@see UpsertAction*/",
          "getterMethodName" : "getUpsertAction",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "upsertAction",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "upsertAction",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "UpsertAction",
          "sensitive" : false,
          "setterDocumentation" : "/**<p> The result of the upsert action. </p>\n@param upsertAction The result of the upsert action.\n@see UpsertAction*/",
          "setterMethodName" : "setUpsertAction",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "upsertAction",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p> The result of the upsert action. </p>\n@param upsertAction The result of the upsert action.\n@return Returns a reference to this object so that method calls can be chained together.\n@see UpsertAction*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "upsertAction",
            "variableType" : "String",
            "documentation" : "<p> The result of the upsert action. </p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "rowIds", "upsertAction" ],
      "shapeName" : "UpsertRowsResult",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "UpsertRowsResult",
        "variableName" : "upsertRowsResult",
        "variableType" : "UpsertRowsResult",
        "documentation" : null,
        "simpleType" : "UpsertRowsResult",
        "variableSetterType" : "UpsertRowsResult"
      },
      "wrapper" : false
    },
    "ValidationException" : {
      "c2jName" : "ValidationException",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p> Request is invalid. The message in the response contains details on why the request is invalid. </p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : "ValidationException",
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.exception.ValidationException",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ ],
      "membersAsMap" : { },
      "packageName" : "com.amazonaws.services.honeycode.exception",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "message" ],
      "shapeName" : "ValidationException",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : null,
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "ValidationException",
        "variableName" : "validationException",
        "variableType" : "ValidationException",
        "documentation" : null,
        "simpleType" : "ValidationException",
        "variableSetterType" : "ValidationException"
      },
      "wrapper" : false
    },
    "VariableValue" : {
      "c2jName" : "VariableValue",
      "customization" : {
        "artificialResultWrapper" : null,
        "skipGeneratingMarshaller" : false,
        "skipGeneratingModelClass" : false,
        "skipGeneratingUnmarshaller" : false
      },
      "deprecated" : false,
      "documentation" : "<p>The input variables to the app to be used by the InvokeScreenAutomation action request.</p>",
      "endpointDiscoveryMembers" : null,
      "enums" : null,
      "errorCode" : null,
      "fullyQualifiedName" : "com.amazonaws.services.honeycode.model.VariableValue",
      "hasHeaderMember" : false,
      "hasPayloadMember" : false,
      "hasRequiresLengthMember" : false,
      "hasStatusCodeMember" : false,
      "hasStreamingMember" : false,
      "marshaller" : null,
      "members" : [ {
        "c2jName" : "rawValue",
        "c2jShape" : "RawValue",
        "deprecated" : false,
        "documentation" : "<p>Raw value of the variable.</p>",
        "endpointDiscoveryId" : false,
        "enumType" : null,
        "fluentSetterDocumentation" : "/**<p>Raw value of the variable.</p>\n@param rawValue Raw value of the variable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "fluentSetterMethodName" : "withRawValue",
        "getterDocumentation" : "/**<p>Raw value of the variable.</p>\n@return Raw value of the variable.*/",
        "getterMethodName" : "getRawValue",
        "getterModel" : {
          "returnType" : "String",
          "documentation" : null
        },
        "http" : {
          "additionalMarshallingPath" : null,
          "additionalUnmarshallingPath" : null,
          "flattened" : false,
          "greedy" : false,
          "header" : false,
          "isPayload" : false,
          "isStreaming" : false,
          "location" : null,
          "marshallLocation" : "PAYLOAD",
          "marshallLocationName" : "rawValue",
          "queryString" : false,
          "requiresLength" : false,
          "statusCode" : false,
          "unmarshallLocationName" : "rawValue",
          "uri" : false
        },
        "idempotencyToken" : false,
        "isBinary" : false,
        "jsonValue" : false,
        "list" : false,
        "listModel" : null,
        "map" : false,
        "mapModel" : null,
        "marshallingTargetClass" : "String",
        "marshallingType" : "STRING",
        "name" : "RawValue",
        "sensitive" : false,
        "setterDocumentation" : "/**<p>Raw value of the variable.</p>\n@param rawValue Raw value of the variable.*/",
        "setterMethodName" : "setRawValue",
        "setterModel" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rawValue",
          "variableType" : "String",
          "documentation" : "",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "shouldEmitLegacyEnumSetter" : false,
        "shouldFullyQualify" : false,
        "simple" : true,
        "unmarshallingType" : null,
        "varargSetterDocumentation" : "/**<p>Raw value of the variable.</p>\n@param rawValue Raw value of the variable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
        "variable" : {
          "timestampFormat" : null,
          "variableDeclarationType" : "String",
          "variableName" : "rawValue",
          "variableType" : "String",
          "documentation" : "<p>Raw value of the variable.</p>",
          "simpleType" : "String",
          "variableSetterType" : "String"
        },
        "xmlNameSpaceUri" : null
      } ],
      "membersAsMap" : {
        "RawValue" : {
          "c2jName" : "rawValue",
          "c2jShape" : "RawValue",
          "deprecated" : false,
          "documentation" : "<p>Raw value of the variable.</p>",
          "endpointDiscoveryId" : false,
          "enumType" : null,
          "fluentSetterDocumentation" : "/**<p>Raw value of the variable.</p>\n@param rawValue Raw value of the variable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "fluentSetterMethodName" : "withRawValue",
          "getterDocumentation" : "/**<p>Raw value of the variable.</p>\n@return Raw value of the variable.*/",
          "getterMethodName" : "getRawValue",
          "getterModel" : {
            "returnType" : "String",
            "documentation" : null
          },
          "http" : {
            "additionalMarshallingPath" : null,
            "additionalUnmarshallingPath" : null,
            "flattened" : false,
            "greedy" : false,
            "header" : false,
            "isPayload" : false,
            "isStreaming" : false,
            "location" : null,
            "marshallLocation" : "PAYLOAD",
            "marshallLocationName" : "rawValue",
            "queryString" : false,
            "requiresLength" : false,
            "statusCode" : false,
            "unmarshallLocationName" : "rawValue",
            "uri" : false
          },
          "idempotencyToken" : false,
          "isBinary" : false,
          "jsonValue" : false,
          "list" : false,
          "listModel" : null,
          "map" : false,
          "mapModel" : null,
          "marshallingTargetClass" : "String",
          "marshallingType" : "STRING",
          "name" : "RawValue",
          "sensitive" : false,
          "setterDocumentation" : "/**<p>Raw value of the variable.</p>\n@param rawValue Raw value of the variable.*/",
          "setterMethodName" : "setRawValue",
          "setterModel" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rawValue",
            "variableType" : "String",
            "documentation" : "",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "shouldEmitLegacyEnumSetter" : false,
          "shouldFullyQualify" : false,
          "simple" : true,
          "unmarshallingType" : null,
          "varargSetterDocumentation" : "/**<p>Raw value of the variable.</p>\n@param rawValue Raw value of the variable.\n@return Returns a reference to this object so that method calls can be chained together.*/",
          "variable" : {
            "timestampFormat" : null,
            "variableDeclarationType" : "String",
            "variableName" : "rawValue",
            "variableType" : "String",
            "documentation" : "<p>Raw value of the variable.</p>",
            "simpleType" : "String",
            "variableSetterType" : "String"
          },
          "xmlNameSpaceUri" : null
        }
      },
      "packageName" : "com.amazonaws.services.honeycode.model",
      "requestSignerAware" : false,
      "requestSignerClassFqcn" : null,
      "required" : [ "rawValue" ],
      "shapeName" : "VariableValue",
      "signerAware" : false,
      "signerType" : null,
      "unmarshaller" : {
        "flattened" : false,
        "resultWrapper" : null
      },
      "variable" : {
        "timestampFormat" : null,
        "variableDeclarationType" : "VariableValue",
        "variableName" : "variableValue",
        "variableType" : "VariableValue",
        "documentation" : null,
        "simpleType" : "VariableValue",
        "variableSetterType" : "VariableValue"
      },
      "wrapper" : false
    }
  },
  "clientConfigFactory" : "ClientConfigurationFactory",
  "examples" : {
    "examples" : { },
    "version" : "1.0"
  },
  "exceptionUnmarshallerImpl" : null,
  "fileHeader" : "/*\n * Copyright 2016-2021 Amazon.com, Inc. or its affiliates. All Rights\n * Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n * or in the \"license\" file accompanying this file. This file is distributed\n * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n * express or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */",
  "hasWaiters" : false,
  "sdkBaseResponseFqcn" : "com.amazonaws.AmazonWebServiceResult<com.amazonaws.ResponseMetadata>",
  "sdkModeledExceptionBaseClassName" : "AmazonHoneycodeException",
  "sdkModeledExceptionBaseFqcn" : "com.amazonaws.services.honeycode.model.AmazonHoneycodeException",
  "serviceBaseExceptionFqcn" : "com.amazonaws.AmazonServiceException",
  "transformPackage" : "com.amazonaws.services.honeycode.model.transform"
}